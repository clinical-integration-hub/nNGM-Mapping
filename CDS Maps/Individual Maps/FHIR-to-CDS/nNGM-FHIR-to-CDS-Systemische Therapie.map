/// version = 0.1
/// title = "nNGM: Systemische Therapie - FHIR to CTS"

/*
    TODO
    - find out why output is produced 4 times 

*/

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_SystemischeTherapieCTS" = nNGM_Mapping_SystemischeTherapieCTS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformSystemischeTherapieCTS(source src: Bundle, target tgt: BackboneElement)
{
    // Metadata
    src -> tgt.crfid = 'SY1';
    src -> tgt.type = 'save';
    
    src.entry as entry then
    {
        // MedicationAdministration
        entry.resource as medicationAdministration where "resource is MedicationAdministration and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/MedicationAdministration'" then
        {
            // Diagnostikfall-ID
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.context as context, context.identifier as identifier then
                {
                    medicationAdministration -> data.blockindex = 0;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_1600';
                    identifier.value as value -> data.values as values, values.unit = 'count', values.value = value;
                };
            };

            // Therapieinformationen
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.supportingInformation as supportingInformation then
                {
                    medicationAdministration -> data.blockindex = 1;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_2336';
                    supportingInformation.display as display -> data.values as values, values.value = display;
                };
            };

            // Therapieinformationen war hilfreich
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.supportingInformation as supInfo, supInfo.extension as therapieInformationen, therapieInformationen.extension as hilfreich where "extension.url = 'hilfreich'" then
                {
                    hilfreich.valueBoolean as valueBoolean where "valueBoolean.extension.exists().not() and valueBoolean = true" then
                    {
                        medicationAdministration -> data.blockindex = 1;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_2337';
                        valueBoolean -> data.values as values, values.value = 'Ja';
                    };

                    hilfreich.valueBoolean as valueBoolean where "valueBoolean.extension.exists().not() and valueBoolean = false" then
                    {
                        medicationAdministration -> data.blockindex = 1;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_2337';
                        valueBoolean -> data.values as values, values.value = 'Nein';
                    };

                    hilfreich.valueBoolean as valueBoolean where "valueBoolean.extension.exists()" then
                    {
                        valueBoolean.extension as dataAbsentReason where "extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason'" then
                        {
                            medicationAdministration -> data.blockindex = 1;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_2337';
                            valueBoolean -> data.values as values, values.value = 'N\/A';
                        };
                    };
                };
            };

            // Therapieinformationen wurde umgesetzt
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.supportingInformation as supportingInformation, supportingInformation.extension as therapieInformationen, therapieInformationen.extension as umgesetzt where "extension.url = 'umgesetzt'" then
                {
                    umgesetzt.valueBoolean as valueBoolean where "valueBoolean.extension.exists().not() and valueBoolean = true" then
                    {
                        medicationAdministration -> data.blockindex = 1;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_2338';
                        valueBoolean -> data.values as values, values.value = 'Ja';
                    };

                    umgesetzt.valueBoolean as valueBoolean where "valueBoolean.extension.exists().not() and valueBoolean = false" then
                    {
                        medicationAdministration -> data.blockindex = 1;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_2338';
                        valueBoolean -> data.values as values, values.value = 'Nein';
                    };

                    umgesetzt.valueBoolean as valueBoolean where "valueBoolean.extension.exists()" then
                    {
                        valueBoolean.extension as dataAbsentReason where "extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason'" then
                        {
                            medicationAdministration -> data.blockindex = 1;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_2338';
                            valueBoolean -> data.values as values, values.value = 'N\/A';
                        };
                    };
                };
            };

            // Grund für die Nichtumsetzung
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.supportingInformation as supportingInformation, supportingInformation.extension as therapieInformationen, therapieInformationen.extension as nichtumsetzungGrund where "extension.url = 'nichtumsetzungGrund'" then
                {
                    medicationAdministration.supportingInformation as supportingInformation, supportingInformation.extension as therapieInformationen, therapieInformationen.extension as umgesetzt where "extension.url = 'umgesetzt' and extension.valueBoolean = false" then
                    {
                        medicationAdministration -> data.blockindex = 1;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_2339';
                        nichtumsetzungGrund.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code -> data.values as values, values.value = code;
                    };
                };
            };

            // Therapiebeginn
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.effective as effective, effective.start as start then
                {
                    medicationAdministration -> data.blockindex = 2;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_1246';
                    start -> data.values as values, values.value = start;
                };
            };

        // Therapieende
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.effective as effective, effective.end as end then
                {
                    medicationAdministration -> data.blockindex = 2;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_1247';
                    end -> data.values as values, values.value = end;
                };
            };

            // Durchführende Einrichtung
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.performer as performer, performer.actor as actor, actor.display as display then
                {
                    medicationAdministration -> data.blockindex = 2;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_1242';
                    display -> data.values as values, values.value = display;
                };
            };

            // Therapeutische Intention
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.reasonCode as reasonCode where "reasonCode.extension.exists().not()" then
                {
                    reasonCode.extension as extension where "extension.valueCode = 'not-applicable'" then
                    {
                        medicationAdministration -> data.blockindex = 2;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1243';
                        medicationAdministration -> data.values as values, values.value = 'N\/A';
                    };
                    
                    reasonCode.coding as coding where "coding.system = 'http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie'" then 
                    {
                        // palliativ
                        coding.code as code where "code = 'palliativ' or code ='Palliativ'" then
                        {
                            medicationAdministration -> data.blockindex = 2;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_1243';
                            code -> data.values as values, values.value = 'Palliativ';
                        };

                        // kurativ
                        coding.code as code where "code = 'kurativ' or code = 'Kurativ'" then
                        {
                            medicationAdministration -> data.blockindex = 2;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_1243';
                            code -> data.values as values, values.value = 'Kurativ';
                        };
                        
                        // adjuvant
                        coding.code as code where "code = 'adjuvant' or code = 'Adjuvant'" then
                        {
                            medicationAdministration -> data.blockindex = 2;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_1243';
                            code -> data.values as values, values.value = 'Adjuvant';
                        };
                        
                        // neoadjuvant
                        coding.code as code where "code = 'neoadjuvant' or code = 'Neoadjuvant'" then
                        {
                            medicationAdministration -> data.blockindex = 2;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_1243';
                            code -> data.values as values, values.value = 'Neoadjuvant';
                        };

                        // definitiv mit Strahlentherapie
                        coding.code as code where "code = 'definitiv mit Strahlentherapie' or code = 'Definitiv mit Strahlentherapie'" then
                        {
                            medicationAdministration -> data.blockindex = 2;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_1243';
                            code -> data.values as values, values.value = 'Definitiv mit Strahlentherapie';
                        };
                    };
                };

                medicationAdministration.reasonCode as reasonCode where "reasonCode.extension.exists()" then
                {
                    reasonCode.extension as dataAbsentReason where "extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason'" then
                    {
                        medicationAdministration -> data.blockindex = 2;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1243';
                        dataAbsentReason.valueCode as valueCode -> data.values as values, values.value = 'N\/A';
                    };
                };
            };

            // Off-Label-Behandlung
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.extension as offLabelTherapie, offLabelTherapie  where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/OffLabelTherapie'" then
                {
                    offLabelTherapie.valueBoolean as valueBoolean where "valueBoolean = true" then
                    {
                        medicationAdministration -> data.blockindex = 2;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_2341';
                        valueBoolean -> data.values as values, values.value = 'Ja';
                    };

                    offLabelTherapie.valueBoolean as valueBoolean where "valueBoolean = false" then
                    {
                        medicationAdministration -> data.blockindex = 2;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_2341';
                        valueBoolean -> data.values as values, values.value = 'Nein';
                    };
                };
            };

            // Therapie innerhalb einer klinischen Studie
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.extension as studientherapie, studientherapie.extension as teilnahme then
                {
                    teilnahme.valueBoolean as valueBoolean where "valueBoolean = true" then
                    {
                        medicationAdministration -> data.blockindex = 2;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1245';
                        valueBoolean -> data.values as values, values.value = 'Ja';
                    };

                    teilnahme.valueBoolean as valueBoolean where "valueBoolean = false" then
                    {
                        medicationAdministration -> data.blockindex = 2;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1245';
                        valueBoolean -> data.values as values, values.value = 'Nein';
                    };
                };
            };

            // Studienname
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.extension as studientherapie, studientherapie.extension as studie then
                {
                    studie.valueReference as valueReference, valueReference.display as display then
                    {
                        medicationAdministration -> data.blockindex = 2;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1244';
                        display -> data.values as values, values.value = display;
                    };
                };
            };

            // Therapieschema
            medicationAdministration.medicationCodeableConcept as mcc, 
            mcc where "text = 'Therapieschema' and coding.exists()" -> tgt.data as data then
            {
                medicationAdministration -> data.blockindex = 3;
                medicationAdministration -> data.groupindex = 0;
                medicationAdministration -> data.itemid = 'id_1241';
                medicationAdministration -> data.values as values, values.value = evaluate(mcc, '$this.coding.first().code');
            };
        
            // Neues Therapieschema
            medicationAdministration.medicationCodeableConcept as mcc, 
            mcc where "text = 'NeuesTherapieschema' and coding.exists()" -> tgt.data as data then
            {
                medicationAdministration -> data.blockindex = 3;
                medicationAdministration -> data.groupindex = 0;
                medicationAdministration -> data.itemid = 'id_1359';
                medicationAdministration -> data.values as values, values.value = evaluate(mcc, '$this.coding.last().code');
            };

            // Änderung des Therapieschemas (Ja or Nein)
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.category as category, category.coding as coding then
                {
                    coding where "$this.code = 'C25446'" then
                    {
                        medicationAdministration -> data.blockindex = 3;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1488';
                        medicationAdministration -> data.values as values, values.value = 'yes'; 
                    };

                    coding where "$this.code = 'C85582'" then
                    {
                        medicationAdministration -> data.blockindex = 3;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1488';
                        medicationAdministration -> data.values as values, values.value = 'no'; 
                    };
                };
            };

            // Anzahl der Zyklen (ohne Erhaltung)
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.dosage as dosage, dosage.rateQuantity as rate, rate.value as value then
                {
                    medicationAdministration -> data.blockindex = 3;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_1250';
                    value -> data.values as values, values.unit = 'mm', values.value = value;
                };
            };

            // Grund für die Änderung des Therapieschemas
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.statusReason as statusReason, statusReason.text as text then
                {
                    medicationAdministration -> data.blockindex = 3;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_1464';
                    text -> data.values as values, values.value = text;
                };
            };


            // Datum der Änderung
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.effectivePeriod as effectivePeriod, effectivePeriod.start as start then
                {
                    medicationAdministration -> data.blockindex = 3;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_1465';
                    start -> data.values as values, values.value = start;
                };
            };

            // Erhaltungtherapie als Option
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.extension as erhaltungtherapie, erhaltungtherapie.extension as option where "extension.url = 'option'" then
                {
                    option.valueBoolean as valueBoolean where "valueBoolean = true" then
                    {
                        medicationAdministration -> data.blockindex = 4;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1357';
                        valueBoolean -> data.values as values, values.value = 'Ja';
                    };

                    option.valueBoolean as valueBoolean where "valueBoolean = false" then
                    {
                        medicationAdministration -> data.blockindex = 4;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1357';
                        valueBoolean -> data.values as values, values.value = 'Nein';
                    };
                };
            };

            // Für die Erhaltungstherapie verabreichtes Medikament
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.extension as erhaltungstherapie, erhaltungstherapie.extension as medikament, medikament where "url = 'medikament'" then
                {
                    medicationAdministration.extension as erhaltungstherapie, erhaltungstherapie.extension as option, option where "url = 'option' and valueBoolean = true" then
                    {
                        medicationAdministration -> data.blockindex = 4;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_2342';
                        medikament.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code -> data.values as values, values.value = code;
                    };
                };
            };

            // Art des Therapieendes
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.statusReason as statusReason where "statusReason.coding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund'" then
                {
                    statusReason.coding as coding, coding.code as code where "code = 'Regul\u00e4res Ende'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        code -> data.values as values, values.value = 'Regul\u00e4res Ende';
                    };

                    statusReason.coding as coding, coding.display as display where "code = 'Abbruch wegen Nebenwirkungen'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        display -> data.values as values, values.value = 'Abbruch wegen Nebenwirkungen';
                    };

                    statusReason.coding as coding, coding.display as display where "display = 'Pause wegen Nebenwirkungen'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        display -> data.values as values, values.value = 'Pause wegen Nebenwirkungen';
                    };
                    
                    statusReason.coding as coding, coding.code as code where "code = 'progress'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        code -> data.values as values, values.value = 'Abbruch wegen Progress';
                    };

                    statusReason.coding as coding, coding.code as code where "code = 'ablehnungPatient'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        code -> data.values as values, values.value = 'Ablehnung durch den Patienten';
                    };


                    statusReason.coding as coding, coding.code as code where "code = 'vielversprechendereTherapieoption'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        code -> data.values as values, values.value = 'Vielversprechendere Therapieoption';
                    };

                    statusReason.coding as coding, coding.code as code where "code = 'verstorben'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        code -> data.values as values, values.value = 'Patient verstorben';
                    };

                    statusReason.coding as coding, coding.code as code where "code = 'sonstiges'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        code -> data.values as values, values.value = 'Sonstiges';
                    };

                    statusReason.coding as coding, coding.code as code where "code = 'not-applicable'" then
                    {
                        medicationAdministration -> data.blockindex = 6;
                        medicationAdministration -> data.groupindex = 0;
                        medicationAdministration -> data.itemid = 'id_1356';
                        code -> data.values as values, values.value = 'N\/A';
                    };
                };

                medicationAdministration.statusReason as statusReason where "statusReason.coding.exists()" then
                {
                    medicationAdministration.status as status where "status = 'stopped'" then
                    {
                        statusReason.coding as coding, coding.code as code where "code = 'nebenwirkungen'" then
                        {
                            medicationAdministration -> data.blockindex = 6;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_1356';
                            code -> data.values as values, values.value = 'Abbruch wegen Nebenwirkungen';
                        };
                    };
                };
            };

            // Nebenwirkungen Grad III / Grad IV
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.extension as nebenwirkung, nebenwirkung.url as url where "url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/Nebenwirkung'" then
                {
                    medicationAdministration.statusReason as statusReason, statusReason.coding as coding, coding.display as display where "display = 'Pause wegen Nebenwirkungen' or display = 'Progress'" then
                    {
                        nebenwirkung.valueBoolean as valueBoolean where "valueBoolean.extension.exists().not() and valueBoolean = true" then
                        {
                            medicationAdministration -> data.blockindex = 6;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_2343';
                            valueBoolean -> data.values as values, values.value = 'Ja';
                        };

                        nebenwirkung.valueBoolean as valueBoolean where "valueBoolean.extension.exists().not() and valueBoolean = false" then
                        {
                            medicationAdministration -> data.blockindex = 6;
                            medicationAdministration -> data.groupindex = 0;
                            medicationAdministration -> data.itemid = 'id_2343';
                            valueBoolean -> data.values as values, values.value = 'Nein';
                        };

                        nebenwirkung.valueBoolean as valueBoolean where "valueBoolean.extension.exists()" then
                        {
                            valueBoolean.extension as dataAbsentReason where "extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason'" then
                            {
                                medicationAdministration -> data.blockindex = 6;
                                medicationAdministration -> data.groupindex = 0;
                                medicationAdministration -> data.itemid = 'id_2343';
                                dataAbsentReason.valueCode as valueCode -> data.values as values, values.value = 'N\/A';
                            };
                        };
                    };  
                };
            };

            // Bemerkungen
            medicationAdministration -> tgt.data as data then
            {
                medicationAdministration.note as note, note.text as text then
                {
                    medicationAdministration -> data.blockindex = 7;
                    medicationAdministration -> data.groupindex = 0;
                    medicationAdministration -> data.itemid = 'id_1205';
                    text -> data.values as values, values.value = text;
                };
            };
        };

        // Observation ECOG
        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/ecog'" then
        {
            // ECOG Performance Status bei Therapiebeginn
            observation -> tgt.data as data then
            {
                observation.valueCodeableConcept as vcc where "vcc.extension.exists().not()" then
                {
                    vcc.coding as coding, coding.code as code where "code = '0'" then
                    {
                        observation -> data.blockindex = 2;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2415';
                        code -> data.values as values, values.value = '0 - normale, uneingeschr\u00e4nkte Aktivit\u00e4t, wie vor der Erkrankung';
                    };

                    vcc.coding as coding, coding.code as code where "code = '1'" then
                    {
                        observation -> data.blockindex = 2;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2415';
                        code -> data.values as values, values.value = '1 - Einschr\u00e4nkung bei k\u00f6rperlicher Anstrengung, gehf\u00e4hig, leichte k\u00f6rperliche Arbeit m\u00f6glich';
                    };

                    vcc.coding as coding, coding.code as code where "code = '2'" then
                    {
                        observation -> data.blockindex = 2;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2415';
                        code -> data.values as values, values.value = '2 - gef\u00e4hig, Selbstversorgung m\u00f6glich, aber nicht arbeitsf\u00e4hig, kann mehr als 50 % der Wachzeit aufstehen';
                    };

                    vcc.coding as coding, coding.code as code where "code = '3'" then
                    {
                        observation -> data.blockindex = 2;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2415';
                        code -> data.values as values, values.value = '3 - nur begrenzte Selbstversorgung m\u00f6glich, 50 % oder mehr der Wachzeit an Bett oder Stuhl gebunden';
                    };

                    vcc.coding as coding, coding.code as code where "code = '4'" then
                    {
                        observation -> data.blockindex = 2;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2415';
                        code -> data.values as values, values.value = '4 - v\u00f6llig pflegebed\u00fcrftig, keinerlei Selbstversorgung m\u00f6glich, v\u00f6llig an Bett oder Stuhl gebunden';
                    };
                };

                observation.valueCodeableConcept as vcc, vcc.extension as extension where "extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason'" then
                {
                    observation -> data.blockindex = 2;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2415';
                    extension.valueCode as code -> data.values as values, values.value = 'N\/A';
                };
            };
        };

        // Observation ECOG
        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/best-response'" then
        {
            // Bestes Ansprechen
            observation -> tgt.data as data then
            {
                observation.valueCodeableConcept as vcc where "vcc.extension.exists().not()" then
                {
                    vcc.coding as coding, coding.code as code where "code = 'CR'" then
                    {
                        observation -> data.blockindex = 5;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_1354';
                        code -> data.values as values, values.value = 'Complete Response';
                    };

                    vcc.coding as coding, coding.code as code where "code = 'PR'" then
                    {
                        observation -> data.blockindex = 5;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_1354';
                        code -> data.values as values, values.value = 'Partial Response';
                    };

                    vcc.coding as coding, coding.code as code where "code = 'SD'" then
                    {
                        observation -> data.blockindex = 5;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_1354';
                        code -> data.values as values, values.value = 'Stable Disease';
                    };

                    vcc.coding as coding, coding.code as code where "code = 'PD'" then
                    {
                        observation -> data.blockindex = 5;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_1354';
                        code -> data.values as values, values.value = 'Progressiv Disease';
                    };

                    vcc.coding as coding, coding.code as code where "code = 'Divergentes Geschehen (nach RECIST nicht möglich)'" then
                    {
                        observation -> data.blockindex = 5;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_1354';
                        code -> data.values as values, values.value = 'Divergentes Geschehen (nach RECIST nicht m\u00f6glich)';
                    };
                };

                observation.valueCodeableConcept as vcc where "vcc.extension.exists()" then
                {
                    observation -> data.blockindex = 5;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1354';
                    vcc.coding as coding, coding.code as code -> data.values as values, values.value = 'N\/A';
                };
            };

            // Beurteilung nach: method
            observation -> tgt.data as data then
            {
                observation.method as method, method.coding as coding, coding.code as code then
                {
                    observation -> data.blockindex = 5;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1355';
                    code -> data.values as values, values.value = code;
                };
            };
        };

        // EpisodeOfCare
        entry.resource as episodeOfCare where "resource is EpisodeOfCare and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/EpisodeOfCare/nNGM'" then
        {
            //Datum Progress
            episodeOfCare -> tgt.data as data then
            {
                episodeOfCare.extension as datumProgress where "extension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/datumProgress'" then
                {
                    episodeOfCare -> data.blockindex = 5;
                    episodeOfCare -> data.groupindex = 0;
                    episodeOfCare -> data.itemid = 'id_1545';
                    datumProgress.valueDate as valueDate -> data.values as values, values.value = valueDate;
                };
            };
        };

        // Patient
        entry.resource as patient where "resource is Patient and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM'" then
        {
            // Todesdatum
            patient -> tgt.data as data then
            {
                patient.deceasedDateTime as deceasedDateTime then
                {
                    patient -> data.blockindex = 6;
                    patient -> data.groupindex = 0;
                    patient -> data.itemid = 'id_2344';
                    deceasedDateTime -> data.values as values, values.value = deceasedDateTime;
                };
            };
        };
    };
}