// version = 0.1
/// title = "nNGM: Sonstige Therapie - FHIR to CDS"


map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_SonstigeUntersuchungenCDS" = nNGM_Mapping_SonstigeUntersuchungenCDS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformSonstigeUntersuchungCDS(source entry: BackboneElement, target tgt: BackboneElement, target index: RepeatIndex)
{
    entry.resource as organization where "resource is Organization and resource.meta.profile = 'http://clinicalsite.org/fhir/StructureDefinition/organizationalunit'" 
        then TransformSUOrganizationCDS(organization, tgt);

    entry.resource as diagnosticReport where "resource is DiagnosticReport and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/DiagnosticReport/nNGM/befund'"
        then TransformSUDiagnosticReportCDS(diagnosticReport, tgt);

    entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/weitere-untersuchung'"
        then TransformSUObservationCDS(observation, tgt, index);
}

//------------------------ Organization ------------------------
group TransformSUOrganizationCDS(source organization: Organization, target tgt: BackboneElement)
{
    //Standort -> 2, 0, id_2435
    organization -> tgt.data as data then
    {
        organization.name as name then
        {   
            organization -> data.blockindex = 2;
            organization -> data.groupindex = 0;
            organization -> data.itemid = 'id_2435';
            name -> data.values as values, values.value = name;
        };
    };                
}

//------------------------ DiagnosticReport ------------------------
group TransformSUDiagnosticReportCDS(source diagnosticReport: DiagnosticReport, target tgt: BackboneElement)
{
    //Untersuchungs-ID 1, 0, assessment_id
    diagnosticReport -> tgt.data as data then
    {
        diagnosticReport.identifier as identifier,
            identifier.system as system where "system = 'http://uk-koeln.de/NamingSystem/nNGM/befundnummer'"then
        {   
            diagnosticReport -> data.blockindex = 1;
            diagnosticReport -> data.groupindex = 0;
            diagnosticReport -> data.itemid = 'assessment_id';
            identifier.value as value-> data.values as values, values.value = value;
        };
    };                
}
    
//------------------------ Observation ------------------------
group TransformSUObservationCDS(source observation: Observation, target tgt: BackboneElement, target index: RepeatIndex)
{
    // Status and Extension
    observation then TransformSUStatusAndExtensionCDS(observation, tgt);

    //SOP-Versionsnummer des Standorts -> 2, 0, id_2618
    observation -> tgt.data as data then
    {
        observation.component as component then 
        {
            component.code where "code.coding.code = 'C48443' and %tgt.data.where(itemid = 'id_2486').exists().not()" then
            {
                observation -> data.blockindex = 2;
                observation -> data.groupindex = 0;
                observation -> data.itemid = 'id_2618';
                component.valueString as valueString -> data.values as values, values.value = valueString;
            };
        };
    };

    //Date of Assessment 3, 0, id_2527
    observation -> tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation -> data.blockindex = 3;
            observation -> data.groupindex = 0;
            observation -> data.repeatindex = evaluate(index, '$this.sectionIndex');
            observation -> data.itemid = 'id_2527';
            effectiveDateTime -> data.values as values,values.value = effectiveDateTime;
        };
    };

    //Bezeichnung 3, 0, id_2026
    observation -> tgt.data as data then
    {
        observation.code as code, code.text as text then
        {
            observation -> data.blockindex = 3;
            observation -> data.groupindex = 0;
            observation -> data.repeatindex = evaluate(index, '$this.sectionIndex');
            observation -> data.itemid = 'id_2026';
            text -> data.values as values,values.value = text;
        };
    };

    //Assay -> 3, 0, id_2027
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C60819'"then
            {
                component.valueCodeableConcept as valueCodeableConcept,
                valueCodeableConcept.coding as coding,
                coding.code as code then 
                {
                    observation -> data.blockindex = 3;
                    observation -> data.groupindex = 0;
                    observation -> data.repeatindex = evaluate(index, '$this.sectionIndex');
                    observation -> data.itemid = 'id_2027';
                    code -> data.values as values, values.value = code;
                };
            };
        };
    };

    //Hersteller -> 3, 0, id_2028
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C25392'"then
            {
                component.valueCodeableConcept as valueCodeableConcept,
                valueCodeableConcept.coding as coding,
                coding.code as code then 
                {
                    observation -> data.blockindex = 3;
                    observation -> data.groupindex = 0;
                    observation -> data.repeatindex = evaluate(index, '$this.sectionIndex');
                    observation -> data.itemid = 'id_2028';
                    code -> data.values as values, values.value = code;
                };
            };
        };
    };

    //Gen -> 3, 0, id_2282
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '48018-6'"then
            {
                component.valueCodeableConcept as valueCodeableConcept,
                valueCodeableConcept.coding as coding,
                coding.code as code then 
                {
                    observation -> data.blockindex = 3;
                    observation -> data.groupindex = 0;
                    observation -> data.repeatindex = evaluate(index, '$this.sectionIndex');
                    observation -> data.itemid = 'id_2282';
                    code -> data.values as values, values.value = code;
                };
            };
        };
    };

    //Phaenotyp -> 3, 0, id_2283
    observation->tgt.data as data then
    {
        observation.component as component, component.code where "code.coding.code = 'C16977'" then
        {
            component.valueString as valueString then
            {
                observation->data.blockindex = 3;
                observation->data.groupindex = 0;
                observation -> data.repeatindex = evaluate(index, '$this.sectionIndex');
                observation->data.itemid = 'id_2283';
                valueString -> data.values as values, values.value = valueString;
            };
        };
    };

    //Ergebnis- -> 3, 0, id_2031
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 3;
            observation->data.groupindex = 0;
            observation -> data.repeatindex = evaluate(index, '$this.sectionIndex');
            observation->data.itemid = 'id_2031';
            coding.code as code -> data.values as values, values.value = code;
        };
    };
}

group TransformSUStatusAndExtensionCDS(source observation: Observation, target tgt: BackboneElement)
{
    // DurchfÃ¼hrung
    observation.status as status where "%tgt.data.where(itemid = 'id_2520').exists().not()" -> tgt.data as data then
    {
        observation -> data.blockindex = 4;
        observation -> data.groupindex = 0;
        observation -> data.itemid = 'id_2520';

        status where "$this = 'registered'" -> data.values as values, values.value = 'in Bearbeitung';
        status where "$this = 'final'" -> data.values as values, values.value = 'abgeschlossen';
    };

    
    observation.status as status, status.extension as statusAbschluss, statusAbschluss where "url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss'" then
    {
        // Abschluss
        statusAbschluss.extension as statusExtension, statusExtension where "url = 'status' and %tgt.data.where(itemid = 'id_2462').exists().not()", statusExtension.valueCodeableConcept as vcc,
            vcc.coding as coding, coding.code as code -> tgt.data as data then
        {
            observation -> data.blockindex = 4;
            observation -> data.groupindex = 0;
            observation -> data.itemid = 'id_2462';
            observation -> data.values as values, values.value = code;
        };

        // Datum des Abschlusses
        statusAbschluss.extension as datumExtension, datumExtension where "url = 'datum' and %tgt.data.where(itemid = 'id_2521').exists().not()", datumExtension.valueDate as date -> tgt.data as data then
        {
            observation -> data.blockindex = 4;
            observation -> data.groupindex = 0;
            observation -> data.itemid = 'id_2521';
            observation -> data.values as values, values.value = date;
        };
    };
}