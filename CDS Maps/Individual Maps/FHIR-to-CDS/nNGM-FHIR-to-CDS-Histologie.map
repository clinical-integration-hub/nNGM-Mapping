/// version = 0.1
/// title = "nNGM: Mapping Histologie CDS"

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_HistologieCDS" = nNGM_Mapping_HistologieCDS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformHistologieCDS(source entry: BackboneElement, target tgt: BackboneElement)
{
    entry.resource as specimen, specimen where "meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Specimen/nNGM'" 
        then TransformHLSpecimenCDS(specimen, tgt);

    entry.resource as diagnosticReport, diagnosticReport where "meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/DiagnosticReport/nNGM/befund'" 
        then TransformHLDiagnosticReportCDS(diagnosticReport, tgt);

    entry.resource as observation, observation where "meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/histologie'" 
        then TransformHLObservationCDS(observation, tgt);
}

/*------------------------------ Specimen -------------------------------*/
group TransformHLSpecimenCDS(source specimen: Specimen, target tgt: BackboneElement)
{
    //receivedTime -> Eingang des Tumormaterials in der Pathologie
    specimen -> tgt.data as data then
    {
        specimen.receivedTime as receivedtime then
        {   
            specimen -> data.blockindex = 0;
            specimen -> data.groupindex = 0;
            specimen -> data.itemid = 'id_2515';
            receivedtime -> data.values as values, values.value = receivedtime;
        };
    };

    //accessionIdentifier.value -> Eingangsnummer des Tumormaterials in der Pathologie
    specimen -> tgt.data as data then
    {
        specimen.accessionIdentifier as identifier, identifier.value as identValue then
        {   
            specimen -> data.blockindex = 0;
            specimen -> data.groupindex = 0;
            specimen -> data.itemid = 'id_2516';
            identValue -> data.values as values, values.value = identValue;
        };
    };

    //type.text -> Tumormaterial 
    specimen -> tgt.data as data then
    {
        specimen.type as type, type.text as text then
        {   
            specimen -> data.blockindex = 0;
            specimen -> data.groupindex = 0;
            specimen -> data.itemid = 'id_2517';
            text -> data.values as values, values.value = text;
        };
    };
}

/*------------------------------ DiagnosticReport -------------------------------*/
group TransformHLDiagnosticReportCDS(source diagnosticReport: DiagnosticReport, target tgt: BackboneElement)
{
    // Untersuchungs ID
    diagnosticReport -> tgt.data as data then
    {
        diagnosticReport.identifier as identifier, identifier.value as value where "$this.system = 'http://uk-koeln.de/NamingSystem/nNGM/befundnummer'" then
        {   
            value -> data.blockindex = 5;
            value -> data.groupindex = 0;
            value -> data.itemid = 'assessment_id';
            value -> data.values as values, values.value = value;
        };
    };
}
        
/*------------------------------Observation-------------------------------*/
group TransformHLObservationCDS(source observation: Observation, target tgt: BackboneElement)
{
    observation then TransformHLStatusAndExtensionCDS(observation, tgt);

    //Component.code -> Klassifikation
    observation -> tgt.data as data then
    {
        observation.component as component then
        {   
            component.valueCodeableConcept as valueCodeableConcept where "code.coding.system = 'http://ncit.nci.nih.gov' and code.coding.code = 'C25161'" then
            {
                observation -> data.blockindex = 2;
                observation -> data.groupindex = 0;
                observation -> data.itemid = 'id_1658';
                valueCodeableConcept -> data.values as values, values.value = evaluate(valueCodeableConcept, 'coding.code + \'\\t\' + coding.display');
            };
        };
    };

    //bodysite -> Lokalisation
    observation -> tgt.data as data then
    {
        observation.bodySite as bodySite where "$this.bodySite.coding.system = 'urn:oid:2.16.840.1.113883.6.43.1'", bodySite.coding as coding then
        {   
            observation -> data.blockindex = 2;
            observation -> data.groupindex = 0;
            observation -> data.itemid = 'id_2469';
            bodySite -> data.values as values, values.value = evaluate(bodySite, 'coding.code + \'\\t\' + coding.display');
        };
    };

    // valueCodeableConcept -> Grading
    observation -> tgt.data as data then
    {
        observation.valueCodeableConcept as cc where "$this.valueCodeableConcept.coding.system = 'urn:oid:2.16.840.1.113883.15.16'", cc.coding as coding then
        {   
            observation -> data.blockindex = 2;
            observation -> data.groupindex = 0;
            observation -> data.itemid = 'id_2403';
            coding.code as code -> data.values as values, values.value = code;
        };
    };
}

group TransformHLStatusAndExtensionCDS(source observation: Observation, target tgt: BackboneElement)
{
    // DurchfÃ¼hrung
    observation.status as status -> tgt.data as data then
    {
        observation -> data.blockindex = 4;
        observation -> data.groupindex = 0;
        observation -> data.itemid = 'id_2520';

        status where "$this = 'registered'" -> data.values as values, values.value = 'in Bearbeitung';
        status where "$this = 'final'" -> data.values as values, values.value = 'abgeschlossen';
    };

    
    observation.status as status, status.extension as statusAbschluss, statusAbschluss where "url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss'" then
    {
        // Abschluss
        statusAbschluss.extension as statusExtension, statusExtension where "url = 'status'", statusExtension.valueCodeableConcept as vcc,
            vcc.coding as coding, coding.code as code -> tgt.data as data then
        {
            observation -> data.blockindex = 4;
            observation -> data.groupindex = 0;
            observation -> data.itemid = 'id_2462';
            observation -> data.values as values, values.value = code;
        };

            // Datum des Abschlusses
        statusAbschluss.extension as datumExtension, datumExtension where "url = 'datum'", datumExtension.valueDate as date -> tgt.data as data then
        {
            observation -> data.blockindex = 4;
            observation -> data.groupindex = 0;
            observation -> data.itemid = 'id_2521';
            observation -> data.values as values, values.value = date;
        };
    };
}

