/// version = 0.1
/// title = "nNGM: Mapping Fusion NGS CTS"


map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_FusionNGSCDS" = nNGM_Mapping_FusionNGSCDS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformFusionNGSCDS(source entry: BackboneElement, target tgt: BackboneElement, target index: RepeatIndex)
{
    entry.resource as organization where "resource is Organization and resource.meta.profile = 'http://clinicalsite.org/fhir/StructureDefinition/organizationalunit'" 
        then TransformFSOrganizationCDS(organization, tgt);

    entry.resource as diagnosticReport where "resource is DiagnosticReport and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/DiagnosticReport/nNGM/befund'"
        then TransformFSDiagnosticReportCDS(diagnosticReport, tgt);

    entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression'"
        then TransformFSObservationCDS(observation, tgt, index);
}

//------------------------ Organization ------------------------
group TransformFSOrganizationCDS(source organization: Organization, target tgt: BackboneElement)
{
    //Standort -> 2, 0, id_2435
    organization -> tgt.data as data then
    {
        organization.name as name then
        {   
            organization -> data.blockindex = 2;
            organization -> data.groupindex = 0;
            organization -> data.itemid     = 'id_2435';
            name -> data.values as values, values.value = name;
        };
    };                
}

//------------------------ DiagnosticReport ------------------------
group TransformFSDiagnosticReportCDS(source diagnosticReport: DiagnosticReport, target tgt: BackboneElement)
{
    //Untersuchungs-ID -> 1, 0, assessment_id
    diagnosticReport->tgt.data as data then
    {
        diagnosticReport.identifier as identifier,
            identifier.system as system where "system = 'http://uk-koeln.de/NamingSystem/nNGM/befundnummer'" then
        {
            diagnosticReport->data.blockindex = 1;
            diagnosticReport->data.groupindex = 0;
            diagnosticReport->data.itemid = 'assessment_id';
            identifier.value as value->data.values as values, values.value = value;
        };
    };
}

//------------------------ Observation ------------------------
group TransformFSObservationCDS(source observation: Observation, target tgt: BackboneElement, target index: RepeatIndex)
{
    // Standort, SOP, Assay and Hersteller is the same for every Observation
    observation then TransformFSStandortSOPAssayHerstellerCDS(observation, tgt);
    // Status and Status.Extension is the same for every Observation
    observation then TransformFSStatusAndExtensionCDS(observation, tgt);

    observation where "code.coding.code = 'ALK'" then TransformFSObservationALKCDS(observation, tgt);
    observation where "code.coding.code = 'RET'" then TransformFSObservationRETCDS(observation, tgt);
    observation where "code.coding.code = 'ROS1'" then TransformFSObservationROS1CDS(observation, tgt);
    observation where "code.coding.code = 'NTRK1'" then TransformFSObservationNTRK1CDS(observation, tgt);
    observation where "code.coding.code = 'NTRK2'" then TransformFSObservationNTRK2CDS(observation, tgt);
    observation where "code.coding.code = 'NTRK3'" then TransformFSObservationNTRK3CDS(observation, tgt);
    observation where "code.coding.code = 'FGFR1'" then TransformFSObservationFGFR1CDS(observation, tgt);
    observation where "code.coding.code = 'FGFR2'" then TransformFSObservationFGFR2CDS(observation, tgt);
    observation where "code.coding.code = 'FGFR3'" then TransformFSObservationFGFR3CDS(observation, tgt);
    observation where "code.coding.code = 'Sonstige Fusion NGS'" then TransformFSObservationSonstigeCDS(observation, tgt, index);
}

/*---------------------- Observation ALK ----------------------- */
group TransformFSObservationALKCDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 5, 0, id_2098
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 5;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2098';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };
    
    //Phaenotyp ->5, 0 ,id_2099
    observation->tgt.data as data then
    {
        observation.component as component, component.code where "code.coding.code = 'C16977'" then
        {
            component.valueCodeableConcept as vcc where "%tgt.data.where(itemid = 'id_2099').exists().not()" then
            {
                observation->data.blockindex = 5;
                observation->data.groupindex = 0;
                observation->data.itemid = 'id_2099';
                vcc.coding as coding where "coding.code = 'C80488'"->data.values as values, values.unit = 'predef', values.value = 'Expression';
                vcc.coding as coding where "coding.code = 'C28510'"->data.values as values, values.unit = 'predef', values.value = 'Fusion';
                vcc.coding as coding where "coding.code = 'C25418'"->data.values as values, values.unit = 'predef', values.value = 'Amplifikation';
            };
        };
    };

    //Ergebnis -> 5, 0, id_2127
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 5;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2127';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 5, 0, id_2128
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 5;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2128';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 5, 0, id_2129
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 5;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2129';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //5' Fusionspartner Exon -> 5, 0, id_2130
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 5;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2130';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //ALK Exon -> 5, 0, id_2131
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C13231'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 5;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2131';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation RET ----------------------- */
group TransformFSObservationRETCDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 6, 0, id_2183
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 6;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2183';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    //Phaenotyp ->6, 0 ,id_2184
    observation->tgt.data as data then
    {
        observation.component as component, component.code where "code.coding.code = 'C16977'" then
        {
            component.valueCodeableConcept as vcc where "%tgt.data.where(itemid = 'id_2184').exists().not()" then
            {
                observation->data.blockindex = 6;
                observation->data.groupindex = 0;
                observation->data.itemid = 'id_2184';
                vcc.coding as coding where "coding.code = 'C80488'"->data.values as values, values.unit = 'predef', values.value = 'Expression';
                vcc.coding as coding where "coding.code = 'C28510'"->data.values as values, values.unit = 'predef', values.value = 'Fusion';
                vcc.coding as coding where "coding.code = 'C25418'"->data.values as values, values.unit = 'predef', values.value = 'Amplifikation';
            };
        };
    };

    //Ergebnis -> 6, 0, id_2206
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 6;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2206';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 6, 0, id_2207
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 6;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2207';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 6, 0, id_2208
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 6;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2208';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //5' Fusionspartner Exon -> 6, 0, id_2209
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 6;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2209';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //RET Exon -> 6, 0, id_2210
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C13231'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 6;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2210';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation ROS1 ----------------------- */
group TransformFSObservationROS1CDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 7, 0, id_2211
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 7;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2211';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    //Phaenotyp ->7, 0 ,id_2212
    observation->tgt.data as data then
    {
        observation.component as component, component.code where "code.coding.code = 'C16977'" then
        {
            component.valueCodeableConcept as vcc where "%tgt.data.where(itemid = 'id_2212').exists().not()" then
            {
                observation->data.blockindex = 7;
                observation->data.groupindex = 0;
                observation->data.itemid = 'id_2212';
                vcc.coding as coding where "coding.code = 'C80488'"->data.values as values, values.unit = 'predef', values.value = 'Expression';
                vcc.coding as coding where "coding.code = 'C28510'"->data.values as values, values.unit = 'predef', values.value = 'Fusion';
                vcc.coding as coding where "coding.code = 'C25418'"->data.values as values, values.unit = 'predef', values.value = 'Amplifikation';
            };
        };
    };

    //Ergebnis -> 7, 0, id_2241
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 7;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2241';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 7, 0, id_2242
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 7;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2242';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 7, 0, id_2243
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 7;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2243';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //5' Fusionspartner Exon -> 7, 0, id_2244
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 7;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2244';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //ROS1 Exon -> 7, 0, id_224
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C13231'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 7;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2245';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation NTRK1 ----------------------- */
group TransformFSObservationNTRK1CDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 8, 0, id_2540
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 8;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2540';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    //Ergebnis -> 8, 0, id_2547
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 8;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2547';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 8, 0, id_2548
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 8;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2548';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 8, 0, id_2549
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 8;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2549';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //5' Fusionspartner Exon -> 8, 0, id_2550
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 8;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2550';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation NTRK2 ----------------------- */
group TransformFSObservationNTRK2CDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 9, 0, id_2592
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 9;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2592';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    //Ergebnis -> 9, 0, id_2596
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 9;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2596';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 9, 0, id_2597
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 9;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2597';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 9, 0, id_2598
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 9;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2598';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //5' Fusionspartner Exon -> 9, 0, id_2599
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 9;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2599';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation NTRK3 ----------------------- */
group TransformFSObservationNTRK3CDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 10, 0, id_2584

    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 10;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2584';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    //Ergebnis -> 10, 0, id_2588
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 10;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2588';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 10, 0, id_2589
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 10;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2589';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 10, 0, id_2590
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 10;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2590';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //5' Fusionspartner Exon -> 10, 0, id_2591
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 10;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2591';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation FGFR1 ----------------------- */
group TransformFSObservationFGFR1CDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 11, 0, id_2576
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 11;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2576';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    //Ergebnis -> 11, 0, id_2580
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 11;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2580';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 11, 0, id_2581
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 11;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2581';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 11, 0, id_2582
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 11;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2582';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //5' Fusionspartner Exon -> 11, 0, id_2583
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 11;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2583';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation FGFR2 ----------------------- */
group TransformFSObservationFGFR2CDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 12, 0, id_2568
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 12;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2568';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    //Ergebnis -> 12, 0, id_2572
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 12;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2572';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 12, 0, id_2573
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 12;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2573';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 12, 0, id_2574
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 12;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2574';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //3' Fusionspartner Exon -> 12, 0, id_2575
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 12;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2575';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation FGFR3 ----------------------- */
group TransformFSObservationFGFR3CDS(source observation: Observation, target tgt: BackboneElement)
{
    //Date of Assessment -> 13, 0, id_2560
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 13;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2560';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    //Ergebnis -> 13, 0, id_2564
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 13;
            observation->data.groupindex = 0;
            observation->data.itemid = 'id_2564';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    //Fusionspartner -> 13, 0, id_2565
    observation -> tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C28510'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 13;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2565';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Anzahl der Fusionsreads -> 13, 0, id_2566
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 13;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2566';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //3' Fusionspartner Exon -> 13, 0, id_2567
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'fusionspartner-exon'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 13;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2567';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };
}

/*---------------------- Observation Sonstiges ----------------------- */
group TransformFSObservationSonstigeCDS(source observation: Observation, target tgt: BackboneElement, target index: RepeatIndex)
{
    //Date of Assessment -> 14, 0, 0, id_2246
    observation->tgt.data as data then
    {
        observation.effectiveDateTime as effectiveDateTime then
        {
            observation->data.blockindex = 14;
            observation->data.groupindex = 0;
            observation->data.repeatindex = evaluate(index, '$this.sectionIndex');
            observation->data.itemid = 'id_2246';
            effectiveDateTime->data.values as values, values.value = effectiveDateTime;
        };
    };

    /*---------------------NGS Fusion -------------------------------*/
    //Ergebnis -> 14, 0, 0, id_2254
    observation->tgt.data as data then
    {
        observation.valueCodeableConcept as valueCodeableConcept,
            valueCodeableConcept.coding as coding then
        {
            observation->data.blockindex = 14;
            observation->data.groupindex = 0;
            observation->data.repeatindex = evaluate(index, '$this.sectionIndex');
            observation->data.itemid = 'id_2254';
            coding.code as code where "code = 'LA6576-8'" -> data.values as values, values.value = 'positiv';
            coding.code as code where "code = 'LA6577-6'" -> data.values as values, values.value = 'negativ';
            coding.code as code where "code = 'LA18198-4'" -> data.values as values, values.value = 'nicht auswertbar';
        };
    };

    // Erster/Zweiter Fusionspartner -> 14, 0, 0 , id_2255/id_2556
    observation.component as component where "component.where(code.coding.where(code = '48018-6'))" then
    {
        component as ersterFusionspartner where "code.coding.where(code = 'erster-fusionspartner') and valueString.exists()" -> tgt.data as data then
        {
            observation->data.blockindex = 14;
            observation->data.groupindex = 0;
            observation->data.repeatindex = evaluate(index, '$this.sectionIndex');
            observation->data.itemid = 'id_2255';
            ersterFusionspartner.valueString as valueString ->data.values as values, values.value = valueString;
        };

        component as zweiterFusionspartner where "code.coding.where(code = 'zweiter-fusionspartner') and valueString.exists()" -> tgt.data as data then
        {
            observation->data.blockindex = 14;
            observation->data.groupindex = 0;
            observation->data.repeatindex = evaluate(index, '$this.sectionIndex');
            observation->data.itemid = 'id_2256';
            zweiterFusionspartner.valueString as valueString ->data.values as values, values.value = valueString;
        };
    };

    //Anzahl der Fusionsreads -> 14, 0, 0 , id_2257
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = '82121-5'" then
            {
                component.valueInteger as valueInteger then
                {
                    observation->data.blockindex = 14;
                    observation->data.groupindex = 0;
                    observation->data.repeatindex = evaluate(index, '$this.sectionIndex');
                    observation->data.itemid = 'id_2257';
                    valueInteger->data.values as values, values.unit = 'count', values.value = valueInteger;
                };
            };
        };
    };

    //Exon erster Fusionspartner -> 14, 0, 0 , id_2258
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'erster-fusionspartner-exon'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 14;
                    observation->data.groupindex = 0;
                    observation->data.repeatindex = evaluate(index, '$this.sectionIndex');
                    observation->data.itemid = 'id_2258';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };

    //Exon zweiter Fusionspartner -> 14, 0, 0 , id_2259
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'zweiter-fusionspartner-exon'" then
            {
                component.valueString as valueString then
                {
                    observation->data.blockindex = 14;
                    observation->data.groupindex = 0;
                    observation->data.repeatindex = evaluate(index, '$this.sectionIndex');
                    observation->data.itemid = 'id_2259';
                    valueString->data.values as values, values.value = valueString;
                };
            };
        };
    };
}

// Helper function
group TransformFSStandortSOPAssayHerstellerCDS(source observation: Observation, target tgt: BackboneElement)
{
    // SOP number
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.valueString where "code.coding.code = 'C48443' and %tgt.data.where(itemid = 'id_2612').exists().not()" then
            {
                component.valueString as name then
                {
                    observation->data.blockindex = 2;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2612';
                    observation->data.values as values, values.value = name;
                };
            };
        };
    };

    // Standort
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.valueString where "code.coding.code = 'C25341' and %tgt.data.where(itemid = 'id_2435').exists().not()" then
            {
                component.valueString as name then
                {
                    observation->data.blockindex = 2;
                    observation->data.groupindex = 0;
                    observation->data.itemid = 'id_2435';
                    observation->data.values as values, values.value = name;
                };
            };
        };
    };

    // Assay
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C60819' and %tgt.operations.data.where(itemid = 'id_2538').exists().not()" then
            {
                observation->data.blockindex = 3;
                observation->data.groupindex = 0;
                observation->data.itemid = 'id_2538';
                component.valueCodeableConcept as valueCodeableConcept,
                    valueCodeableConcept.coding as coding,
                    coding.code as code->data.values as values, values.value = code;
            };
        };
    };

    // Hersteller
    observation->tgt.data as data then
    {
        observation.component as component then
        {
            component.code where "code.coding.code = 'C25392' and %tgt.operations.data.where(itemid = 'id_2539').exists().not()" then
            {
                observation->data.blockindex = 3;
                observation->data.groupindex = 0;
                observation->data.itemid = 'id_2539';
                component.valueCodeableConcept as valueCodeableConcept,
                    valueCodeableConcept.coding as coding,
                    coding.code as code->data.values as values, values.value = code;
            };
        };
    };
}

group TransformFSStatusAndExtensionCDS(source observation: Observation, target tgt: BackboneElement)
{
    // Durchführung
    observation.status as status where "%tgt.data.where(itemid = 'id_2520').exists().not()" -> tgt.data as data then
    {
        observation -> data.blockindex = 15;
        observation -> data.groupindex = 0;
        observation -> data.itemid = 'id_2520';

        status where "$this = 'registered'" -> data.values as values, values.value = 'in Bearbeitung';
        status where "$this = 'final'" -> data.values as values, values.value = 'abgeschlossen';
    };

    
    observation.status as status, status.extension as statusAbschluss, statusAbschluss where "url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss'" then
    {
        // Abschluss
        statusAbschluss.extension as statusExtension, statusExtension where "url = 'status' and %tgt.data.where(itemid = 'id_2462').exists().not()", statusExtension.valueCodeableConcept as vcc,
            vcc.coding as coding, coding.code as code -> tgt.data as data then
        {
            observation -> data.blockindex = 15;
            observation -> data.groupindex = 0;
            observation -> data.itemid = 'id_2462';
            observation -> data.values as values, values.value = code;
        };

        // Datum des Abschlusses
        statusAbschluss.extension as datumExtension, datumExtension where "url = 'datum' and %tgt.data.where(itemid = 'id_2521').exists().not()", datumExtension.valueDate as date -> tgt.data as data then
        {
            observation -> data.blockindex = 15;
            observation -> data.groupindex = 0;
            observation -> data.itemid = 'id_2521';
            observation -> data.values as values, values.value = date;
        };
    };
}