/// version = 0.1
/// title = "nNGM: nNGM_Mapping_BasisangabenCTS - FHIR to CTS"
/// FHIR -> CTS

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_BasisangabenCTS" = nNGM_Mapping_BasisangabenCTS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformBasisangabenCTS(source src: Bundle, target tgt: BackboneElement)
{
    src -> tgt.type = 'save';
    src -> tgt.crfid = '*-BA';

    src.entry as entry then
    {
        entry.resource as organization where "resource is Organization and resource.meta.profile = 'http://clinicalsite.org/fhir/StructureDefinition/organizationalunit'" then 
        {
            // Identifier
            organization -> tgt.data as data then 
            {
                organization.identifier as identifier then
                {
                    identifier.value as ival then
                    {
                        organization -> data.blockindex = 0;
                        organization -> data.groupindex = 0;
                        organization -> data.itemid = 'id_ba_siteid';
                        ival -> data.values as values, values.unit = 'count', values.value = ival;
                    };
                };
            };

            // Netzwerkpartnernr
            organization -> tgt.data as data then 
            {
                organization.address as address then
                {
                    address.text as text then
                    {
                        organization -> data.blockindex = 1;
                        organization -> data.groupindex = 0;
                        organization -> data.itemid = 'id_2326';
                        text -> data.values as values, values.value = text;
                    };
                };
            };

            // Referenzen Kontakt
            organization -> tgt.data as data then 
            {
                organization.address as address then
                {
                    address.text as text then
                    {
                        organization -> data.blockindex = 1;
                        organization -> data.groupindex = 0;
                        organization -> data.itemid = 'id_2485';
                        text -> data.values as values, values.value = text;
                    };
                };
            };

            // Netzwerkzentrum Standort
            organization -> tgt.data as data then 
            {
                organization.name as name then
                {
                    organization -> data.blockindex = 2;
                    organization -> data.groupindex = 0;
                    organization -> data.itemid = 'id_2435';
                    name.value as value -> data.values as values, values.value = value;
                };
            };

            // Netzwerkzentrum Kontakt
            organization -> tgt.data as data then 
            {
                organization.address as address then
                {
                    organization -> data.blockindex = 2;
                    organization -> data.groupindex = 0;
                    organization -> data.itemid = 'id_2458';
                    address.text as txt -> data.values as values, values.value = txt; 
                };
            };
        };

        /* ------------------------------ ServiceRequest ---------------------------- */
        entry.resource as servicerequest where "resource is ServiceRequest and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/tumorboard'" then
        {   
            // Anforderungsdatum
            servicerequest -> tgt.data as data then 
            {
                servicerequest.authoredOn as authoredon where "%tgt.data.where(itemid = 'id_1571').exists().not()" then
                {
                    servicerequest -> data.blockindex = 3;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_1571';
                    authoredon -> data.values as values, values.value = authoredon;
                };
            };

            // Patient ist zum zeitpunkt der Anforderung 
            servicerequest -> tgt.data as data then
            {
                servicerequest.encounter as encounter, encounter.extension as extension then
                {
                    extension.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = 'IMP'", vcc.coding as coding, coding.code as code then
                    {
                        servicerequest -> data.blockindex = 3;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_1576';
                        code -> data.values as values, values.value = 'station\u00e4r';
                    };
                    extension.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = 'AMB'", vcc.coding as coding, coding.code as code then
                    {
                        servicerequest -> data.blockindex = 3;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_1576';
                        code -> data.values as values, values.value = 'ambulant';
                    };
                    extension.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = 'UNK'", vcc.coding as coding, coding.code as code then
                    {
                        servicerequest -> data.blockindex = 3;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_1576';
                        code -> data.values as values, values.value = 'N/A';
                    };
                };
            };

            //Ich wünsche eine Vorstellung des Falls im Tumorboard des nNGM (Zentrum der Anforderung)
            servicerequest.requester as requester, requester.extension as extension -> tgt.data as data then
            {
                extension where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/vorstellung-tmb'" then
                {
                    extension.valueBoolean as valueBoolean where "$this.valueBoolean = true" then
                    {
                        servicerequest -> data.blockindex = 10;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_2296';
                        valueBoolean -> data.values as values, values.value = 'yes';
                    };

                    extension.valueBoolean as valueBoolean where "$this.valueBoolean = false" then
                    {
                        servicerequest -> data.blockindex = 10;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_2296';
                        valueBoolean -> data.values as values, values.value = 'no';
                    };
                };
            };
            
            //Ich möchte am Tumorboard persönlich oder per Telefonkonferenz teilnehmen
            servicerequest.requester as requester, requester.extension as extension -> tgt.data as data then
            {
                extension where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/persoenlicheTeilnahme'" then
                {
                    extension.valueBoolean as valueBoolean where "$this.valueBoolean = true" then
                    {
                        servicerequest -> data.blockindex = 10;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_2297';
                        valueBoolean -> data.values as values, values.value = 'yes';
                    };

                    extension.valueBoolean as valueBoolean where "$this.valueBoolean = false" then
                    {
                        servicerequest -> data.blockindex = 10;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_2297';
                        valueBoolean -> data.values as values, values.value = 'no';
                    };
                };
            };
        };
        
        /* ------------------------------ Practitioner ---------------------------- */
        entry.resource as practitioner where "resource is Practitioner and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Practitioner/nNGM'" then 
        {   
            //Email addresse behandler
            practitioner -> tgt.data as data then 
            {
                practitioner.telecom as telecom then
                {
                    practitioner -> data.blockindex = 10;
                    practitioner -> data.groupindex = 0;
                    practitioner -> data.itemid = 'id_2298';
                    telecom.value as email -> data.values as values, values.value = email;
                };
            };
        };

        /* ------------------------------ Patient (No IDAT) ---------------------------- */
        entry.resource as patient where "resource is Patient and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM'" then
        {   
            //GENDER
            patient -> tgt.data as data then 
            {
                patient.gender as gender where "gender = 'female'" then
                {
                    patient -> data.blockindex = 4;
                    patient -> data.groupindex = 0;
                    patient -> data.itemid = 'id_1131';
                    gender -> data.values as values, values.value = 'weiblich'; 
                };
                patient.gender as gender where "gender = 'male'" then
                {
                    patient -> data.blockindex = 4;
                    patient -> data.groupindex = 0;
                    patient -> data.itemid = 'id_1131';
                    gender -> data.values as values, values.value = 'm\u00e4nnlich'; 
                };

                patient.extension as gender where "extension.valueCodeableConcept.coding.code = 'D'" then
                {
                    patient -> data.blockindex = 4;
                    patient -> data.groupindex = 0;
                    patient -> data.itemid = 'id_1131';
                    gender -> data.values as values, values.value = 'divers'; 
                };
            };

            //Country
            patient -> tgt.data as data then 
            {
                patient.address as address, address.country as country then
                {
                    patient -> data.blockindex = 4;
                    patient -> data.groupindex = 0;
                    patient -> data.itemid = 'id_1280';
                    country -> data.values as values, values.value = country;
                };
            };
        };

        /* ------------------------------ Coverage ---------------------------- */
        entry.resource as coverage where "resource is Coverage and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Coverage/nNGM'" then
        {   
            //Type.text -> Krankenkasse
            coverage -> tgt.data as data then 
            {
                coverage.payor as payor, payor.display as display then
                {
                    coverage -> data.blockindex = 5;
                    coverage -> data.groupindex = 0;
                    coverage -> data.itemid = 'id_2459';
                    display -> data.values as values, values.value = display;
                };
            };

            //type.coding -> TYP
            coverage -> tgt.data as data then 
            {
                coverage.type as type, type.coding as coding then
                {
                    coverage -> data.blockindex = 5;
                    coverage -> data.groupindex = 0;
                    coverage -> data.itemid = 'id_1269';
                    coding.code as code -> data.values as values, values.value = code;
                };
            };

            //valueCodeableConcept.coding.code -> PKV tariff
            coverage -> tgt.data as data then 
            {
                coverage.extension as ext, ext.valueCodeableConcept as vcc, vcc.coding as coding where "extension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/pkvTarifform'" then
                {
                    coverage -> data.blockindex = 5;
                    coverage -> data.groupindex = 0;
                    coverage -> data.itemid = 'id_1270';
                    coding.code as code -> data.values as values, values.value = code;
                };
            };
            
            // Extension.valueBoolean -> 5, 0, 2460
            coverage -> tgt.data as data then 
            {
                coverage.extension as extension where "$this.extension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/kooperationsvereinbarung'" then
                {
                    // Rezidiv = True
                    extension.valueBoolean as kooperationsvereinbarung where "$this.valueBoolean = true" then
                    {
                        kooperationsvereinbarung -> data.blockindex = 5;
                        kooperationsvereinbarung -> data.groupindex = 0;
                        kooperationsvereinbarung -> data.itemid = 'id_2460';
                        kooperationsvereinbarung -> data.values as values, values.value = 'yes';
                    };
                    
                    // Rezidiv = False
                    extension.valueBoolean as kooperationsvereinbarung where "$this.valueBoolean = false" then
                    {
                        kooperationsvereinbarung -> data.blockindex = 5;
                        kooperationsvereinbarung -> data.groupindex = 0;
                        kooperationsvereinbarung -> data.itemid = 'id_2460';
                        kooperationsvereinbarung -> data.values as values, values.value = 'no';
                    };
                };
            };

            // Identifier -> 5, 0, 1268
            coverage -> tgt.data as data then 
            {
                coverage.identifier as iden then
                {
                    coverage -> data.blockindex = 5;
                    coverage -> data.groupindex = 0;
                    coverage -> data.itemid = 'id_1268';
                    iden.value as value -> data.values as values, values.value = value;
                };
            };

            // Payor.extension.valueCodeableConcept.coding.code -> abrechnungsinformationen
            coverage -> tgt.data as data then 
            {
                coverage.payor as payor, payor.extension as extension, extension.valueCodeableConcept as vcc, vcc.coding as coding then
                {
                    coverage -> data.blockindex = 5;
                    coverage -> data.groupindex = 0;
                    coverage -> data.itemid = 'id_1333';
                    coding.code as info -> data.values as values, values.value = info;
                };
            };
        };

        /* ------------------------------ Observation ---------------------------- */
        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/koerpergroesse'" then 
        {   
            //Height
            observation -> tgt.data as data then 
            {
                observation.valueQuantity as quantity then
                {
                    observation -> data.blockindex = 6;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1133';
                    quantity.code as unit -> data.values as values, values.unit = unit;
                    quantity.value as height -> data.values as values collate, values.value = height;
                };
            };
        };

        // Weight -> 6, 0, 1132
        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/koerpergewicht'" then 
        {   
            //Weight
            observation -> tgt.data as data then 
            {
                observation.valueQuantity as quantity then
                {
                    observation -> data.blockindex = 6;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1132';
                    quantity.code as unit -> data.values as values, values.unit = unit;
                    quantity.value as weight -> data.values as values collate, values.value = weight;
                };
            };
        };

        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/ecog'" then 
        {   
            //Ecog
            observation -> tgt.data as data then 
            {
                observation.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = '0'", vcc.coding as coding then
                {
                    observation -> data.blockindex = 6;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2290';
                    coding.code as ecog -> data.values as values, values.value = '0 - normale, uneingeschr\u00e4nkte Aktivit\u00e4t, wie vor der Erkrankung'; 
                };

                observation.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = '1'", vcc.coding as coding then
                {
                    observation -> data.blockindex = 6;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2290';
                    coding.code as ecog -> data.values as values, values.value = '1 - Einschr\u00e4nkung bei k\u00f6rperlicher Anstrengung, gehf\u00e4hig, leichte k\u00f6rperliche Arbeit m\u00f6glich'; 
                };

                observation.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = '2'", vcc.coding as coding then
                {
                    observation -> data.blockindex = 6;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2290';
                    coding.code as ecog -> data.values as values, values.value = '2 - gehf\u00e4hig, Selbstversorgung m\u00f6glich, aber nicht arbeitsf\u00e4hig, kann mehr als 50 % der Wachzeit aufstehen'; 
                };

                observation.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = '3'", vcc.coding as coding then
                {
                    observation -> data.blockindex = 6;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2290';
                    coding.code as ecog -> data.values as values, values.value = '3 - nur begrenzte Selbstversorgung m\u00f6glich, 50 % oder mehr der Wachzeit an Bett oder Stuhl gebunden'; 
                };

                observation.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = '4'", vcc.coding as coding then
                {
                    observation -> data.blockindex = 6;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2290';
                    coding.code as ecog -> data.values as values, values.value = '4 - v\u00f6llig pflegebed\u00FCrftig, keinerlei Selbstversorgung m\u00f6glich, v\u00f6llig an Bett oder Stuhl gebunden'; 
                };
            };
        };

        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/raucherstatus'" then 
        {   
            //Raucherstatus
            observation -> tgt.data as data then 
            {
                observation.valueCodeableConcept as vcc, vcc.coding as coding where "coding.code = 'LA18979-7'" then
                {
                    observation -> data.blockindex = 7;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2292';
                    coding.code -> data.values as values, values.value = 'Raucher';
                };

                observation.valueCodeableConcept as vcc, vcc.coding as coding where "coding.code = 'LA15920-4'" then
                {
                    observation -> data.blockindex = 7;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2292';
                    coding.code -> data.values as values, values.value = 'Ex-Raucher';
                };

                observation.valueCodeableConcept as vcc, vcc.coding as coding where "coding.code = 'LA18978-9'" then
                {
                    observation -> data.blockindex = 7;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2292';
                    coding.code -> data.values as values, values.value = 'Nieraucher';
                };

                observation.valueCodeableConcept as vcc, vcc.coding as coding where "coding.code = 'LA18980-5'" then
                {
                    observation -> data.blockindex = 7;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2292';
                    coding.code -> data.values as values, values.value = 'N/A';
                };
            };

            //Nichtraucher seit 
            observation -> tgt.data as data then 
            {
                observation.component as component, component.code as code where "code.coding.code = 'C127065'" then
                {
                    observation -> data.blockindex = 7;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2293';
                    component.valueDateTime as vdt -> data.values as values, values.value = vdt; 
                };               
            };
            
            //Pack years
            observation -> tgt.data as data then 
            {
                observation.component as component, component.valueQuantity as valueQuantity where "valueQuantity.code = '{PackYears}'" then
                {                    
                    observation -> data.blockindex = 7;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2294';
                    component.valueQuantity as vq, vq.value as value -> data.values as values, values.unit = 'count',  values.value = value;   
                };
            };
        };
        
        /* ------------------------------ Consent ---------------------------- */
        entry.resource as consent where "resource is Consent and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Consent/nNGM'" then 
        {   
            //1a Signed
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = '1a'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2440';
                        consent -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2440';
                        consent -> data.values as values, values.value = 'no';
                    };
                };
            };

            // Datetime
            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = '1a' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2441';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            };         

            //1b Signed
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = '1b'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2446';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = '1b'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2446';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = '1b' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2447';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            };  

            //2 Signed
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = '2'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2449';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = '2'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2449';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = '2' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2450';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            };  

            //Teilnahme erklarung
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'TE'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2392';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'TE'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2392';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'TE' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2393';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            };  


            //Datenschutz
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'DS'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2389';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'DS'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2389';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'DS' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2390';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            };  

            /* -------------------Versorgung------------------------*/

            //Molpatho diagnostik signed 
            consent -> tgt.data as data then 
            {
               consent.policyRule as policyRule where "policyRule.coding.code = 'MD'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2351';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };
                
                consent.policyRule as policyRule where "policyRule.coding.code = 'MD'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2351';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'MD' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2352';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 

            //Uberregionale Beratung
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'ST'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2357';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'ST'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2357';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'ST' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2358';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 

             /* -------------------ForschungsZwecke 1------------------------*/

            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WPI'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2361';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'WPI'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2361';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WPI' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2362';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 

            /*-----------------------2------------------------*/
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WP'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2364';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'WP'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2364';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WP' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2365';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 


            /*--------------------3---------------------------*/
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WD'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2367';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'WD'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2367';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

             consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WD' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2368';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 
            
            /*------------------------4-----------------------*/
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WR'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2370';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'WR'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2370';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WR' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2371';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 

            /*---------------------5--------------------------*/
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WPK'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2373';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'WPK'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2373';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WPK' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2374';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 

            /*----------------------6-------------------------*/
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WK'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2376';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'WK'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2376';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'WK' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2377';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 

            /*----------------------7-------------------------*/
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'KW'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2382';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'KW'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2382';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'KW' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2383';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 

            /*------------------------8-----------------------*/
            consent -> tgt.data as data then 
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'KE'" then
                {
                    consent.provision as provision where "provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2379';
                        provision.type -> data.values as values, values.value = 'yes';
                    };
                };

                consent.policyRule as policyRule where "policyRule.coding.code = 'KE'" then
                {
                    consent.provision as provision where "provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2379';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.data as data then
            {
                consent.policyRule as policyRule where "policyRule.coding.code = 'KE' and provision.type = 'permit'" then
                {
                    consent.dateTime as dt then 
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2380';
                        dt -> data.values as values, values.value = dt;
                    };
                };
            }; 
        };
    };
}