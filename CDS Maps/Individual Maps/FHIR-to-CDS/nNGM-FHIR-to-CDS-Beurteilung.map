/// version = 0.1
/// title = "CDSBeurteilung"


map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_BeurteilungCDS" = nNGM_Mapping_BeurteilungCDS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformBeurteilungCDS(source entry: BackboneElement, target tgt: BackboneElement, target index: RepeatIndex)
{
    entry.resource as diagnosticReport where "resource is DiagnosticReport and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/DiagnosticReport/nNGM/beurteilung'"
        then TransformBUDiagnosticReportCDS(diagnosticReport, tgt, index);

    entry.resource as serviceRequest where "resource is ServiceRequest and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/beurteilung'"
        then TransformBUServiceRequestCDS(serviceRequest, tgt);
}

/* ------------------------------ DiagnosticReport ---------------------------- */
group TransformBUDiagnosticReportCDS(source diagnosticReport: DiagnosticReport, target tgt: BackboneElement, target index: RepeatIndex)
{
    //Erstelldatum 
    diagnosticReport->tgt.data as data then
    {
        diagnosticReport.effectiveDateTime as dt then
        {
            diagnosticReport->data.blockindex = 0;
            diagnosticReport->data.groupindex = 0;
            diagnosticReport->data.repeatindex = evaluate(index, '$this.sectionIndex');
            diagnosticReport->data.itemid = 'bu_creation_date';
            dt->data.values as values, values.value = dt;
        };
    };

    //Version
    diagnosticReport->tgt.data as data then
    {
        diagnosticReport.status as status then
        {
            diagnosticReport->data.blockindex = 0;
            diagnosticReport->data.groupindex = 0;
            diagnosticReport->data.repeatindex = evaluate(index, '$this.sectionIndex');
            diagnosticReport->data.itemid = 'bu_version';
            status where "$this = 'final'" ->data.values as values, values.value = 'final';
            status where "$this = 'preliminary'" ->data.values as values, values.value = 'vorl\u00e4ufig';
        };
    };

    //Klinische Information
    diagnosticReport->tgt.data as data then
    {
        diagnosticReport.conclusion as conclusion then
        {
            diagnosticReport->data.blockindex = 0;
            diagnosticReport->data.groupindex = 0;
            diagnosticReport->data.repeatindex = evaluate(index, '$this.sectionIndex');
            diagnosticReport->data.itemid = 'id_1352';
            conclusion->data.values as values, values.value = conclusion;
        };
    };

    //Empfehlung einer systemischen Therapie
    diagnosticReport->tgt.data as data then
    {
        diagnosticReport.conclusionCode as conclusionCode, conclusionCode.extension as beurteilung, beurteilung.valueBoolean as empfehlung then
        {
            diagnosticReport->data.blockindex = 0;
            diagnosticReport->data.groupindex = 0;
            diagnosticReport->data.repeatindex = evaluate(index, '$this.sectionIndex');
            diagnosticReport->data.itemid = 'id_2405';
            empfehlung where "$this = true"->data.values as values, values.value = 'Ja';
            empfehlung where "$this = false"->data.values as values, values.value = 'Nein';
        };
    };
}

/* ------------------------------ ServiceRequest ---------------------------- */
group TransformBUServiceRequestCDS(source serviceRequest: ServiceRequest, target tgt: BackboneElement)
{
    //Durchfuehrung
    serviceRequest -> tgt.data as data then
    {
        serviceRequest.status as status then
        {
            serviceRequest ->  data.blockindex = 1;
            serviceRequest ->  data.groupindex = 0;
            serviceRequest ->  data.itemid = 'id_2523';
            status where "$this = 'active'"-> data.values as values,values.value = 'in Bearbeitung';
            status where "$this = 'completed'"-> data.values as values,values.value = 'abgeschlossen';
        };
    };

    serviceRequest.status as status, status.extension as statusAbschluss, statusAbschluss where "url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss'" then
    {
        // Abschluss  
        statusAbschluss.extension as statusExtension, statusExtension where "url = 'status'" -> tgt.data as data then
        {
            serviceRequest ->  data.blockindex = 1;
            serviceRequest ->  data.groupindex = 0;
            serviceRequest ->  data.itemid = 'bu_closing';
            statusExtension.valueCodeableConcept as vcc, vcc.coding as coding then
            {
                coding.code as code where "code != 'C17649'" -> data.values as values,values.value = code;
                coding.code as code where "code = 'C17649'" then
                {
                    code -> data.values as values, values.value = 'other';
                    vcc.text as text -> data.values as values, values.isother = true, values.value = text; 
                };
            };
        };

        // Datum des Abschlusses
        statusAbschluss.extension as datumExtension, datumExtension where "url = 'datum'" -> tgt.data as data then
        {
            serviceRequest ->  data.blockindex = 1;
            serviceRequest ->  data.groupindex = 0;
            serviceRequest ->  data.itemid = 'id_2524';
            datumExtension.valueDate as valueDate -> data.values as values,values.value = valueDate;
        };
    };

    // Datum des Versands
    serviceRequest -> tgt.data as data then
    {
        serviceRequest.extension as datumExtension, datumExtension where "url ='http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/versandDatum'" then
        {
            serviceRequest ->  data.blockindex = 1;
            serviceRequest ->  data.groupindex = 0;
            serviceRequest ->  data.itemid = 'id_2525';
            datumExtension.valueDate as valueDate -> data.values as values,values.value = valueDate;
        };
    };
}