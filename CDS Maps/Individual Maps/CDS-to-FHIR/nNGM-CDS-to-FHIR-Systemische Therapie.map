/// version = 0.1
/// title = "nNGM_Mapping_SystemischeTherapieFHIR"

/*
    TODO
    MedicationAdministration
    - what to do with uuid_nngm_MedicationAdministration_changed?
    - Missing extension.url for Anzahl der Zyklen (id_1250)
        profile requires dosage.rate.value, .system and .code
    - Missing valueSet for id_2342
    - When 'Abbruch wegen Progress' option is checked in Art des Therapieendes (id_1356), it displays a field named 'Datum Progess' (blockindex = 6, groupindex = 0, itemid = 'sy_date_progress'),
        but its information is not on Seatable nor Master excel file, so it's not being mapped
    - id_1465 isn't mapping properly because it cannot override value already set by id_1246, even though it's effectivePeriod.start and id_1246 it's effective.start

    EpisodeOfCare
    - what to do with uuid_nngm_dateOfProgress (and/or uuid_nngm_dateOfProgress2)?
*/

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_SystemischeTherapieFHIR" = nNGM_Mapping_SystemischeTherapieFHIR

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/MedicationAdministration" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target
uses "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare" as target
uses "http://hl7.org/fhir/StructureDefinition/Observation" as target

group TransformBundleSystemischeTherapie(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations then CreateMedicationAdministrationSY(operations, bundle, composition, section);
    // operations then CreatePatientSY(operations, bundle, composition, section);
    operations then CreateEpisodeOfCareSY(operations, bundle, composition, section);
    operations then CreateObservationEcogSY(operations, bundle, composition, section);
    operations then CreateObservationBestResponseSY(operations, bundle, composition, section);
}

/* ------------------------------ Check if MedicationAdministration needs to be created ---------------------------- */
group CreateMedicationAdministrationSY(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    let resourceIsCreated = create('Boolean');
    operations then SetBooleanToFalse(operations, resourceIsCreated);

    operations.data as data, data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1600'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_2336'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_2337'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_2338'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_2339'
                                                        or blockindex = 2 and groupindex = 0 and itemid = 'id_1246'
                                                        or blockindex = 2 and groupindex = 0 and itemid = 'id_1247'
                                                        or blockindex = 2 and groupindex = 0 and itemid = 'id_1242'
                                                        or blockindex = 2 and groupindex = 0 and itemid = 'id_1243'
                                                        or blockindex = 2 and groupindex = 0 and itemid = 'id_2341'
                                                        or blockindex = 2 and groupindex = 0 and itemid = 'id_2345'
                                                        or blockindex = 2 and groupindex = 0 and itemid = 'id_1244'
                                                        or blockindex = 3 and groupindex = 0 and itemid = 'id_1241'
                                                        or blockindex = 3 and groupindex = 0 and itemid = 'id_1250'
                                                        or blockindex = 3 and groupindex = 0 and itemid = 'id_1464'
                                                        or blockindex = 3 and groupindex = 0 and itemid = 'id_1488'
                                                        or blockindex = 3 and groupindex = 0 and itemid = 'id_1359'
                                                        or blockindex = 3 and groupindex = 0 and itemid = 'id_1465'
                                                        or blockindex = 4 and groupindex = 0 and itemid = 'id_1357'
                                                        or blockindex = 4 and groupindex = 0 and itemid = 'id_2342'
                                                        or blockindex = 6 and groupindex = 0 and itemid = 'id_1356'
                                                        or blockindex = 6 and groupindex = 0 and itemid = 'id_2343'
                                                        or blockindex = 7 and groupindex = 0 and itemid = 'id_1205'" then
    {
        // if resource is not created yet: call transform
        operations where "%resourceIsCreated.valueBoolean = false" -> bundle.entry as entry, entry.resource = create('MedicationAdministration') as medicationAdministration then 
        {
            operations then TransformMedicationAdministrationSY(operations, medicationAdministration, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(medicationAdministration, '\'MedicationAdministration/\' + $this.id');
            operations then SetBooleanToTrue(operations, resourceIsCreated);
        };
    };
}

/* ------------------------------ MedicationAdministration ---------------------------- */
group TransformMedicationAdministrationSY(source operations: BackboneElement, target tgt: MedicationAdministration, target composition: Composition, target section: BackboneElement)
{
    // Profile url
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/MedicationAdministration';

    // Subject
    operations -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(composition, '\'Patient/\' + $this.subject.reference');

    
    // Access data
    operations.data as data then
    {
        // Category
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1488'" then
        {
            values.value as value where "$this.value = 'yes'" then 
            {
                value -> tgt.category = cc('http://ncit.nci.nih.gov', 'C25446');
            };

            values.value as value where "$this.value = 'no'" then 
            {
                value -> tgt.category = cc('http://ncit.nci.nih.gov', 'C85582');
            };

            values.value as value where "$this.value != 'yes' and $this.value != 'no'" then 
            {
                value -> tgt.category = cc('http://terminology.hl7.org/CodeSystem/data-absent-reason', 'not-applicable');
            };
        };

        // ID + Composition insert
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'uuid_nngm_MedicationAdministration'" then
        {
            values.value as value where "unit.exists().not()" then // to not use the unit = _changed uuid value element
            {
                values.value as value -> tgt.id = value;
                values.value as value -> section.entry = create('Reference') as medAdmin, medAdmin.reference = evaluate(value, '\'MedicationAdministration/\' + $this');
            };
        };

        // Diagnostikfall-ID: context.identifier
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1600'" then
        {
            values.value as value -> tgt.context = create('Reference') as context,
                                    context.identifier = id('http://www.acme.com/identifiers/patient', value);
        };

        // Therapieinformationen: supportingInformation.display
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2336'" then
        {
            values.value as value -> tgt.supportingInformation as supportingInformation,
                                    supportingInformation.display = value;
        };

        // Therapieinformationen war hilfreich: supportingInformation.extension:therapieInformationen.extension:hilfreich
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2337'" then
        {
            values.value as value where "$this.value = 'Ja'" then
            {
                value ->    tgt.supportingInformation as supportingInformation,
                            supportingInformation.extension as therapieInformationen,
                            therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
                            therapieInformationen.extension as hilfreich,
                            hilfreich.url = 'hilfreich',
                            hilfreich.valueBoolean = true;
            };

            values.value as value where "$this.value = 'Nein'" then
            {
                value ->    tgt.supportingInformation as supportingInformation,
                            supportingInformation.extension as therapieInformationen,
                            therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
                            therapieInformationen.extension as hilfreich,
                            hilfreich.url = 'hilfreich',
                            hilfreich.valueBoolean = false;
            };

            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value ->    tgt.supportingInformation as supportingInformation,
                            supportingInformation.extension as therapieInformationen,
                            therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
                            therapieInformationen.extension as hilfreich,
                            hilfreich.url = 'hilfreich',
                            hilfreich.valueBoolean as valueBoolean,
                            valueBoolean.extension as dataAbsentReason,
                            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');
            };
        };

        // Therapieinformationen wurde umgesetzt: supportingInformation.extension:therapieInformationen.extension:umgesetzt
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2338'" then
        {
            values.value as value where "$this.value = 'Ja'" then
            {
                values ->   tgt.supportingInformation as supportingInformation,
                            supportingInformation.extension as therapieInformationen,
                            therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
                            therapieInformationen.extension as umgesetzt,
                            umgesetzt.url = 'umgesetzt',
                            umgesetzt.valueBoolean = true;
            };

            values.value as value where "$this.value = 'Nein'" then
            {
                values ->   tgt.supportingInformation as supportingInformation,
                            supportingInformation.extension as therapieInformationen,
                            therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
                            therapieInformationen.extension as umgesetzt,
                            umgesetzt.url = 'umgesetzt',
                            umgesetzt.valueBoolean = false;

                // Map Grund für die Nichtumsetzung element because it only shows up when 'Nein' is selected
                operations then MapGrundFurDieNichtumsetzungMedicationAdministrationSY(operations, tgt);
            };

            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                values ->   tgt.supportingInformation as supportingInformation,
                            supportingInformation.extension as therapieInformationen,
                            therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
                            therapieInformationen.extension as umgesetzt,
                            umgesetzt.url = 'umgesetzt',
                            umgesetzt.valueBoolean as valueBoolean,
                            valueBoolean.extension as dataAbsentReason,
                            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');
            };
        };

        // Therapiebeginn: effective.start
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1246'" then
        {
            values.value as value -> tgt.effective as effective, effective.start = dateOp(value, 'dateTime');
        }; 

        // Therapieende: effective.end
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1247'" then
        {
            values.value as value -> tgt.effective as effective collate, effective.end = dateOp(value, 'dateTime');
        };

        // Durchführende Einrichtung: performer.actor.display
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1242'" then
        {
            values.value as value ->    tgt.performer as performer,
                                        performer.actor = create('Reference') as actor,
                                        actor.display = value;
        };

        // Therapeutische Intention: reasonCode
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1243'" then
        {
            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value ->    tgt.reasonCode as reasonCode,
                            reasonCode.extension as dataAbsentReason,
                            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                            dataAbsentReason.valueCode = cast('not-applicable', 'FHIR.code');
            };

            values.value as value where "$this.value != 'N/A' and $this.value != 'N\/A'" then
            {
                value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie', value, value);
            };
        };

        // Off-Label-Behandlung: extension:offLabelTherapie.valueBoolean
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2341'" then
        {
            values.value as value where "$this.value = 'Ja'" then
            {
                value ->    tgt.extension as offLabelTherapie,
                            offLabelTherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/OffLabelTherapie',
                            offLabelTherapie.valueBoolean = true;
            };

            values.value as value where "$this.value = 'Nein'" then
            {
                value ->    tgt.extension as offLabelTherapie,
                            offLabelTherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/OffLabelTherapie',
                            offLabelTherapie.valueBoolean = false;
            };
        };

        // Therapie innerhalb einer klinischen Studie: extension:studientherapie.extension:teilnahme.valueBoolean
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1245'" then
        {
            values.value as value where "$this.value = 'Ja'" then
            {
                value ->    tgt.extension as studientherapie,
                            studientherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/cancer-base/studientherapie',
                            studientherapie.extension as teilnahme,
                            teilnahme.url = 'teilnahme',
                            teilnahme.valueBoolean = true;
                
                // Map Studienname element because it only shows up when 'Ja' is selected
                operations then MapStudiennameMedicationAdministrationSY(operations, tgt);
            };

            values.value as value where "$this.value = 'Nein'" then
            {
                value ->    tgt.extension as studientherapie,
                            studientherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/cancer-base/studientherapie',
                            studientherapie.extension as teilnahme,
                            teilnahme.url = 'teilnahme',
                            teilnahme.valueBoolean = false;
            };
        };

        // Therapieschema: medicationValueCodeableConcept
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1241'" then
        {
            values.value as value -> tgt.medicationCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nNGM/SystemischeTherapieMedikation', value);

            values.value as value where "$this.value.exists()" then
            {
                value ->    tgt.medicationCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nNGM/SystemischeTherapieMedikation', value);
                value ->    tgt.medicationCodeableConcept = create('CodeableConcept') as medicationCodeableConcept collate,
                            medicationCodeableConcept.text = 'Therapieschema',
                            medicationCodeableConcept.coding = c('http://uk-koeln.de/fhir/CodeSystem/nNGM/SystemischeTherapieMedikation', value);
            };
        };

        // Anzahl der Zyklen (ohne Erhaltung): dosage.valueInteger id_1250
        // TODO: code may be incorrect
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1250'" then
        {
            values.value as value ->    tgt.dosage as dosage,
                                        dosage.rateQuantity as anzahlZyklen,
                                        anzahlZyklen.system = 'http://unitsofmeasure.org',
                                        anzahlZyklen.code = '1',
                                        anzahlZyklen.value = value;
        };
        
        //  Änderung des Schemas
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1488'" then
        {
            values.value as value where "$this.value = 'yes'" then
            {
                operations then MapAnderungDesSchemasElementsMedicationAdministrationSY(operations, tgt);
            };
        };

        // Erhaltungstherapie als Option: extension:Erhaltungstherapie.extension:option
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1357'" then
        {
            values.value as value where "$this.value = 'Ja'" then
            {
                value ->    tgt.extension as erhaltungstherapie,
                            erhaltungstherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/erhaltungstherapie',
                            erhaltungstherapie.extension as option,
                            option.url = 'option',
                            option.valueBoolean = true;

                operations then MapErhaltungstherapieElementMedicationAdministrationSY(operations, tgt);
            };
            
            values.value as value where "$this.value = 'Nein'" then
            {
                value ->    tgt.extension as erhaltungstherapie,
                            erhaltungstherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/erhaltungstherapie',
                            erhaltungstherapie.extension as option,
                            option.url = 'option',
                            option.valueBoolean = false;
            };
        };

        // Art des Therapieendes: status (+ statusReason)
        data.values as values where "blockindex = 6 and groupindex = 0 and itemid = 'id_1356'" then
        {
            values.value as value where "$this.value = 'Regul\u00e4res Ende' or $this.value = 'Reguläres Ende'" then
            {
                value -> tgt.status = 'completed';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund',
                         statusReasonCoding.code = 'Regul\u00e4res Ende',
                         statusReasonCoding.display = 'Regul\u00e4res Ende';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
            };

            values.value as value where "$this.value = 'Abbruch wegen Nebenwirkungen'" then
            {
                value -> tgt.status = 'stopped';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund',
                         statusReasonCoding.code = 'nebenwirkungenab',
                         statusReasonCoding.display = 'Abbruch wegen Nebenwirkungen';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
            };

            values.value as value where "$this.value = 'Pause wegen Nebenwirkungen'" then
            {
                value -> tgt.status = 'on-hold';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund',
                         statusReasonCoding.code = 'nebenwirkungenpa',
                         statusReasonCoding.display = 'Pause wegen Nebenwirkungen';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
                operations then MapNebenwirkungenGradMedicationAdministrationSY(operations, tgt);
            };

            values.value as value where "$this.value = 'Abbruch wegen Progress'" then
            {
                value -> tgt.status = 'stopped';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund',
                         statusReasonCoding.code = 'progress',
                         statusReasonCoding.display = 'Progress';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
                operations then MapNebenwirkungenGradMedicationAdministrationSY(operations, tgt);
            };

            values.value as value where "$this.value = 'Ablehnung durch den Patienten'" then
            {
                value -> tgt.status = 'not-done';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund',
                         statusReasonCoding.code = 'ablehnungPatient',
                         statusReasonCoding.display = 'Ablehnung durch den Patienten';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
            };

            values.value as value where "$this.value = 'Vielversprechendere Therapieoption'" then
            {
                value -> tgt.status = 'not-done';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund',
                         statusReasonCoding.code = 'vielversprechendereTherapieoption',
                         statusReasonCoding.display = 'Vielversprechendere Therapieoption';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
            };

            values.value as value where "$this.value = 'Patient verstorben'" then
            {
                value -> tgt.status = 'stopped';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund',
                         statusReasonCoding.code = 'verstorben',
                         statusReasonCoding.display = 'Patient verstorben';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
            };

            values.value as value where "$this.value = 'Sonstiges'" then
            {
                value -> tgt.status = 'unknown';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund',
                         statusReasonCoding.code = 'sonstiges',
                         statusReasonCoding.display = 'Sonstiges';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
            };

            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value -> tgt.status = 'unknown';
                value -> tgt.statusReason as statusReason,
                         statusReason.coding as statusReasonCoding,
                         statusReasonCoding.system = 'http://terminology.hl7.org/CodeSystem/data-absent-reason',
                         statusReasonCoding.code = 'not-applicable',
                         statusReasonCoding.display = 'not-applicable';
                
                operations then MapAnderungdesTherapieSchemas(operations, tgt);
            };
        };

        // Bemerkungen: note.text
        data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_1205'" then
        {
            values.value as value ->    tgt.note as note,
                                        note.text = value;
        };

        // Referenzen
        // Observation

    };
}

/* ------------------------------ MedicationAdministration - Grund für die Nichtumsetzung ---------------------------- */
group MapGrundFurDieNichtumsetzungMedicationAdministrationSY(source operations: BackboneElement, target tgt: MedicationAdministration)
{
    // Grund für die Nichtumsetzung: supportingInformation.extension:therapieInformationen.extension:nichtumsetzungGrund
    operations.data as data, data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2339'" then
    {
        values.value as value where "$this.value.exists()" then
        {
            value ->    tgt.supportingInformation as supportingInformation,
                        supportingInformation.extension as therapieInformationen,
                        therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
                        therapieInformationen.extension as nichtumsetzungGrund,
                        nichtumsetzungGrund.url = 'nichtumsetzungGrund',
                        nichtumsetzungGrund.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/SystemischeTherapieGrundNichtumsetzung', value);
        };
    };
}

/* ------------------------------ MedicationAdministration - Studienname ---------------------------- */
group MapStudiennameMedicationAdministrationSY(source operations: BackboneElement, target tgt: MedicationAdministration)
{
    // Studienname: extension:studientherapie.extension:studie
    operations.data as data, data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1244'" then
    {
        values.value as value where "$this.value.exists()" then
        {
            value ->    tgt.extension as studientherapie collate,
                        studientherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/cancer-base/studientherapie',
                        studientherapie.extension as studie,
                        studie.url = 'studie',
                        studie.valueReference = create('Reference') as reference,
                        reference.reference = evaluate(value, '$this.split(\'\\t\').first()'),
                        reference.display = evaluate(value, '$this.split(\'\\t\').last()');
        };
    };
}

/* ------------------------------ MedicationAdministration - Änderung des TherapieSchemas ---------------------------- */
group MapAnderungdesTherapieSchemas(source operations: BackboneElement, target tgt: MedicationAdministration)
{
    operations.data as data then
    {   
        
        // Grund für die Änderung des Therapieschemas: statusReason.text
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1464'" then
        {
            values.value as value where "$this.value.exists()" then
            {
                value -> tgt.statusReason as statusReason collate,
                         statusReason.coding as statusReasonCoding ,
                         statusReason.text =  value;
            };
        };
    };
}


/* ------------------------------ MedicationAdministration - Elements displayed when Änderung des Schemas is 'Ja' ---------------------------- */
group MapAnderungDesSchemasElementsMedicationAdministrationSY(source operations: BackboneElement, target tgt: MedicationAdministration)
{
    operations.data as data then
    {   
        // Neues Therapieschema: medicationCodeableConcept
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1359'" then
        {
            values.value as value -> tgt.medicationCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nNGM/SystemischeTherapieMedikation', value);
            
            values.value as value where "$this.value.exists()" then
            {
                value ->    tgt.medicationCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nNGM/SystemischeTherapieMedikation', value);
                value ->    tgt.medicationCodeableConcept = create('CodeableConcept') as medicationCodeableConcept collate,
                            medicationCodeableConcept.text = 'NeuesTherapieschema',
                            medicationCodeableConcept.coding = c('http://uk-koeln.de/fhir/CodeSystem/nNGM/SystemischeTherapieMedikation', value);
            };
        };

        // Datum der Änderung: effectivePeriod.start
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1465'" then
        {
            values.value as value where "$this.value.exists()" then
            {
                value ->    tgt.effectivePeriod = create('Period') as effectivePeriod,
                            effectivePeriod.start = dateOp(value, 'dateTime');
            };
        };
    };
}

/* ------------------------------ MedicationAdministration - Elements displayed when Erhaltungstherapie als Option is 'Ja' ---------------------------- */
group MapErhaltungstherapieElementMedicationAdministrationSY(source operations: BackboneElement, target tgt: MedicationAdministration)
{
    // Für die Erhaltungstherapie verabreichtes Medikament: extension:Erhaltungstherapie.extension:medikament
    operations.data as data, data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_2342'" then
    {
        values.value as value where "$this.value.exists()" then
        {
            values.value as value where "$this.value.exists()" then
            {
                value ->    tgt.extension as erhaltungstherapie collate,
                            erhaltungstherapie.extension as option,
                            option.url = 'medikament',
                            option.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nNGM/SystemischeTherapieMedikation', value);
            };
        };
    };
}

/* ------------------------------ MedicationAdministration - Element displayed when Art des therapieendes is 'Abbruch wegen Nebenwirkungen' or 'Pause wegen Nebenwirkungen' ---------------------------- */
group MapNebenwirkungenGradMedicationAdministrationSY(source operations: BackboneElement, target tgt: MedicationAdministration)
{
    // Nebenwirkungen Grad III / Grad IV: extension:nebenwirkung
    operations.data as data, data.values as values where "blockindex = 6 and groupindex = 0 and itemid = 'id_2343'"then
    {
        values.value as value where "$this.value.exists() and $this.value = 'Ja'" then
        {
            value ->    tgt.extension as nebenwirkung,
                        nebenwirkung.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/Nebenwirkung',
                        nebenwirkung.valueBoolean = true;
        };

        values.value as value where "$this.value.exists() and $this.value = 'Nein'" then
        {
            value ->    tgt.extension as nebenwirkung,
                        nebenwirkung.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/Nebenwirkung',
                        nebenwirkung.valueBoolean = false;
        };

        values.value as value where "$this.value.exists() and $this.value = 'N/A' or $this.value = 'N\/A'" then
        {
            value ->    tgt.extension as nebenwirkung,
                        nebenwirkung.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/Nebenwirkung',
                        nebenwirkung.valueBoolean as valueBoolean,
                        valueBoolean.extension as dataAbsentReason,
                        dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                        dataAbsentReason.valueCode = cast('not-applicable', 'FHIR.code');
        };
    };
}

/* ------------------------------ Check if Patient needs to be created ---------------------------- */
group CreatePatientSY(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations.data as data, data.values as values where "blockindex = 6 and groupindex = 0 and itemid = 'id_2344'" then
    {
        operations -> bundle.entry as entry, entry.resource = create('Patient') as patient then 
        {
            operations then TransformPatientSY(operations, patient, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(patient, '\'Patient/\' + $this.id');
        };
    };
}

/* ------------------------------ Patient ---------------------------- */
group TransformPatientSY(source operations: BackboneElement, target tgt: Patient, target composition: Composition, target section: BackboneElement)
{
    // Profile url
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM/patient';

    // Name
    operations -> tgt.name as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Gender
    operations -> tgt.gender as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // BirthDate
    operations -> tgt.birthDate as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 6 and groupindex = 0 and itemid = 'uuid_nngm_patient3'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as patient, patient.reference = evaluate(value, '\'Patient/\' + $this');
        };

        // Todesdatum: deceased.deceasedDateTime
        data.values as values where "blockindex = 6 and groupindex = 0 and itemid = 'id_2344'" then
        {
            values.value as value -> tgt.deceasedDateTime = dateOp(value, 'dateTime');
        };
    };
}

/* ------------------------------ Check if EpisodeOfCare needs to be created ---------------------------- */
group CreateEpisodeOfCareSY(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations.data as data, data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1545'" then
    {
        operations -> bundle.entry as entry, entry.resource = create('EpisodeOfCare') as episodeOfCare then 
        {
            operations then TransformEpisodeOfCareSY(operations, episodeOfCare, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(episodeOfCare, '\'EpisodeOfCare/\' + $this.id');
        };
    };
}

/* ------------------------------ EpisodeOfCare ---------------------------- */
group TransformEpisodeOfCareSY(source operations: BackboneElement, target tgt: EpisodeOfCare, target composition: Composition, target section: BackboneElement)
{
    // Profile url
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/EpisodeOfCare/nNGM';

    // Identifier.system and Identifier.value: items required on simplifier
    operations ->  tgt.identifier = create('Identifier') as nngmFallnummer,
                    nngmFallnummer.system = 'http://uk-koeln.de/NamingSystem/nNGM/fallnummer',
                    nngmFallnummer.value as value,
                    value.extension as dataAbsentReason,
                    dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                    dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Status: item required on simplifier
    operations -> tgt.status = 'active';

    // Patient
    operations -> tgt.patient = create('Reference') as subject, subject.reference = evaluate(composition, '\'Patient/\' + $this.subject.reference');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'uuid_nngm_dateOfProgress'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as episodeOfCare, episodeOfCare.reference = evaluate(value, '\'EpisodeOfCare/\' + $this');
        };

        //Datum Progress: EpisodeOfCare.extension:datumProgress
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1545'" then
        {
            values.value as value ->    tgt.extension as datumProgress,
                                        datumProgress.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/datumProgress',
                                        datumProgress.valueDate = dateOp(value, 'date');
        };
    };
}

/* ------------------------------ Check if Observation ECOG needs to be created ---------------------------- */
group CreateObservationEcogSY(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations.data as data, data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2415'" then
    {
        operations -> bundle.entry as entry, entry.resource = create('Observation') as observation then 
        {
            operations then TransformObservationEcogSY(operations, observation, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(observation, '\'Observation/\' + $this.id');
        };
    };
}

/* ------------------------------ Observation ECOG ---------------------------- */
group TransformObservationEcogSY(source operations: BackboneElement, target tgt: Observation, target composition: Composition, target section: BackboneElement)
{
    // Profile url
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/ecog';

    // Status: item required on simplifier
    operations -> tgt.status = 'final';

    // Category: item required on simplifier
    operations -> tgt.category = cc('http://terminology.hl7.org/CodeSystem/observation-category', 'survey');

    // Code: item required on simplifier
    operations -> tgt.code = cc('http://loinc.org', '89247-1');

    // Subject
    operations -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(composition, '\'Patient/\' + $this.subject.reference');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'uuid_nngm_ecog2'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as observation, observation.reference = evaluate(value, '\'Observation/\' + $this');
        };

        // ECOG Performance Status bei Therapiebeginn: valueCodeableConcept
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2415'" then
        {
            values.value as value where "$this.value = '0 - normale, uneingeschr\u00e4nkte Aktivit\u00e4t, wie vor der Erkrankung'" then
            {
                value -> tgt.valueCodeableConcept = cc('urn:oid:1.2.276.0.76.3.1.131.1.5.153', '0', 'ECOG 0 (Normale, uneingeschränkte Aktivität wie vor der Erkrankung)');
            };

            values.value as value where "$this.value = '1 - Einschr\u00e4nkung bei k\u00f6rperlicher Anstrengung, gehf\u00e4hig, leichte k\u00f6rperliche Arbeit m\u00f6glich'" then
            {
                value -> tgt.valueCodeableConcept = cc('urn:oid:1.2.276.0.76.3.1.131.1.5.153', '1', 'ECOG 1: (Einschränkung bei körperlicher Anstrengung, aber gehfähig; leichte körperliche Arbeit bzw. Arbeit im Sitzen)');
            };

            values.value as value where "$this.value = '2 - gef\u00e4hig, Selbstversorgung m\u00f6glich, aber nicht arbeitsf\u00e4hig, kann mehr als 50 % der Wachzeit aufstehen'" then
            {
                value -> tgt.valueCodeableConcept = cc('urn:oid:1.2.276.0.76.3.1.131.1.5.153', '2', 'ECOG 2: (Gehfähig, Selbstversorgung möglich, aber nicht arbeitsfähig; kann mehr als 50% der Wachzeit aufstehen)');
            };
            
            values.value as value where "$this.value = '3 - nur begrenzte Selbstversorgung m\u00f6glich, 50 % oder mehr der Wachzeit an Bett oder Stuhl gebunden'" then
            {
                value -> tgt.valueCodeableConcept = cc('urn:oid:1.2.276.0.76.3.1.131.1.5.153', '3', 'ECOG 3: (Nur begrenzte Selbstversorgung möglich; ist 50% oder mehr der Wachzeit an Bett oder Stuhl gebunden)');
            };
            
            values.value as value where "$this.value = '4 - v\u00f6llig pflegebed\u00fcrftig, keinerlei Selbstversorgung m\u00f6glich, v\u00f6llig an Bett oder Stuhl gebunden'" then
            {
                value -> tgt.valueCodeableConcept = cc('urn:oid:1.2.276.0.76.3.1.131.1.5.153', '4', 'ECOG 4: (Völlig pflegebedürftig, keinerlei Selbstversorgung möglich; völlig an Bett oder Stuhl gebunden)');
            };

            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value ->    tgt.valueCodeableConcept as valueCodeableConcept,
                            valueCodeableConcept.extension as dataAbsentReason,
                            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                            dataAbsentReason.valueCode = cast('not-applicable', 'FHIR.code');
            };
        };
    };
}

/* ------------------------------ Check if Observation BestResponse needs to be created ---------------------------- */
group CreateObservationBestResponseSY(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    let resourceIsCreated = create('Boolean');
    operations then SetBooleanToFalse(operations, resourceIsCreated);

    operations.data as data, data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1354'
                                                        or blockindex = 5 and groupindex = 0 and itemid = 'id_1355'" then
    {
        operations where "%resourceIsCreated.valueBoolean = false" -> bundle.entry as entry, entry.resource = create('Observation') as observation then 
        {
            operations then TransformObservationBestResponseSY(operations, observation, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(observation, '\'Observation/\' + $this.id');
            operations then SetBooleanToTrue(operations, resourceIsCreated);
        };
    };
}

/* ------------------------------ Observation BestResponse ---------------------------- */
group TransformObservationBestResponseSY(source operations: BackboneElement, target tgt: Observation, target composition: Composition, target section: BackboneElement)
{
    // Profile url
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/best-response';

    // Status: item required on simplifier
    operations ->  tgt.status = cast('unknown', 'FHIR.code');

    // Category: item required on simplifier
    operations -> tgt.category = cc('http://terminology.hl7.org/CodeSystem/observation-category', 'therapy');

    // Code: item required on simplifier
    operations -> tgt.code = cc('http://ncit.nci.nih.gov', 'C94536');

    // Subject
    operations -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(composition, '\'Patient/\' + $this.subject.reference');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'uuid_nngm_bestResponse'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as observation, observation.reference = evaluate(value, '\'Observation/\' + $this');
        };

        // Referenzen
        // PartOf
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'uuid_nngm_MedicationAdministration'" then
        {
            values.value as value where "unit.exists().not()" then // to not use the unit = _changed uuid value element
            {
                values.value as value -> tgt.partOf = create('Reference') as medAdmin, medAdmin.reference = evaluate(value, '\'MedicationAdministration/\' + $this');
            };
        };

        // Bestes Ansprechen: valueCodeableConcept
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1354'" then
        {
            values.value as value where "$this.value = 'Complete Response'" then
            {
                value -> tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/SystemischeTherapieRECIST', 'CR', 'Complete Remission');
            };

            values.value as value where "$this.value = 'Partial Response'" then
            {
                value -> tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/SystemischeTherapieRECIST', 'PR', 'Partial Remission');
            };

            values.value as value where "$this.value = 'Stable Disease'" then
            {
                value -> tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/SystemischeTherapieRECIST', 'SD', 'Stable Disease');
            };

            values.value as value where "$this.value = 'Progressiv Disease'" then
            {
                value -> tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/SystemischeTherapieRECIST', 'PD', 'Progressive Disease');
            };

            values.value as value where "$this.value = 'Divergentes Geschehen (nach RECIST nicht m\u00f6glich)'" then
            {
                value -> tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/SystemischeTherapieDivergentesGeschehen', 'Divergentes Geschehen (nach RECIST nicht möglich)', 'Divergentes Geschehen (nach RECIST nicht möglich)');
            };

            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value ->    tgt.valueCodeableConcept as valueCodeableConcept,
                            valueCodeableConcept.extension as dataAbsentReason,
                            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                            dataAbsentReason.valueCode = cast('not-applicable', 'FHIR.code');
            };
        };

        // Beurteilung nach: method
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1355'" then
        {
            values.value as value -> tgt.method = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/SystemischeTherapieBeurteilungNach', value);
        };
    };
}