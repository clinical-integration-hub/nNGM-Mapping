/// version = 0.1
/// title = "nNGM_Mapping_SonstigeTherapie"


map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_SonstigeTherapieFHIR" = nNGM_Mapping_SonstigeTherapieFHIR

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/Procedure" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target

group TransformBundleSonstigeTherapie(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations then CreateProcedureSonstigeTherapien(operations, bundle, composition, section);
    operations then CreatePatientSonstigeTherapie(operations, bundle, composition, section);
}

/* ------------------------------ Procedure ---------------------------- */
group CreateProcedureSonstigeTherapien(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations.data as data, data.values as value where "blockindex = 0 and groupindex = 0 and itemid = 'id_1213'" then
    {
        operations -> bundle.entry as entry, entry.resource = create('Procedure') as procedure then 
        {
            operations then TransformProcedureSonstigeTherapie(operations, procedure, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(procedure, '\'Procedure/\' + $this.id');
        };
    };
}

/* ------------------------------ Procedure ---------------------------- */
group TransformProcedureSonstigeTherapie(source operations: BackboneElement, target tgt: Procedure, target composition: Composition, target section: BackboneElement)
{
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/SonstigeTherapie';

    // Status
    operations -> tgt.status as status,
                status.extension as dataAbsentReason,
                dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');
    // Subject
    operations -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(composition, '\'Patient/\' + $this.subject.reference');

    // Code
    operations -> tgt.code as code, code.coding = c('http://ncit.nci.nih.gov', 'C15645');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'uuid_nngm_sonstigetherapie'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as procedure, procedure.reference = evaluate(value, '\'Procedure/\' + $this');
        };

        // Art der Therapie
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1213'" then 
        {
            values.value as artdertherapie -> tgt.category = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/SonstigeTherapieArtDerTherapie', artdertherapie);
        };

        // Therapiebeginn
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1220'" then
        {
            values.value as value -> tgt.performedPeriod = create('BackboneElement') as performedPeriod collate, performedPeriod.start = dateOp(value, 'date');
        };

        // Therapieende
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1221'" then
        {
            values.value as value -> tgt.performedPeriod = create('BackboneElement') as performedPeriod collate, performedPeriod.end = dateOp(value, 'date');
        };

        // Durchführende Einrichtung
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2434'" then
        {
            values.value as value -> tgt.performer as performer, performer.actor as actor, actor.display = value;
        };

        // Maintenance
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1360'" then
        {
            operations -> tgt.extension = create('BackboneElement') as maintenance,
                            maintenance.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/maintenance' then
            {
                values.value as value where "$this.value = 'yes'" then
                {
                    operations -> maintenance.valueBoolean = cast(true, 'FHIR.boolean');
                };
                values.value as value where "$this.value != 'yes'" then
                {
                    operations -> maintenance.valueBoolean = cast(false, 'FHIR.boolean');
                };
            };
        };

        // Bemerkungen
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1472'" then
        {
            values.value as value -> tgt.note as note, note.text = value;
        };

        // Grund für keine Therapie / BSC
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1547'" then
        {
            values.value as value ->    tgt.reasonCode as reasonCode,
                                        reasonCode.extension = create('BackboneElement') as grundKeineTherapie,
                                        grundKeineTherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/grund-keine-therapie',
                                        grundKeineTherapie.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/SonstigeTherapieGrundKeineTherapieUNK', value);
        };

        // Lokalisation
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1215'" then
        {
            // Auswahl
            values.value as value where "$this.value = 'Lunge' or $this.value = 'Leber'" then 
            {
                value -> tgt.bodySite = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/SonstigeTherapieLokalisationUNK', value);
            };

            values.value as value where "$this.value = 'other'" then 
            {
                value -> tgt.bodySite = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/SonstigeTherapieLokalisationUNK', 'C17649', 'Other');
            };

            // Freitext
            values.value as value where "$this.isother = true" then
            {
                value -> tgt.bodySite as bodySite, bodySite.text = value;
            };
        };

        // Methode
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1467'" then
        {
            // Auswahl
            values.value as value where "$this.value = 'Transarterielle Chemoembolisation' or $this.value = 'Radiofrequenzablation' or $this.value = 'Selektive interne Radiotherapie'" then
            {
                values.value as value -> tgt.code as code, code.extension = create('BackboneElement') as methode then
                {
                    operations -> methode.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/methode-sonstige-therapie';
                    operations -> methode.extension = create('BackboneElement') as extensionMethode,
                                    extensionMethode.url = 'methode',
                                    extensionMethode.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/SonstigeTherapieMethodeUNK', value);
                };                      
            };

            // Freitext
            values.value as value where "$this.isother = true" then
            {
                values.value as value -> tgt.code as code, code.extension = create('BackboneElement') as methode then
                {
                    operations -> methode.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/methode-sonstige-therapie';
                    operations -> methode.extension = create('BackboneElement') as sonstigeMethode,
                                    sonstigeMethode.url = 'sonstigeMethode',
                                    sonstigeMethode.valueString = value;
                };                              
            };
        };

        // Therapeutische Intention
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1218'" then
        {
            // Auswahl
            values.value as value where "$this.value = 'Alternative Methoden' or $this.value = 'Other'" then
            {
                value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/nngm/intention-sonstige-therapieOther', value);
            };

            // Freitext
            values.value as value where "$this.isother = true" then
            {
                values.value as value -> tgt.reasonCode as reasonCode, reasonCode.text = value;
            };
        };

        // Bezeichnung / Beschreibung der alternativen Methoden
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1219'" then
        {
            values.value as value ->    tgt.reasonCode as reasonCode,
                                        reasonCode.extension = create('BackboneElement') as beschreibungAlternativeMethode,
                                        beschreibungAlternativeMethode.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/beschreiung-alternativer-methode',
                                        beschreibungAlternativeMethode.valueString = value;
        };
    };
}

/* ------------------------------ Check if Patient needs to be created ---------------------------- */
group CreatePatientSonstigeTherapie(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations.data as data, data.values as value where "blockindex = 3 and groupindex = 0 and itemid = 'id_2401'" then
    {
        operations -> bundle.entry as entry, entry.resource = create('Patient') as patient then 
        {
            operations then TransformPatientSonstigeTherapie(operations, patient, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(patient, '\'Patient/\' + $this.id');
        };
    };
}

/* ------------------------------ Patient ---------------------------- */
group TransformPatientSonstigeTherapie(source operations: BackboneElement, target tgt: Patient, target composition: Composition, target section: BackboneElement)
{
    // Mapped profile with profile URL
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM';

    // Name
    operations -> tgt.name as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Gender
    operations -> tgt.gender as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // BirthDate
    operations -> tgt.birthDate as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'uuid_nngm_patient2'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as patient, patient.reference = evaluate(value, '\'Patient/\' + $this');
        };

        // Todesdatum
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2401'" then
        {
            values.value as value -> tgt.deceasedDateTime = dateOp(value, 'date');
        };
    };
}