/// version = 0.1
/// title = "nNGM_Mapping_Operation_Therapie"

/*
TODO
    - Need to add reference to newly created patient?
*/

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_OperationTherapieFHIR" = nNGM_Mapping_OperationTherapieFHIR

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/Procedure" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target

group TransformBundleOperationTherapie(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations then CreateProcedureOperationTherapie(operations, bundle, composition, section);
    operations then CreatePatientOperationTherapie(operations, bundle, section);
}

/* ------------------------------ Check whether Procedure needs to be created ---------------------------- */
group CreateProcedureOperationTherapie(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    let resourceIsCreated = create('Boolean');
    operations then SetBooleanToFalse(operations, resourceIsCreated);

    operations.data as data, data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_842'
                                                        or blockindex = 0 and groupindex = 0 and itemid = 'id_1162'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_1167'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_1168'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_2335'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_2400'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_1176'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_1353'
                                                        or blockindex = 1 and groupindex = 0 and itemid = 'id_1362'
                                                        or blockindex = 3 and groupindex = 0 and itemid = 'id_1472'" then
    {
        // if resource is not created yet: call transform
        operations where "%resourceIsCreated.valueBoolean = false" -> bundle.entry as entry, entry.resource = create('Procedure') as procedure then 
        {
            operations then TransformProcedureOperationTherapie(operations, procedure, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(procedure, '\'Procedure/\' + $this.id');
            operations then SetBooleanToTrue(operations, resourceIsCreated);
        };
    };
}

/* ------------------------------ Procedure ---------------------------- */
group TransformProcedureOperationTherapie(source operations: BackboneElement, target tgt: Procedure, target composition: Composition, target section: BackboneElement)
{
    // Mapped profile with profile URL
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/OP';

    // Status
    operations -> tgt.status as status = cast(status, 'FHIR.code');

    // Subject
    operations -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(composition, '\'Patient/\' + $this.subject.reference');

    // Code
    operations -> tgt.code as code, code.coding = c('http://ncit.nci.nih.gov', 'C15329');

    // Category 
    operations -> tgt.category as categorycc,
                categorycc.coding as category,
                category.extension as dataAbsentReason,
                dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code'); 

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'uuid_nngm_op'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as procedure, procedure.reference = evaluate(value, '\'Procedure/\' + $this');
        };

        // Operationsdatum - performed.performedDateTime
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_842'" then
        {
            values.value as value -> tgt.performedDateTime = dateOp(value, 'date');
        };

        // DurchfÃ¼hrende Einrichtung - performer.actor.display
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1162'" then
        {
            values.value as value -> tgt.performer as performer, performer.actor as actor, actor.display = value;
        };

        // Operative Intention - reasonCode
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1167'" then
        {
            values.value where "$this.value = 'Kurativ'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie', value);
            };

            values.value where "$this.value = 'Palliativ'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie', value);
            };
            
            values.value where "$this.value = 'Diagnostisch'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie', value);
            };

            values.value where "$this.value = 'Revision\/Komplikation' or $this.value = 'Revision/Komplikation'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie', value);
            };

            values.value where "$this.value = 'Sonstiges'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie', value);
            };

            values.value where "$this.value = 'N\/A' or $this.value = 'N/A'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie', 'unknown');
            };
        };

        // Art des Eingriffs - code.extension:artDesEingriffs
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1168'" then
        {
            values.value as value where "$this.value = 'N\/A' or $this.value = 'N/A'" then 
            {
                value ->    tgt.code as code, 
                            code.extension = create('BackboneElement') as artDesEingriffs,
                            artDesEingriffs.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/art-des-eingriffs',
                            artDesEingriffs.valueCodeableConcept = cc('http://terminology.hl7.org/CodeSystem/data-absent-reason', 'unknown');
            };
            
            values.value as value where "$this.value != 'N\/A' and $this.value != 'N/A'" then 
            {
                value ->    tgt.code as code, 
                            code.extension = create('BackboneElement') as artDesEingriffs,
                            artDesEingriffs.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/art-des-eingriffs',
                            artDesEingriffs.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/ngnm/OperationArtDesEingriffs', value);
            };
        };

        // Lokalisation (Auswahl) - bodySite.coding
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2335'" then
        {
            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then 
            {
                value -> tgt.bodySite as bodySite, bodySite.coding = c('http://terminology.hl7.org/CodeSystem/data-absent-reason', 'unknown');
            };

            values.value as value where "$this.value != 'N/A' and $this.value != 'N\/A' and $this.value != 'other'" then 
            {
                value -> tgt.bodySite as bodySite, bodySite.coding = c('http://uk-koeln.de/fhir/ValueSet/nNGM/OperationLokalisationUNK', value);
            };

            values.value as value where "$this.isother = true" then 
            {
                value -> tgt.bodySite as bodySite, bodySite.coding = c('http://ncit.nci.nih.gov', 'C17649');
            };
        };

        // Lokalisation (Freitext) - bodySite.text
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2335'" then
        {
            values.value as value where "$this.isother.exists()" then 
            {
                value -> tgt.bodySite as bodySite collate, bodySite.text = value;
            };
        };

        // Seitenlokalisation - extension:seitenlokalisation
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2400'" then
        {
            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value ->    tgt.bodySite as bodySite,
                            bodySite.extension = create('BackboneElement') as seitenLokalisation,
                            seitenLokalisation.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/seitenlokalisation',
                            seitenLokalisation.valueCodeableConcept = cc('http://terminology.hl7.org/CodeSystem/data-absent-reason', 'unknown');
            };
            
            values.value as value where "$this.value != 'N/A' and $this.value != 'N\/A'" then
            {
                value ->    tgt.bodySite as bodySite,
                            bodySite.extension = create('BackboneElement') as seitenLokalisation,
                            seitenLokalisation.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/seitenlokalisation',
                            seitenLokalisation.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/OperationSeitenlokalisation', value);
            };
        };

        // Art der Resektion - code.extension:resektion.extension:resektionsart
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1176'" then
        {
            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value ->    tgt.code as code,
                            code.extension = create('BackboneElement') as resektion,
                            resektion.extension = create('BackboneElement') as resektionsart,
                            resektionsart.url = 'resektionsart',
                            resektionsart.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/OperationArtResektion', 'unknown');
            };

            values.value as value where "$this.value != 'N/A' and $this.value != 'N\/A'" then
            {
                value ->    tgt.code as code,
                            code.extension = create('BackboneElement') as resektion,
                            resektion.extension = create('BackboneElement') as resektionsart,
                            resektionsart.url = 'resektionsart',
                            resektionsart.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/OperationArtResektion', value);
            };
        };

        // Resektionsstatus - code.extension:resektion.extension:resektionsstatus
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1353'" then
        {
            values.value as value ->    tgt.code as code,
                                        code.extension = create('BackboneElement') as resektion,
                                        resektion.extension = create('BackboneElement') as resektionsstatus,
                                        resektionsstatus.url = 'resektionsstatus',
                                        resektionsstatus.valueCodeableConcept = cc('http://loinc.org', value);

        };

        // Lymphadenektomie - extension:lymphadenektomie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1362'" then
        {
            values.value where "$this.value = 'Ja'" then
            {
                values.value as value ->    tgt.extension = create('BackboneElement') as lymphadenektomie,
                                            lymphadenektomie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/lymphadenektomie',
                                            lymphadenektomie.valueBoolean = true;
            };
            
            values.value where "$this.value = 'Nein'" then
            {
                values.value as value ->    tgt.extension = create('BackboneElement') as lymphadenektomie,
                                            lymphadenektomie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/lymphadenektomie',
                                            lymphadenektomie.valueBoolean = false;
            };

            values.value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                values.value as value ->    tgt.extension = create('BackboneElement') as lymphadenektomie,
                                            lymphadenektomie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/lymphadenektomie',
                                            lymphadenektomie.extension as dataAbsentReason,
                                            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                                            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');
            };
        };

        // Bemerkungen - note.text
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1472'" then
        {
            values.value as value -> tgt.note as note, note.text = value;
        };
    };
}

/* ------------------------------ Check whether Patient needs to be created ---------------------------- */
group CreatePatientOperationTherapie(source operations: BackboneElement, target bundle: Bundle, target section: BackboneElement)
{
    operations.data as data, data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2401'" then
    {
        operations -> bundle.entry as entry, entry.resource = create('Patient') as patient then 
        {
            operations then TransformPatientOperationTherapie(operations, patient, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(patient, '\'Patient/\' + $this.id');
        };
    };         
}

/* ------------------------------ Patient ---------------------------- */
group TransformPatientOperationTherapie(source operations: BackboneElement, target tgt: Patient, target section: BackboneElement)
{
    // Mapped profile with profile URL
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM/patient';

    // Name
    operations -> tgt.name as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Gender
    operations -> tgt.gender as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // BirthDate
    operations -> tgt.birthDate as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'uuid_nngm_patient2'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as patient, patient.reference = evaluate(value, '\'Patient/\' + $this');
        };

        // Todesdatum
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2401'" then
        {
            values.value as value -> tgt.deceasedDateTime = dateOp(value, 'date');
        };
    };
}