/// version = 0.1
/// title = "StrahlentherapieMap"

/*
    TODO
    - unclear what to do with newly created patient, should this one be referenced as subject?
    - EpisodeOfCare: nngmFallnummer missing or rather unclear which value to use here
*/

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_StrahlentherapieFHIR" = nNGM_Mapping_StrahlentherapieFHIR

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/Procedure" as target
uses "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target


group TransformBundleStrahlentherapie(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations then CreateProcedureStrahlentherapie(operations, bundle, composition, section);
    operations then CreateEpisodeOfCareStrahlentherapie(operations, bundle, composition, section);
    operations then CreatePatientStrahlentherapie(operations, bundle, section);
}

/* ------------------------------ Check whether Procedure needs to be created ---------------------------- */
group CreateProcedureStrahlentherapie(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    let resourceIsCreated = create('Boolean');
    operations then SetBooleanToFalse(operations, resourceIsCreated);

    operations.data as data, data.values as values where "blockindex = 0 and groupindex = 0 and itemid ='id_1185'
                                                        or blockindex = 0 and groupindex = 0 and itemid ='id_1186'
                                                        or blockindex = 0 and groupindex = 0 and itemid ='id_1182'
                                                        or blockindex = 1 and groupindex = 0 and itemid ='id_1181'
                                                        or blockindex = 1 and groupindex = 0 and itemid ='id_1183'
                                                        or blockindex = 1 and groupindex = 0 and itemid ='id_1196'
                                                        or blockindex = 1 and groupindex = 0 and itemid ='id_1198'
                                                        or blockindex = 1 and groupindex = 0 and itemid ='id_1199'
                                                        or blockindex = 1 and groupindex = 0 and itemid ='id_1363'
                                                        or blockindex = 1 and groupindex = 0 and itemid ='id_1364'
                                                        or blockindex = 2 and groupindex = 0 and itemid ='id_1211'" then
    {
        // if resource is not created yet: call transform
        operations where "%resourceIsCreated.valueBoolean = false" -> bundle.entry as entry, entry.resource = create('Procedure') as procedure then 
        {
            operations then TransformProcedureStrahlentherapie(operations, procedure, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(procedure, '\'Procedure/\' + $this.id');
            operations then SetBooleanToTrue(operations, resourceIsCreated);
        };
    };
}

/* ------------------------------ Procedure ---------------------------- */
group TransformProcedureStrahlentherapie(source operations: BackboneElement, target tgt: Procedure, target composition: Composition, target section: BackboneElement)
{
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/Strahlentherapie';

    // Category
    operations -> tgt.category as category then
    {
        operations -> category.coding = create ('Coding') as coding, coding.system = 'http://uk-koeln.de/fhir/CodeSystem/cancer-base/procedure-category',
                                                                    coding.code = 'radiotherapy';                                                    
    };

    // Code
    operations -> tgt.code = cc('http://ncit.nci.nih.gov', 'C15313');

    // Subject
    operations -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(composition, '\'Patient/\' + $this.subject.reference');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'uuid_nngm_strahlentherapie'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as procedure, procedure.reference = evaluate(value, '\'Procedure/\' + $this');
        };

        //------------[DURCHFÜHRUNG]------------
        //Therapiebeginn
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid ='id_1185'" then
        {
            values.value as start -> tgt.performed = create('Period') as period collate, period.start = dateOp(start, 'date');
        };

        //Therapieende
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid ='id_1186'" then
        {
            values.value as end -> tgt.performed = create('Period') as period collate, period.end = dateOp(end, 'date');
        };

        //Durchführende Einrichtung
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid ='id_1182'" then
        {
            values.value as value -> tgt.performer as performer, 
                                    performer.actor = create('Reference') as actor,
                                                        actor.display = value;
        };

        //------------[THERAPIEMERKMALE]------------
        //Bestrahlungsziel
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid ='id_1181'" then
        {
            values.value as value where "value =  'N/A'" then 
            {
                value -> tgt.bodySite = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/Strahlentherapie_Bestrahlungsziel','not-applicable','Not Applicable');
            };
            values.value as value where "value !=  'N/A'" then 
            {
                value -> tgt.bodySite = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/Strahlentherapie_Bestrahlungsziel',value,value);
            };
            
        };

        //Therapeutische Intention
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid ='id_1183'" then
        {
            values.value as value where "value =  'N/A'" then 
            {
               value -> tgt.reasonCode = cc('http://terminology.hl7.org/CodeSystem/data-absent-reason','unknown','Unknown');
            };
            values.value as value where "value !=  'N/A'" then 
            {
                value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/intention-therapie',value,value);
            };
        };

        //Art der Bestrahlung
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid ='id_1196'" then
        {
             values.value as value where "value =  'N/A'" then 
            {
                value -> tgt.code as code,
                        code.extension as artDerBestrahlung,
                        artDerBestrahlung.valueCodeableConcept = cc('http://terminology.hl7.org/CodeSystem/data-absent-reason','unknown','Unknown');
            };
            values.value as value where "value !=  'N/A'" then 
            {
                 value -> tgt.code as code,
                        code.extension as artDerBestrahlung,
                        artDerBestrahlung.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nNGM/StrahlentherapieArtDerBestrahlung',value,value);
            };           
        };

        //Dosis
        //Einzeldosis (Gy)
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid ='id_1198'" then
        {
            values -> tgt.extension as dosis, 
                        dosis.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/strahlentherapie-dosis',
                        dosis.extension as einzeldosis then
                        {
                            values -> einzeldosis.url = 'einzeldosis';
                            values -> einzeldosis.valueQuantity = create('Quantity') as quantity then 
                                {
                                    values.value as value -> quantity.value = value;
                                    values.value as value -> quantity.system = 'http://unitsofmeasure.org';
                                    values.unit as unit   -> quantity.code = unit;
                                };                                                  
                        };
        
        };

        //Gesamtdosis (Gy)
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid ='id_1199'" then
        {
            values -> tgt.extension as dosis, 
                        dosis.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/strahlentherapie-dosis',
                        dosis.extension as gesamtdosis then
                        {
                            values -> gesamtdosis.url = 'gesamtdosis';
                            values -> gesamtdosis.valueQuantity = create('Quantity') as quantity then 
                                {
                                    values.value as value -> quantity.value = value;
                                    values.value as value -> quantity.system = 'http://unitsofmeasure.org';
                                    values.unit as unit   -> quantity.code = unit;
                                };                                                  
                        };
        };

        //Boost
        //Boost durchgeführt
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid ='id_1363'" then
        {
            values.value as value where "value =  'ja'" then 
            {
                value -> tgt.extension as dosis,
                        dosis.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/strahlentherapie-dosis',
                        dosis.extension as boost then
                        {
                            value -> boost.url = 'boost';
                            value -> boost.valueBoolean = true;
                        };
            };
            values.value as value where "value =  'nein'" then 
            {
                value -> tgt.extension as dosis,
                        dosis.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/strahlentherapie-dosis',
                        dosis.extension as boost then
                        {
                            value -> boost.url = 'boost';
                            value -> boost.valueBoolean = false;
                        };
            };
            values.value as value where "value =  'ja, Boostdosis in Gesamtdosis enthalten'" then 
            {
                value -> tgt.extension as dosis,
                        dosis.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/strahlentherapie-dosis',
                        dosis.extension as boostdosis then
                        {
                            value -> boostdosis.url = 'boostdosisInGesamtdosis';
                            value -> boostdosis.valueBoolean = true;
                        };
            };
        };

        //Boostdosis (Gy)
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid ='id_1364'" then
        {
            values -> tgt.extension as dosis, 
                    dosis.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/strahlentherapie-dosis',
                    dosis.extension as boostdosis then
                    {
                        values -> boostdosis.url = 'boostdosis';
                        values -> boostdosis.valueQuantity = create('Quantity') as quantity then 
                            {
                                values.value as value -> quantity.value = value;
                                values.value as value -> quantity.system = 'http://unitsofmeasure.org';
                                values.unit as unit   -> quantity.code = unit;
                            };                                                  
                    };
        };
        
        //------------[Ende der Therapie]------------
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid ='id_1211'" then
        {
            values.value as value where "value = 'Reguläres Ende'" then
            {
                operations -> tgt.status = 'completed';
                operations -> tgt.statusReason = cc('http://uk-koeln.de/fhir/ValueSet/cancer-base/therapie-statusreason', value);
            };
            values.value as value where "value = 'Abbruch wegen Nebenwirkungen'" then
            {
                operations -> tgt.status = 'stopped';
                operations -> tgt.statusReason = cc('https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund','nebenwirkungen','nebenwirkungen');
            };
            values.value as value where "value = 'Pause wegen Nebenwirkungen'" then
            {
                operations -> tgt.status = 'on-hold';
                operations -> tgt.statusReason = cc('https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund','nebenwirkungen','nebenwirkungen');
            };
            values.value as value where "value = 'Abbruch wegen Progress'" then
            {
                operations -> tgt.status = 'stopped';
                operations -> tgt.statusReason = cc('https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund','progress','Progress');
            };
            values.value as value where "value = 'Ablehnung durch den Patienten'" then
            {
                operations -> tgt.status = 'not-done';
                operations -> tgt.statusReason = cc('https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund','ablehnungPatient','ablehnungPatient');
            };
            values.value as value where "value = 'Patient verstorben'" then
            {
                operations -> tgt.status = 'stopped';
                operations -> tgt.statusReason = cc('https://www.uk-koeln.de/nngm/CodeSystem/ST_Ende_Grund','verstorben','verstorben');
            };
            values.value as value where "value = 'Sonstiges'" then
            {
                operations -> tgt.status = 'unknown';
                operations -> tgt.statusReason = cc('http://uk-koeln.de/fhir/ValueSet/cancer-base/therapie-statusreason', value);
            };
            values.value as value where "value = 'N/A'" then
            {
                operations -> tgt.status = 'unknown';
                operations -> tgt.statusReason = cc('http://terminology.hl7.org/CodeSystem/data-absent-reason','not-applicable','not-applicable');
            };
        };

        //Bemerkungen
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid ='id_1190'" then
        {
            values -> tgt.note = create('Annotation') as annotation then 
            {
                values.value as value -> annotation.text = value;
            };
        };
    };
}

/* ------------------------------ Check whether EpisodeOfCare needs to be created ---------------------------- */
group CreateEpisodeOfCareStrahlentherapie(source operations: BackboneElement, target bundle: Bundle, target composition: Composition, target section: BackboneElement)
{
    operations.data as data, data.values as values where "blockindex = 2 and groupindex = 0 and itemid ='id_1543'" then
    {
        operations -> bundle.entry as entry, entry.resource = create('EpisodeOfCare') as episodeOfCare then 
        {
            operations then TransformEpisodeOfCareStrahlentherapie(operations, episodeOfCare, composition, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(episodeOfCare, '\'EpisodeOfCare/\' + $this.id');
        };
    };
}

/* ------------------------------ EpisodeOfCare ---------------------------- */
group TransformEpisodeOfCareStrahlentherapie(source operations: BackboneElement, target tgt: EpisodeOfCare, target composition: Composition, target section: BackboneElement)
{
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/EpisodeOfCare/nNGM';
    
    // Status
    operations -> tgt.status = 'active';

    // Patient
    operations -> tgt.patient = create('Reference') as patient, patient.reference = evaluate(composition, '\'Patient/\' + $this.subject.reference');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'uuid_nngm_dateOfProgress3'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as episodeOfCare, episodeOfCare.reference = evaluate(value, '\'EpisodeOfCare/\' + $this');
        };

        // nngmFallnummer
        // TODO: which number should be used here?
        operations -> tgt.identifier = create('Identifier') as nngmFallnummer,
                                                                nngmFallnummer.system = 'http://uk-koeln.de/NamingSystem/nNGM/fallnummer',
                                                                nngmFallnummer.value as value,
                                                                value.extension as dataAbsentReason, 
                                                                dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
                                                                dataAbsentReason.valueCode = cast('unknown', 'FHIR.code');
        // data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'assessment_id'" then
        // {
        //     values.value as id -> tgt.identifier = create('identifier') as nngmFallnummer,
        //                                                                     nngmFallnummer.system = 'http://uk-koeln.de/NamingSystem/nNGM/fallnummer',
        //                                                                     nngmFallnummer.value  = id;
        // };

        //Datum Progress
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid ='id_1543'" then
        {
            values.value as value -> tgt.extension as datumProgress, datumProgress.valueDate = dateOp(value, 'date');
        };
    };
}

/* ------------------------------ Check whether Patient needs to be created ---------------------------- */
group CreatePatientStrahlentherapie(source operations: BackboneElement, target bundle: Bundle, target section: BackboneElement)
{
    operations.data as data, data.values as values where "blockindex = 2 and groupindex = 0 and itemid ='id_1544'" then
    {
        operations -> bundle.entry as entry, entry.resource = create('Patient') as patient then 
        {
            operations then TransformPatientStrahlentherapie(operations, patient, section);
            operations -> entry.request as request, request.method = 'PUT', request.url = evaluate(patient, '\'Patient/\' + $this.id');
        };
    };
}

/* ------------------------------ Patient ---------------------------- */
group TransformPatientStrahlentherapie(source operations: BackboneElement, target tgt: Patient, target section: BackboneElement)
{
    operations -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM';

    // Name
    operations -> tgt.name as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Gender
    operations -> tgt.gender as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // BirthDate
    operations -> tgt.birthDate as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Access data
    operations.data as data then
    {
        // ID + Composition insert
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'uuid_nngm_patient4'" then
        {
            values.value as value -> tgt.id = value;
            values.value as value -> section.entry = create('Reference') as patient, patient.reference = evaluate(value, '\'Patient/\' + $this');
        };

        //Todesdatum
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid ='id_1544'" then
        {
            values.value as value -> tgt.deceasedDateTime = dateOp(value, 'date');
        };
    };
}