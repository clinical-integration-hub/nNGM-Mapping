/// version = 0.1
/// title = "nNGM: Antrag - FHIR to CTS"


map "http://uk-koeln.de/fhir/StructureMap/AntragCTS" = AntragCTS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformCTS(source src: Bundle, target tgt: CTS_Transport)
{
    src -> tgt.version = '1.1';
    src -> tgt.sourcesystem = 'https:\/\/nngm-qat.staging.healex.systems\/';
    
    src -> tgt.operations as operations collate, operations.crfid = 'Antrag';
    src -> tgt.operations as operations collate, operations.type = 'save';

    src.entry as entry then
    {

        /* -------------------------Stammdaten-----------------------------------*/

        /* ------------------------------- EpisodeOfCare ---------------------------- */

     entry.resource as episodeofcare where "resource is EpisodeOfCare and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/EpisodeOfCare/nNGM'" then
        {   
            episodeofcare -> tgt.operations as operations collate then
            {
                episodeofcare -> operations.data as data then 
                {
                    episodeofcare.extension as erstdiagnose then
                    {
                        erstdiagnose.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/nngmErstdiagnose'" then 
                        {
                           episodeofcare -> data.blockindex = 1;
                           episodeofcare -> data.groupindex = 0;
                           episodeofcare -> data.itemid = 'id_1297';
                           erstdiagnose -> data.values as values, values.value = value; 
                        };
                    };
                };
            };

            episodeofcare -> tgt.operations as operations collate then
            {
                episodeofcare -> operations.data as data then 
                {
                    episodeofcare.extension as letzterkontakt then
                    {
                        letzterkontakt.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/abrechnungsinformation/letzterKontakt'" then 
                        {
                           episodeofcare -> data.blockindex = 1;
                           episodeofcare -> data.groupindex = 0;
                           episodeofcare -> data.itemid = 'id_803';
                           letzterkontakt -> data.values as values, values.value = value; 
                        };
                    };
                };
            };

            
             episodeofcare -> tgt.operations as operations collate then
            {
                episodeofcare -> operations.data as data then 
                {
                    episodeofcare.status as status, status.extension as statusext then
                    {
                        statusext.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/nngmStatus'" then 
                        {
                           episodeofcare -> data.blockindex = 1;
                           episodeofcare -> data.groupindex = 0;
                           episodeofcare -> data.itemid = 'id_1139';
                           statusext.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as value -> data.values as values, values.value = value; 
                        };
                    };
                };
            };
        };

        /* -------------------------Basisangaben-----------------------------------*/
        entry.resource as organization where "resource is Organization and resource.meta.profile = 'http://fhir.de/StructureDefinition/organization-de-basis/0.2'" then 
        {
            organization -> tgt.operations as operations collate then
            {
                organization -> operations.data as data then 
                {
                    organization.identifier as identifier then
                    {
                        identifier.value as ival then
                        {
                            organization -> data.blockindex = 1;
                            organization -> data.groupindex = 0;
                            organization -> data.itemid = 'id_2326';
                            ival -> data.values as values, values.value = ival;
                        };
                    };
                };
            };
            
            //Referenzen Kontakt
            organization -> tgt.operations as operations collate then
            {
                organization -> operations.data as data then 
                {
                    organization.address as address then
                    {
                        address.text as text then
                        {
                            organization -> data.blockindex = 1;
                            organization -> data.groupindex = 0;
                            organization -> data.itemid = 'id_2485';
                            text -> data.values as values, values.value = text;
                        };
                    };
                };
            };
        };


        entry.resource as organization where "resource is Organization and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Organization/clinical-site'" then 
        {
             //Netzwerkzentrum Standort
            organization -> tgt.operations as operations collate then
            {
                organization -> operations.data as data then 
                {
                    organization.identifier as name then
                    {
                        organization -> data.blockindex = 2;
                        organization -> data.groupindex = 0;
                        organization -> data.itemid = 'id_2435';
                        name.value as value -> data.values as values, values.value = value;
                    };
                };
            };

            //Netzwerkzentrum Kontakt
            organization -> tgt.operations as operations collate then
            {
                organization -> operations.data as data then 
                {
                    organization.address as address then
                    {
                        organization -> data.blockindex = 2;
                        organization -> data.groupindex = 0;
                        organization -> data.itemid = 'id_2458';
                        address.text as txt -> data.values as values, values.value = txt; 
                    };
                };
            };
        };

/* ------------------------------ ServiceRequest ---------------------------- */

    entry.resource as servicerequest where "resource is ServiceRequest and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/testung'" then
        {   
            //Patient ID -> cts.patid
             servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.subject as subject then
                    {   
                        subject.reference as patient then
                        {
                            patient -> tgt.patid = evaluate(patient, '$this.split(\'\/\').last()');
                        };
                    };
                };
            };

            //Anforderungsdatum
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then 
                {
                    servicerequest.authoredOn as authoredon then
                    {
                        servicerequest -> data.blockindex = 3;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid = 'id_1571';
                        authoredon -> data.values as values, values.value = authoredon;
                    };
                };
            };

            //Patient ist zum zeitpunkt der Anforderung 
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.extension as aufenthaltsart, aufenthaltsart.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsartBasisangaben'" then
                    {
                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'IMP'" then
                        {
                            servicerequest -> data.blockindex = 1;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_1589';
                            code -> data.values as values, values.value = 'stationÃ¤r';
                        };

                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'AMB'" then
                        {
                            servicerequest -> data.blockindex = 1;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_1589';
                            code -> data.values as values, values.value = 'ambulant';
                        };

                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'NA'" then
                        {
                            servicerequest -> data.blockindex = 1;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_1589';
                            code -> data.values as values, values.value = 'N/A';
                        };
                    };
                };
            };
        };

/* ------------------------------ Patient (No IDAT) ---------------------------- */


     entry.resource as patient where "resource is Patient" then
        {   
            patient -> tgt.operations as operations collate then
            {
                patient -> operations.data as data then 
                {
                    patient.gender as gender where "patient.gender.value = 'female'" then
                    {
                        patient -> data.blockindex = 4;
                        patient -> data.groupindex = 0;
                        patient -> data.itemid = 'id_1131';
                        gender -> data.values as values, values.value = 'weiblich'; 
                    };
                };
            };

            //Country
            patient -> tgt.operations as operations collate then
            {
                patient -> operations.data as data then 
                {
                    patient.address as address, address.country as country then
                    {
                        patient -> data.blockindex = 4;
                        patient -> data.groupindex = 0;
                        patient -> data.itemid = 'id_1280';
                        country -> data.values as values, values.value = country;
                    };
                };
            };
        };

    entry.resource as coverage where "resource is Coverage" then
        {   
            //Type.text
            coverage -> tgt.operations as operations collate then
            {
                coverage -> operations.data as data then 
                {
                    coverage.type as type, type.text as text then
                    {
                        coverage -> data.blockindex = 5;
                        coverage -> data.groupindex = 0;
                        coverage -> data.itemid = 'id_2459';
                        text -> data.values as values, values.value = text;
                    };
                };
            };


            //valueCodeableConcept.coding.code
            coverage -> tgt.operations as operations collate then
            {
                coverage -> operations.data as data then 
                {
                    coverage.extension as ext, ext.valueCodeableConcept as vcc, vcc.coding as coding then
                    {
                        coverage -> data.blockindex = 5;
                        coverage -> data.groupindex = 0;
                        coverage -> data.itemid = 'id_1270';
                        coding.code as code -> data.values as values, values.value = code; //translate(d, 'http://uk-koeln.de/fhir/ConceptMap/nngm/pkv-tarifformR', 'string');
                    };
                };
            };

            //payor.extension.valueCodeableConcept.coding.code -> abrechnungsinformationen
            coverage -> tgt.operations as operations collate then
            {
                coverage -> operations.data as data then 
                {
                    coverage.payor as payor, payor.extension as extension, extension.valueCodeableConcept as vcc, vcc.coding as coding then
                    {
                        coverage -> data.blockindex = 5;
                        coverage -> data.groupindex = 0;
                        coverage -> data.itemid = 'id_1333';
                        coding.code as info -> data.values as values, values.value = info;
                    };
                };
            };
        };

/* ------------------------------ Observation ---------------------------- */
     
    entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/koerpergroesse'" then 
    {   

            //Height
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then 
                {
                    observation.valueQuantity as quantity then
                    {
                        observation -> data.blockindex = 6;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_1133';
                        quantity.code as unit -> data.values as values, values.unit = unit;
                        quantity.value as height -> data.values as values collate, values.value = height;
                    };
                };
            };
    };

    entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/koerpergewicht'" then 
    {   

            //Weight
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then 
                {
                    observation.valueQuantity as quantity then
                    {
                        observation -> data.blockindex = 6;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_1132';
                        quantity.code as unit -> data.values as values, values.unit = unit;
                        quantity.value as weight -> data.values as values collate, values.value = weight;
                    };
                };
            };
    };

    entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/ecog'" then 
    {   

            //Ecog
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then 
                {
                    observation.valueCodeableConcept as vcc, vcc.coding as coding then
                    {
                        observation -> data.blockindex = 6;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2290';
                        coding.code as ecog -> data.values as values, values.value = ecog; //translate(ecog, 'http://uk-koeln.de/fhir/ConceptMap/nngm/ecogR', 'string');
                    };
                };
            };
    };

        entry.resource as observation where "resource is Observation" then 
        {   
            //Raucherstatus
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then 
                {
                    observation.valueCodeableConcept as vcc, vcc.coding as coding then
                    {
                        observation -> data.blockindex = 7;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2292';
                        coding.display as raucherstatus -> data.values as values, values.value = raucherstatus;
                    };
                };
            };

            //Nichtraucher seit  cast to dateTime
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then 
                {
                    observation.component as component then
                    {
                        observation -> data.blockindex = 7;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2293';
                        component.valueDateTime as seit -> data.values as values, values.value = seit; 
                    };
                };
            };
            
            //Pack years
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then 
                {
                    observation.component as component, component.valueQuantity as vq then
                    {
                        observation -> data.blockindex = 7;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2294';
                        vq.value as py -> data.values as values, values.value = py;
                    };
                };
            };
        };

        entry.resource as practitioner where "resource is Practitioner" then 
        {   
            //Email addresse behandler
            practitioner -> tgt.operations as operations collate then
            {
                practitioner -> operations.data as data then 
                {
                    practitioner.telecom as telecom then
                    {
                        practitioner -> data.blockindex = 10;
                        practitioner -> data.groupindex = 0;
                        practitioner -> data.itemid = 'id_2298';
                        telecom.value as email -> data.values as values, values.value = email;
                    };
                };
            };
        };
        
        
        entry.resource as consent where "resource is Consent" then 
        {   
            //1a Signed
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = '1a unterschrieben' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2240';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = '1a unterschrieben' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2240';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = '1a unterschrieben'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2241';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            //1b Signed
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = '1b unterschrieben' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2246';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = '1b unterschrieben' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2246';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = '1b unterschrieben'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2247';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            //2 Signed
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = '2 unterschrieben' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2249';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = '2 unterschrieben' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2249';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = '2 unterschrieben'" then
                    {
                        consent -> data.blockindex = 8;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2250';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            //Teilnahme erklarung
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'teilnahmeerklarung' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2392';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'teilnahmeerklarung' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2392';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'teilnahmeerklarung'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2393';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            //Datenschutz
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'datenschutzerklarung' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2398';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'datenschutzerklarung' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2398';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'datenschutzerklarung'" then
                    {
                        consent -> data.blockindex = 9;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2390';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };
            
            //Tumorboard vorstellung signed 
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Vorstellung des Falls im Tumorboard des nNGM (nNGM-Zentrum der Anforderung)' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 10;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2296';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Vorstellung des Falls im Tumorboard des nNGM (nNGM-Zentrum der Anforderung)' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 10;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2296';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            //Tumorboard telefonkonferenz signed 
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Tumorboard personlich oder per Telefonkonferenz' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 10;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2297';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Tumorboard personlich oder per Telefonkonferenz' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 10;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2297';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            /* -------------------Versorgung------------------------*/

            //Molpatho diagnostik signed 
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Molekularpathologische Diagnostik im nNGM (Behandlungskontext)' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2351';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Molekularpathologische Diagnostik im nNGM (Behandlungskontext)' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2351';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Molekularpathologische Diagnostik im nNGM (Behandlungskontext)'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2252';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            //Uberregionale Beratung
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Uberregionale Beratung und Studiensuche im nNGM (Behandlungskontext)' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2357';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Uberregionale Beratung und Studiensuche im nNGM (Behandlungskontext)' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2357';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Uberregionale Beratung und Studiensuche im nNGM (Behandlungskontext)'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2258';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

         /* -------------------ForschungsZwecke 1------------------------*/

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Weitergabe pseudonymisierter krankheitsbezogener Daten (MDAT) innerhalb des nNGM und an kooperierende Partner' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2361';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Weitergabe pseudonymisierter krankheitsbezogener Daten (MDAT) innerhalb des nNGM und an kooperierende Partner' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2361';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Uberregionale Beratung und Studiensuche im nNGM (Behandlungskontext)'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2362';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            /*-----------------------2------------------------*/

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Weitergabe von MDAT und Resttumorproben innerhalb des nNGM und an kooperierende Partner unterschrieben' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2364';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Weitergabe von MDAT und Resttumorproben innerhalb des nNGM und an kooperierende Partner unterschrieben' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2364';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Weitergabe von MDAT und Resttumorproben innerhalb des nNGM und an kooperierende Partner unterschrieben'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2265';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            /*--------------------3---------------------------*/
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Weitergabe pseudonymisierter krankheitsbezogener Daten (MDAT) in ein Drittland unterschrieben' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2367';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Weitergabe pseudonymisierter krankheitsbezogener Daten (MDAT) in ein Drittland unterschrieben' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2367';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Weitergabe pseudonymisierter krankheitsbezogener Daten (MDAT) in ein Drittland unterschrieben'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2368';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            /*------------------------4-----------------------*/
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Weitergabe von MDAT und Resttumorproben in ein Drittland unterschrieben' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2370';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Weitergabe von MDAT und Resttumorproben in ein Drittland unterschrieben' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2370';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Weitergabe von MDAT und Resttumorproben in ein Drittland unterschrieben'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2271';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            /*---------------------5--------------------------*/
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Weitergabe pseudonnymisierter krankheitsbezogener Daten (MDAT) zur kommerziellen Nutzung unterschrieben' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2373';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Weitergabe pseudonnymisierter krankheitsbezogener Daten (MDAT) zur kommerziellen Nutzung unterschrieben' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2373';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Weitergabe pseudonnymisierter krankheitsbezogener Daten (MDAT) zur kommerziellen Nutzung unterschrieben'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2274';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            /*----------------------6-------------------------*/
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Weitergabe von MDAT und Resttumorproben zur kommerziellen Nutzung' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2376';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Weitergabe von MDAT und Resttumorproben zur kommerziellen Nutzung' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2376';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Weitergabe von MDAT und Resttumorproben zur kommerziellen Nutzung'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2377';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            /*----------------------7-------------------------*/
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Kontaktaufnahme des nNGM-Zentrums zu einem spateren Zeiptunkt zur Gewinnung weiterer informationen uber den Behandlungsverlauf unterschrieben' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2382';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Kontaktaufnahme des nNGM-Zentrums zu einem spateren Zeiptunkt zur Gewinnung weiterer informationen uber den Behandlungsverlauf unterschrieben' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2382';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Kontaktaufnahme des nNGM-Zentrums zu einem spateren Zeiptunkt zur Gewinnung weiterer informationen uber den Behandlungsverlauf unterschrieben'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2383';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };

            /*------------------------8-----------------------*/
            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then 
                {
                    consent.provision as provision where "policy.uri = 'Kontaktaufnahme des nNGM-Zentrums zum Zweck des Einschlusses in eine mogliche infrage kommende neue Studie' and provision.type = 'permit'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2379';
                        provision.type -> data.values as values, values.value = 'yes';
                    };

                    consent.provision as provision where "policy.uri = 'Kontaktaufnahme des nNGM-Zentrums zum Zweck des Einschlusses in eine mogliche infrage kommende neue Studie' and provision.type = 'deny'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2379';
                        provision.type -> data.values as values, values.value = 'no';
                    };
                };
            };

            consent -> tgt.operations as operations collate then
            {
                consent -> operations.data as data then
                {
                    consent.policy as policy where "policy.uri = 'Kontaktaufnahme des nNGM-Zentrums zum Zweck des Einschlusses in eine mogliche infrage kommende neue Studie'" then
                    {
                        consent -> data.blockindex = 11;
                        consent -> data.groupindex = 0;
                        consent -> data.itemid = 'id_2380';
                        policy.extension as date, date.valueDateTime as value -> data.values as values, values.value = value;
                    };
                };
            };
        };
        /* -------------------------Anforderung-----------------------------------*/
        //BiopsieID
            specimen -> tgt.operations as operations collate then
            {
                specimen -> operations.data as data then
                {
                    specimen.identifier as biopsieID then
                    {   
                        biopsieID.value as bid where "$this.system = 'http://uk-koeln.de/NamingSystem/nNGM/biopsienummer'" then
                        {
                            specimen -> data.blockindex = 5;
                            specimen -> data.groupindex = 0;
                            specimen -> data.itemid = 'id_1601';
                            biopsieID -> data.values as values, values.value = bid;
                        };
                    };
                };
            };

            //Zu untersuchendes Material
            specimen -> tgt.operations as operations collate then
            {
                specimen -> operations.data as data then
                {
                    specimen.identifier as biopsieID then
                    {   
                        biopsieID.value as bid where "$this.system = 'http://uk-koeln.de/NamingSystem/nNGM/zuuntersuchendesmaterial'" then
                        {
                            specimen -> data.blockindex = 0;
                            specimen -> data.groupindex = 0;
                            specimen -> data.itemid = 'id_2457';
                            biopsieID -> data.values as values, values.value = bid;
                        };
                    };
                };
            };

            

            // Entnahmedatum
            specimen -> tgt.operations as operations collate then
            {
                specimen -> operations.data as data then
                {
                    specimen.collection as collection then
                    {
                        collection.collectedDateTime as collectedDateTime then
                        {
                            specimen -> data.blockindex = 1;
                            specimen -> data.groupindex = 0;
                            specimen -> data.itemid = 'id_1551';
                            collectedDateTime -> data.values as values, values.value = collectedDateTime;
                        };
                    };
                };
            };

            // Entnahmedatum
            specimen -> tgt.operations as operations collate then
            {
                specimen -> operations.data as data then
                {
                    specimen.collection as collection then
                    {
                        collection.collectedDateTime as collectedDateTime then
                        {
                            specimen -> data.blockindex = 2;
                            specimen -> data.groupindex = 0;
                            specimen -> data.itemid = 'id_2316';
                            collectedDateTime -> data.values as values, values.value = collectedDateTime;
                        };
                    };
                };
            };
        };

        /* ------------------------------ Observation ---------------------------- */
        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/histologie'" then 
        {
            //Histologie des vorbefunds
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.valueCodeableConcept as vcc, vcc.coding as coding then
                    {
                        observation -> data.blockindex = 1;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_836';
                        coding -> data.values as values, values.value = evaluate(coding, '$this.code + \'\\t\' + $this.display');
                    };
                };
            };

            // Histologie des vorbefunds (freitext?)
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.valueCodeableConcept as vcc, vcc.coding as coding where "$this.valueCodeableConcept.coding.code = 'CUP'" then
                    {
                        vcc.text as text then {
                            observation -> data.blockindex = 2;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_2319';
                            coding.code -> data.values as values, values.value = evaluate(coding, '$this.code + \'\\t\' + $this.display');
                        };
                    };
                };
            };
        };

        /* ------------------------------ Organization ---------------------------- */
        entry.resource as organization where "resource is Organization and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Organization/clinical-site'" then 
        {
            organization -> tgt.operations as operations collate then
            {
                organization -> operations.data as data then
                {
                    organization.name as name then 
                    {
                        organization -> data.blockindex = 4;
                        organization -> data.groupindex = 0;
                        organization -> data.itemid = 'id_1563';
                        name -> data.values as values, values.value = name;
                    };
                };
            };

            organization -> tgt.operations as operations collate then
            {
                organization -> operations.data as data then
                {
                    organization.address as address then 
                    {
                        address.text as text then 
                        {
                            organization -> data.blockindex = 4;
                            organization -> data.groupindex = 0;
                            organization -> data.itemid = 'id_1562';
                            text -> data.values as values, values.value = text;
                        };
                    };
                };
            };
        };

        /* ------------------------------ Practitioner ---------------------------- */
        entry.resource as practitioner where "resource is Practitioner and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Practitioner/nNGM'" then 
        {
            practitioner -> tgt.operations as operations collate then
            {
                practitioner -> operations.data as data then
                {
                    practitioner.identifier as identifier then 
                    {
                        identifier.value as value then 
                        {
                            practitioner -> data.blockindex = 4;
                            practitioner -> data.groupindex = 0;
                            practitioner -> data.itemid = 'id_1560';
                            value -> data.values as values, values.value = value;
                        };
                    };
                };
            };
        };


        /* ------------------------------ ServiceRequest ---------------------------- */
        entry.resource as servicerequest where "resource is ServiceRequest and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/testung'" then 
        {

            // Diagnostik Typ
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.category as category then
                    {
                        category.coding as coding where "$this.coding.system = 'http://uk-koeln.de/fhir/ValueSet/nngm/tests'" then
                        {
                            servicerequest -> data.blockindex = 0;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_1368';
                            coding.code as code -> data.values as values, values.value = code;
                        };
                    };
                };
            };

            // Materialentnahme erfolgte
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.extension as aufenthaltsart, aufenthaltsart.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsartAnforderung'" then
                    {
                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'IMP'" then
                        {
                            servicerequest -> data.blockindex = 1;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_1589';
                            code -> data.values as values, values.value = 'stationÃ¤r';
                        };

                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'AMB'" then
                        {
                            servicerequest -> data.blockindex = 1;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_1589';
                            code -> data.values as values, values.value = 'ambulant';
                        };

                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'NA'" then
                        {
                            servicerequest -> data.blockindex = 1;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_1589';
                            code -> data.values as values, values.value = 'N/A';
                        };
                    };
                };
            };

            
            //Tumorblockanforderung
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.doNotPerform as dnp where "doNotPerform = true" then
                    {
                        servicerequest -> data.blockindex = 4;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_2476';
                        dnp -> data.values as values, values.value = 'no';
                    };
                };
            };

            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.doNotPerform as dnp where "doNotPerform = false" then
                    {
                        servicerequest -> data.blockindex = 4;
                        servicerequest -> data.groupindex = 0;
                        servicerequest -> data.itemid  = 'id_2476';
                        dnp -> data.values as values, values.value = 'yes';
                    };
                };
            };

            //Grund zum entfallen der Tumorblockanforderung
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.extension as entfallen, entfallen.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/grundentfallen'" then 
                    {
                        entfallen.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code then 
                        {
                            servicerequest -> data.blockindex = 4;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_2490';
                            code -> data.values as values, values.value = code;
                        };
                    };
                };
            };

            //Liquid Biopsy
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.extension as liquidbiopsy then 
                    {
                        liquidbiopsy.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/LiquidBiopsy'" then 
                        {
                            servicerequest -> data.blockindex = 3;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_2313';
                            liquidbiopsy -> data.values as values, values.value = value;
                        };
                    };
                };
            };

            //GrundFehlendeBiopsie
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.extension as liquidbiopsy then 
                    {
                        liquidbiopsy.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/GrundFehlendeBiopsieAnforderung'" then 
                        {
                            servicerequest -> data.blockindex = 3;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_2314';
                            liquidbiopsy -> data.values as values, values.value = value;
                        };
                    };
                };
            };

            //gewunschte diagnostik
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.category as category, category.coding as coding where "$this.coding.system = 'http://uk-koeln.de/fhir/ValueSet/nngm/diagnostikanforderung'" then                        
                        {
                            servicerequest -> data.blockindex = 3;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_2473';
                            category.code as code -> data.values as values, values.value = code;
                        };
                }; 
            };

            //Tumorblock anforderung
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.occurrenceDateTime as dt then 
                    {
                            servicerequest -> data.blockindex = 4;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_2477';
                            dt -> data.values as values, values.value = dt;
                    };
                };
            };

            //wiederholungen
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.occurrenceTiming as ot then  
                    {
                        ot.repeat as repeat then 
                        {
                            servicerequest -> data.blockindex = 4;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_2478';
                            repeat.count as count -> data.values as values, values.value = count;
                        };
                    };
                };
            };

            //storno
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.extension as storno then 
                    {
                        storno.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/storno'" then 
                        {
                            servicerequest -> data.blockindex = 4;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_2479';
                            storno.valueDateTime as dt -> data.values as values, values.value = dt;
                        };
                    };
                };
            };

            //versandmaterial
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> operations.data as data then
                {
                    servicerequest.extension as versandmaterial then 
                    {
                        versandmaterial.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/versandmaterial'" then 
                        {
                            servicerequest -> data.blockindex = 4;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid = 'id_2480';
                            versandmaterial.valueDateTime as dt -> data.values as values, values.value = dt;
                        };
                    };
                };
            };
        
        /* -------------------------TNM-----------------------------------*/

        /* ------------------------------ Specimen ---------------------------- */
        entry.resource as specimen where "resource is Specimen and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Specimen/nNGM'" then
        {
            //Biopsie-ID
            specimen -> tgt.operations as operations collate then
            {
                specimen -> operations.data as data then
                {
                    specimen.identifier as biopsieID then
                    {   
                        biopsieID.value as bid where "$this.system = 'http://uk-koeln.de/NamingSystem/nNGM/biopsienummer'" then
                        {
                            specimen -> data.blockindex = 3;
                            specimen -> data.groupindex = 0;
                            specimen -> data.itemid = 'id_1601';
                            biopsieID -> data.values as values, values.value = bid;
                        };
                    };
                };
            };
        };
        
        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/tumorstadium'" then
        {
            //Patient ID -> cts.patid
             observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.subject as subject then
                    {   
                        subject.reference as patient then
                        {
                            patient -> tgt.patid = evaluate(patient, '$this.split(\'\/\').last()');
                        };
                    };
                };
            };
            

            //Erstdiagnose
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.extension as extensionEDT then
                    {   
                        extensionEDT.valueBoolean where "value = true and $this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/TNMErstdiagnose'" then
                        {
                            observation -> data.blockindex = 0;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1300';
                            extensionEDT -> data.values as values, values.value = 'yes';
                        };
                        
                        extensionEDT.valueBoolean where "value = false and $this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/TNMErstdiagnose'" then
                        {
                            observation -> data.blockindex = 0;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1300';
                            extensionEDT -> data.values as values, values.value = 'no';
                        };
                    }; 
                };
            };

            //Kurativ-operabel
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.extension as extensionEDT then
                    {   
                        extensionEDT.valueBoolean where "value = true and $this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/kurativoperabel'" then
                        {
                            observation -> data.blockindex = 0;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1385';
                            extensionEDT -> data.values as values, values.value = 'yes';
                        };
                        extensionEDT.valueBoolean where "value = false and $this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/kurativoperabel'" then
                        {
                            observation -> data.blockindex = 0;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1385';
                            extensionEDT -> data.values as values, values.value = 'no';
                        };
                    }; 
                };
            };
            //TNM-Klassifikation
             observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation -> data.blockindex = 0;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_2492';
                    observation.note as note, note.text as text -> data.values as values, values.value = text;
                };
            };
            //TNM-Klassifikation
            //Date of assessment
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation -> data.blockindex = 1;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1378';
                    observation.effectiveDateTime as effectiveDateTime -> data.values as values, values.value = effectiveDateTime;
                };
            };
            //Prafix
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.component as component then
                    {   
                        component.code as code where "code.coding.code = '59479-6'" then
                        {
                            observation -> data.blockindex = 1;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1379';
                            code -> data.values as values, values.value = 'r - Rezidiv';
                        };
                        component.code as code where "code.coding.code = '21983-2'" then
                        {
                            observation -> data.blockindex = 1;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1379';
                            code -> data.values as values, values.value = 'y - Zustand nach Therapie';
                        };
                    };
                };
            };
            //Tumor (T)
            //GrÃ¶Ãe und Ausdehnung des Tumors
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.component as component then
                    {   
                        component.code as code where "code.coding.code = '21905-5'" then
                        {
                            observation -> data.blockindex = 1;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1380';
                            component.valueCodeableConcept as vcc,
                            vcc.coding  as coding,
                            coding.code as code -> data.values as values, values.value = code;
                        };
                    };
                };
            };
            //prafix > 1, 0, id_2493
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.component as component then
                    {   
                        component.extension as extension then
                        {
                            extension.valueCodeableConcept as valueCodeableConcept where "valueCodeableConcept.text = 'T-praefix slice'" then
                            {
                                observation -> data.blockindex = 1;
                                observation -> data.groupindex = 0;
                                observation -> data.itemid = 'id_2493';
                                valueCodeableConcept.coding as coding,
                                coding.code as code -> data.values as values, values.value = code;
                            };
                        };
                    };
                };
            };
            //Suffix > 1, 0, id_2495
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.component as component then
                    {
                        component.extension as extension then {
                            extension.valueCodeableConcept as valueCodeableConcept where "valueCodeableConcept.text = 'T-suffix slice'" then
                            {
                                observation -> data.blockindex = 1;
                                observation -> data.groupindex = 0;
                                observation -> data.itemid = 'id_2495';
                                valueCodeableConcept.coding as coding,
                                coding.code as code -> data.values as values, values.value = code;
                            };
                        };

                    };
                };
            };
            //Lymphknoten (N)
            //GrÃ¶Ãe und Ausdehnung des Tumors
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.component as component then
                    {   
                        component.code as code where "code.coding.code = '21906-3'" then
                        {
                            observation -> data.blockindex = 1;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1381';
                            component.valueCodeableConcept as vcc,
                            vcc.coding  as coding,
                            coding.code as code -> data.values as values, values.value = code;
                        };
                    };
                };
            };
            //prafix
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.component as component then
                    {   
                        component.extension as extension then
                        {
                            extension.valueCodeableConcept as valueCodeableConcept where "valueCodeableConcept.text = 'N-praefix slice'" then
                            {
                                observation -> data.blockindex = 1;
                                observation -> data.groupindex = 0;
                                observation -> data.itemid = 'id_2497';
                                valueCodeableConcept.coding as coding,
                                coding.code as code -> data.values as values, values.value = code;
                            };
                        };
                    };
                };
            };
            //Metastasen(M)
            //Abwesenheit oder Vorhandensein von Metastasen
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.component as component then
                    {   
                        component.code as code where "code.coding.code = '21907-1'" then
                        {
                            observation -> data.blockindex = 1;
                            observation -> data.groupindex = 0;
                            observation -> data.itemid = 'id_1382';
                            component.valueCodeableConcept as vcc,
                            vcc.coding  as coding,
                            coding.code as code -> data.values as values, values.value = code;
                        };
                    };
                };
            };
            //Prafix
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation.component as component then
                    {   
                        component.extension as extension then
                        {
                            extension.valueCodeableConcept as valueCodeableConcept where "valueCodeableConcept.text = 'M-praefix slice'" then
                            {
                                observation -> data.blockindex = 1;
                                observation -> data.groupindex = 0;
                                observation -> data.itemid = 'id_2498';
                                valueCodeableConcept.coding as coding,
                                coding.code as code -> data.values as values, values.value = code;
                            };
                        };
                    };
                };
            };
            //UICC-Stadium
            observation -> tgt.operations as operations collate then
            {
                observation -> operations.data as data then
                {
                    observation -> data.blockindex = 2;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1383';
                    observation.valueCodeableConcept as valueCodeableConcept,
                    valueCodeableConcept.coding as coding,
                    coding.code as code -> data.values as values, values.value = code;
                };
            };
        };
        
    };
}