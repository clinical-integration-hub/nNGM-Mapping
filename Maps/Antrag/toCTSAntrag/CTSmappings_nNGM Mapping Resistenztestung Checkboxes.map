/// version = 0.1
/// title = "nNGM: nNGM_Mapping_Resistenztestung_checkboxesCTS - FHIR to CTS"

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_Resistenztestung_checkboxesCTS" = nNGM_Mapping_Resistenztestung_checkboxesCTS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformResistenztestungCheckboxes(source src: Bundle, target tgt: BackboneElement)
{
    src.entry as entry then
    {
        // EGFR
        entry.resource as observation where "resource is Observation and resource.code.coding.code = 'C134501'" then
        {
            observation -> tgt.data as data collate then
            {
                observation.status as status where "%tgt.data.where(itemid = 'id_1434').exists().not()" then
                {
                    observation -> data.blockindex = 1;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1434';
                };
                observation -> data.values as values, values.value = 'EGFR';
            };
        };

        // ALK
        entry.resource as observation where "resource is Observation and resource.code.coding.code = 'C142114'" then
        {
            observation -> tgt.data as data collate then
            {
                observation.status as status where "%tgt.data.where(itemid = 'id_1434').exists().not()" then
                {
                    observation -> data.blockindex = 1;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1434';
                };
                observation -> data.values as values, values.value = 'ALK';
            };
        };

        // ROS1
        entry.resource as observation where "resource is Observation and resource.code.coding.code = 'C131071'" then
        {
            observation -> tgt.data as data collate then
            {
                observation.status as status where "%tgt.data.where(itemid = 'id_1434').exists().not()" then
                {
                    observation -> data.blockindex = 1;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_1434';
                };
                observation -> data.values as values, values.value = 'ROS1';
            };
        };
    };
}