/// version = 0.1
/// title = "AnforderungMapping"

/*
    TODO
    - Biopsy-ID and Zu untersuchendes Material (Biopsie-ID) have same CTS_Transport ID, but different FHIR element. Mapped only Biopsy-ID
    - Molekularpathologie and Liquid Biopsy maps the same FHIR element, it overrides 
*/

map "http://uk-koeln.de/fhir/StructureMap/AnforderungMapping" = AnforderungMapping

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/Specimen" as target
uses "http://hl7.org/fhir/StructureDefinition/Specimen" as target
uses "http://hl7.org/fhir/StructureDefinition/ServiceRequest" as target
uses "http://hl7.org/fhir/StructureDefinition/Observation" as target
uses "http://hl7.org/fhir/StructureDefinition/Organization" as target
uses "http://hl7.org/fhir/StructureDefinition/Practitioner" as target

group TransformBundle(source src: CTS_Transport, target bundle: Bundle)
{
    src -> bundle.id = uuid();
    src -> bundle.type = 'collection';

    src -> bundle.entry as entry then CreateSpecimenAnforderung(src, entry);
    src -> bundle.entry as entry then CreateTransformSpecimenAnforderung(src, entry);
    src -> bundle.entry as entry then CreateTransformServiceRequestAnforderung(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationAnforderung(src, entry);
    src -> bundle.entry as entry then CreateTransformOrganizationAnforderung(src, entry);
}

/* ------------------------------ Specimen ---------------------------- */
/*check if there is a Specimen required*/
group CreateSpecimenAnforderung(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1601'" then
        {
            src -> tgt.resource = create('Specimen') as episodeofcare then TransformSpecimenAnforderung(src, episodeofcare);
        };
    };
}

group TransformSpecimenAnforderung(source src: CTS_Transport, target tgt: Specimen)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Specimen/nNGM';

    //type 
    src -> tgt.type as type,
            type.coding as coding,
            coding.system = 'http://snomed.info/sct',
            coding.version = 'http://snomed.info/sct/900000000000207008',
            coding.code as code 
            code.extension as dataAbsentReason, 
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code')

    //subject
    src.patid as patid -> tgt.patient = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    //status 
    src -> tgt.status = cast('active', 'FHIR.code');

    src.operations as operations, operations.data as data then
    {
        //Biopsie-ID
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1601'" then
        {
            values.value as value ->  tgt.identifier = create('Identifier') as identifier, 
                                      identifier.system = 'http://uk-koeln.de/NamingSystem/nNGM/biopsienummer', 
                                      identifier.value = value;
        };
   };
}


/* ------------------------------ Specimen ---------------------------- */
group CreateTransformSpecimenAnforderung(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_2457'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1551'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1589'
        or blockindex = 2 and groupindex = 0 and itemid = 'id_2316'
        or blockindex = 2 and groupindex = 0 and itemid = 'id_2320'" then
        {
            src -> tgt.resource = create('Specimen') as specimen then TransformSpecimenAnforderung(src, specimen);
        };
    };
}

group TransformSpecimenAnforderung(source src: CTS_Transport, target tgt: Specimen)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Specimen/nNGM';

    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    src -> tgt.type = cc('http://terminology.hl7.org/ValueSet/v2-0487', 'TISS');

    src.operations as operations, operations.data as data then
    {
        //Identifier:biopsieID.value
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_2457'" then
        {
            values.value as value ->  tgt.identifier = create('Identifier') as identifier, 
                                      identifier.system = 'http://uk-koeln.de/NamingSystem/nNGM/biopsienummer', 
                                      identifier.value = value;
        };

        // collection.collectedDateTime
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid ='id_1551'" then
        {
            values.value as value -> tgt.collection as collection, collection.collectedDateTime = dateOp(value, 'date');
        };

        // extension:entnahmeKontext.valueCodeableConcept
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1589'" then // and %tgt.resource.resourceType.category.coding.where(code = 'C12801')
        {
            values.value where "$this.value = 'stationär'" then 
            {
                values.value as za -> tgt.extension as entnahmeKontext, 
                                    entnahmeKontext.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsart', 
                                    entnahmeKontext.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/aufenthaltsart', 'IMP', 'inpatient encounter');
            };

            values.value where "$this.value = 'ambulant'" then 
            {
                values.value as za -> tgt.extension as entnahmeKontext, 
                                    entnahmeKontext.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsart', 
                                    entnahmeKontext.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/aufenthaltsart', 'AMB', 'ambulatory');
            };

            values.value where "$this.value = 'UNK'" then 
            {
                values.value as za -> tgt.extension as entnahmeKontext, 
                                    entnahmeKontext.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsart', 
                                    entnahmeKontext.valueCodeableConcept = cc('http://terminology.hl7.org/CodeSystem/v3-NullFlavor', 'UNK', 'unknown');
            };
        };

        // collection.collectedDateTime
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid ='id_2316'" then
        {
            values.value as value -> tgt.collection as collection, collection.collectedDateTime = dateOp(value, 'date');
        };

        // extension:entnahmeKontext.valueCodeableConcept
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2320' and %tgt.resource.resourceType.category.coding.where(code = 'C12434')" then
        {
            values.value where "$this.value = 'stationär'" then 
            {
                values.value as za -> tgt.extension as entnahmeKontext, 
                                    entnahmeKontext.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsart', 
                                    entnahmeKontext.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/aufenthaltsart', 'IMP', 'inpatient encounter');
            };

            values.value where "$this.value = 'ambulant'" then 
            {
                values.value as za -> tgt.extension as entnahmeKontext, 
                                    entnahmeKontext.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsart', 
                                    entnahmeKontext.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/aufenthaltsart', 'AMB', 'ambulatory');
            };

            values.value where "$this.value = 'UNK'" then 
            {
                values.value as za -> tgt.extension as entnahmeKontext, 
                                    entnahmeKontext.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsart', 
                                    entnahmeKontext.valueCodeableConcept = cc('http://terminology.hl7.org/CodeSystem/v3-NullFlavor', 'UNK', 'unknown');
            };
        };
    };
}

/* ------------------------------ ServiceRequest ---------------------------- */
group CreateTransformServiceRequestAnforderung(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid ='id_1368'
        or blockindex = 3 and groupindex = 0 and itemid = 'id_2473'
        or blockindex = 3 and groupindex = 0 and itemid = 'id_2474'
        or blockindex = 3 and groupindex = 0 and itemid = 'id_2313'
        or blockindex = 3 and groupindex = 0 and itemid = 'id_2314'
        or blockindex = 4 and groupindex = 0 and itemid = 'id_2490'
        or blockindex = 4 and groupindex = 0 and itemid = 'id_2477'
        or blockindex = 4 and groupindex = 0 and itemid = 'id_2478'
        or blockindex = 4 and groupindex = 0 and itemid = 'id_2479'
        or blockindex = 4 and groupindex = 0 and itemid = 'id_2480'
        or blockindex = 4 and groupindex = 0 and itemid = 'id_1560'" then
        {
            src -> tgt.resource = create('ServiceRequest') as serviceRequest then TransformServiceRequestAnforderung(src, serviceRequest);
        };
    };
}

group TransformServiceRequestAnforderung(source src: CTS_Transport, target tgt: ServiceRequest)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/testung';

    src -> tgt.status = cast('active', 'FHIR.code');
    src -> tgt.intent = cast('proposal', 'FHIR.code');
    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');


    src.operations as operations, operations.data as data then
    {
        // category
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid ='id_1368'" then
        {
            values.value as value -> tgt.category = cc('http://uk-koeln.de/fhir/ValueSet/nngm/anforderung-kategorie', value);
        };

        // code
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2473'" then
        {
            values.value as value -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nngm/anforderung-code', value);
        };

        // orderDetail
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2474'" then
        {
            values.value as value -> tgt.orderDetail = cc('http://uk-koeln.de/fhir/ValueSet/nngm/anforderung-orderDetails', value);
        };

        // orderDetail
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2313'" then
        {
            values.value as value -> tgt.orderDetail = cc('http://uk-koeln.de/fhir/ValueSet/nngm/anforderung-orderDetails', value);
        };

        // .extension:grundFehlend.valueCodeableConcept
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2314'" then
        {
            values.value where "$this.value = 'FT'" then
            {
                values.value as value -> tgt.extension as tgtExtension,
                                        tgtExtension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/GrundFehlendeBiopsy',
                                        tgtExtension.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/grundfehlendeBiopsie', 'Fehlende Tumormanifestation, die einer Biopsie zugänglich wäre');
            };

            values.value where "$this.value = 'RA'" then
            {
                values.value as value -> tgt.extension as tgtExtension,
                                        tgtExtension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/GrundFehlendeBiopsy',
                                        tgtExtension.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/grundfehlendeBiopsie', 'Reduzierter Allgemeinzustand');
            };

            values.value where "$this.value = 'UR'" then
            {
                values.value as value -> tgt.extension as tgtExtension,
                                        tgtExtension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/GrundFehlendeBiopsy',
                                        tgtExtension.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/grundfehlendeBiopsie', 'Unzumutbares Risikos einer Biopsie bzw. zu erwartende Komplikationen');
            };

            values.value where "$this.value = 'AP'" then
            {
                values.value as value -> tgt.extension as tgtExtension,
                                        tgtExtension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/GrundFehlendeBiopsy',
                                        tgtExtension.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/grundfehlendeBiopsie', 'Ablehnung seitens Patient(in)');
            };
        };

        // extension:grundEntfallBlockAnforderung
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_2490'" then
        {
            values.value where "$this.value = 'bereitsUnterwegs'" then
            {
                values.value as value -> tgt.extension as tgtExtension,
                                        tgtExtension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/grundEntfallBlockAnforderung',
                                        tgtExtension.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/grundEntfallBlockAnforderung', 'Tumormaterial bereits unterwegs');
            };

            values.value where "$this.value = 'innerePathologie'" then
            {
                values.value as value -> tgt.extension as tgtExtension,
                                        tgtExtension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/grundEntfallBlockAnforderung',
                                        tgtExtension.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/grundEntfallBlockAnforderung', '	Antrag interne Pathologie');
            };
        };

        // occurrenceDateTime
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_2477'" then
        {
            values.value as value ->  tgt.occurrenceDateTime =  dateOp(value, 'date');
        };

        // extension:wiederholungAnforderung.valueInteger
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_2478'" then
        {
             values.value as value -> tgt.extension as wiederholung, 
                                       wiederholung.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/wiederholung', 
                                       wiederholung.valueInteger = cast(value, 'FHIR.integer');
        };

        // extension:stornierungBlockAnforderung,valueDateTIme
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_2479'" then
        {
            values.value as value -> tgt.extension as storno, 
                                  storno.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/stornierungBlockAnforderung', 
                                  storno.valueDateTime = dateOp(value, 'date');
        };

        // extension:versandDatum.valueDateTime
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_2480'" then
        {
            values.value as value -> tgt.extension as versandmaterial, 
                                  versandmaterial.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/versandDatumBlockAnforderung', 
                                  versandmaterial.valueDateTime = dateOp(value, 'date');
        };

        // performer.reference.display
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1560'" then
        {
            values.value as value -> tgt.performer as performer, performer.display = value;
        };
    };
}

/* ------------------------------ Observation ---------------------------- */
group CreateTransformObservationAnforderung(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_836'
        or blockindex = 2 and groupindex = 0 and itemid = 'id_2319'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationAnforderung(src, observation);
        };
    };
}

group TransformObservationAnforderung(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/histo-vorbefund';
    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    // Obligatory fields
    src -> tgt.status = cast('final', 'FHIR.code');
    src -> tgt.category = cc('http://hl7.org/fhir/observation-category', 'laboratory');
    src -> tgt.code = cc('http://ncit.nci.nih.gov', 'C19165');

    src.operations as operations, operations.data as data then
    {
        // valueCodeableConcept
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_836'" then 
        {
            values.value as valuecc ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/histologie-klassifikation', valuecc);
        };

        // valueCodeableConcept
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2319'" then 
        {
            values.value as valuecc ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/histologie-klassifikation', valuecc);
        };
    };
}

/* ------------------------------ Organization ---------------------------- */
group CreateTransformOrganizationAnforderung(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1563'
        or blockindex = 4 and groupindex = 0 and itemid = 'id_1562'" then
        {
            src -> tgt.resource = create('Organization') as organization then TransformOrganizationAnforderung(src, organization);
        };
    };
}

group TransformOrganizationAnforderung(source src: CTS_Transport, target tgt: Organization)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://clinicalsite.org/fhir/StructureDefinition/organizationalunit';

    src.operations as operations, operations.data as data then
    {
        // Name
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1563'" then
        {
            values.value as value -> tgt.name = value;
        };

        // address.text
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1562'" then
        {
            values.value as value -> tgt.address as address, address.text = value;
        };
    };
}       };

        //stornierung block anforderung
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_2479'" then
        {
            values.value as st -> tgt.extension as storno, 
                                  storno.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/stornierungBlockAnforderung', 
                                  storno.valueDateTime = dateOp(st, 'date');
        };
        
        //versanddatum
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_2480'" then
        {
            values.value as vm -> tgt.extension as versandmaterial, 
                                  versandmaterial.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/versandDatumBlockAnforderung', 
                                  versandmaterial.valueDateTime = dateOp(vm, 'date');
        }; 
    };
}

/* ------------------------------ Organization ---------------------------- */
group TransformOrganization(source src: CTS_Transport, target tgt: Organization)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://clinicalsite.org/fhir/StructureDefinition/organizationalunit';

    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1563'" then
        {
            values.value as name -> tgt.name = name;
        };

        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1562'" then
        {
            values.value as text -> tgt.address as tgtAddress,
                                    tgtAddress.text = text;
        };
    };
}