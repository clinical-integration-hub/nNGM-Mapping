/// version = 0.1
/// title = "nNGM: Mapping Resistenztestung FHIR"
/// CTS -> FHIR

/*
TODO
- When transforming the CTS_Transport to a FHIR bundle, the information about the order of the therapies in the CDS form gets lost. 
    This prohibits us from properly mapping these from FHIR to CTS. We need to create an extension or something alike that allows 
    us to retain the information about the order of the therapies in the three observations (EGFR, ALK, ROS1). These changes have
    to be done in this map. Afterwards, the CTSmapping_nNGM Mapping needs to be adjusted accordingly. 
*/

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_ResistenztestungFHIR" = nNGM_Mapping_ResistenztestungFHIR

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/Observation" as target

group TransformBundle(source src: CTS_Transport, target bundle: Bundle)
{
    //metadata
    src -> bundle.id = uuid();
    src -> bundle.type = 'collection';

    //resources
    src -> bundle.entry as entry, entry.resource = create('Observation') as observation then TransformObservationKrebserkrankung(src, observation);
    src then CreateObservationsResistenztestung(src, bundle);
}

/* ------------------------------ Observation Progress/Rezidiv Krebserkrankung ---------------------------- */
group TransformObservationKrebserkrankung(source src: CTS_Transport, target tgt: Observation)
{
    // Observation.status
    src -> tgt.status = 'final';

    // Observation.category
    src -> tgt.category = cc('http://hl7.org/fhir/ValueSet/observation-category', 'survey');

    // Observation.code
    src -> tgt.code = cc('http://ncit.nci.nih.gov', 'C25630');

    // Subject
    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    // Progressdatum -> tgt.effectiveDateTime
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_2397'" then
        {
             values.value as value -> tgt.effectiveDateTime = dateOp(value, 'date');
        };
    };

    // Rezidiv/Progress (Ja/Nein) -> valueBoolean 
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1573'" then
        {
            values.value as value where "value = 'yes'" then
            {
                value -> tgt.valueBoolean = cast(true, 'FHIR.boolean');
            };

            values.value as value where "value = 'no'" then
            {
                value -> tgt.valueBoolean = cast(false, 'FHIR.boolean');
            };
        };
    };
}

/* ------------------------------ Check whether therapy was carried out and create an observation for it if that is the case ---------------------------- */
group CreateObservationsResistenztestung(source src: CTS_Transport, target bundle: Bundle)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1434'" then
        {
            values.value as value where "value = 'EGFR'" then
            {
                src -> bundle.entry as entry, entry.resource = create('Observation') as observation then TransformObservationEGFR(src, observation);
            };

            values.value as value where "value = 'ALK'" then
            {
                src -> bundle.entry as entry, entry.resource = create('Observation') as observation then TransformObservationALK(src, observation);
            };

            values.value as value where "value = 'ROS1'" then
            {
                src -> bundle.entry as entry, entry.resource = create('Observation') as observation then TransformObservationROS1(src, observation);
            };
        };
    };
}

/* ------------------------------ Observation EGFR ---------------------------- */
group TransformObservationEGFR(source src: CTS_Transport, target tgt: Observation)
{
    // Observation.status
    src -> tgt.status = 'final';

    // Observation.category
    src -> tgt.category = cc('http://ncit.nci.nih.gov', 'C1967');

    // Observation.code
    src -> tgt.code = cc('https://simplifier.net/nngm-registrationformr4/tki-resistenz', 'C134501');

    // Subject
    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    // Mutations
    tgt then TransformMutationsResistenztestung(src, tgt);

    // Access data
    src.operations as operations, operations.data as data then
    {
        // Date Of Assessement -> tgt.effectiveDateTime
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2502'" then
        {
             values.value as value -> tgt.effectiveDateTime = dateOp(value, 'date');
        };

        // Ros1-Fusion.FusionPartner
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2504'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as fusionPartner, fusionPartner.code = cc('http://ncit.nci.nih.gov', 'C28510'), fusionPartner.valueString = value;
        };

        // Therapies
        // 1. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1441'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 2. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1442'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 3. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1443'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 4. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1444'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    };
}

/* ------------------------------ Observation ALK ---------------------------- */
group TransformObservationALK(source src: CTS_Transport, target tgt: Observation)
{
    // Observation.status
    src -> tgt.status = 'final';

    // Observation.category
    src -> tgt.category = cc('http://ncit.nci.nih.gov', 'C1967');

    // Observation.code
    src -> tgt.code = cc('https://simplifier.net/nngm-registrationformr4/tki-resistenz', 'C142114');

    // Subject
    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    // Mutations
    tgt then TransformMutationsResistenztestung(src, tgt);

    // Access data
    src.operations as operations, operations.data as data then
    {
        // Date Of Assessement -> tgt.effectiveDateTime
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2502'" then
        {
             values.value as value -> tgt.effectiveDateTime = dateOp(value, 'date');
        };

        // Ros1-Fusion.FusionPartner
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2504'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as fusionPartner, fusionPartner.code = cc('http://ncit.nci.nih.gov', 'C28510'), fusionPartner.valueString = value;
        };

        // Therapies
        // 1. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1447'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 2. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1448'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 3. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1449'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 4. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1450'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    };
}

/* ------------------------------ Observation ROS1 ---------------------------- */
group TransformObservationROS1(source src: CTS_Transport, target tgt: Observation)
{
    // Observation.status
    src -> tgt.status = 'final';

    // Observation.category
    src -> tgt.category = cc('http://ncit.nci.nih.gov', 'C1967');

    // Observation.code
    src -> tgt.code = cc('https://simplifier.net/nngm-registrationformr4/tki-resistenz', 'C131071');

    // Subject
    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    // Mutations
    tgt then TransformMutationsResistenztestung(src, tgt);

    // Access data
    src.operations as operations, operations.data as data then
    {
        // Date Of Assessement -> tgt.effectiveDateTime
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2502'" then
        {
             values.value as value -> tgt.effectiveDateTime = dateOp(value, 'date');
        };

        // Ros1-Fusion.FusionPartner
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2506'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as fusionPartner, fusionPartner.code = cc('http://ncit.nci.nih.gov', 'C28510'), fusionPartner.valueString = value;
        };

        // Therapies
        // 1. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1453'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 2. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1454'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 3. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1455'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    
        // 4. Therapie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1456'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as therapie, therapie.code = cc('http://ncit.nci.nih.gov', 'C62721'), therapie.valueCodeableConcept as vcc, vcc.text = value;
        };
    };
}

/* ------------------------------ Add mutations to observation ---------------------------- */
// The mutations are the same for each observation so we can separate them into groups and then simply call them for each observation
group TransformMutationsResistenztestung(source src: CTS_Transport, target tgt: Observation)
{
    // Access data
    src.operations as operations, operations.data as data then
    {
        // Exon
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1436'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as exon, exon.valueString = value, exon.code = cc('http://ncit.nci.nih.gov', 'C13231');
        };
    
        // HGVS c
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1437'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as hgvsc, hgvsc.valueString = value, hgvsc.code = cc('http://loinc.org', '48004-6');
        };

        // HGVS p
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1438'" then
        {
             values.value as value -> tgt.component = create('BackboneElement') as hgvsp, hgvsp.valueString = value, hgvsp.code = cc('http://loinc.org', '48005-3');
        };
    };
}