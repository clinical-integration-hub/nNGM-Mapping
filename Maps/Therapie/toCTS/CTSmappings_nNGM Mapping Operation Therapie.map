/// version = 0.1
/// title = "nNGM: Operation Therapie - FHIR to CTS"

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_OperationTherapieCTS" = nNGM_Mapping_OperationTherapieCTS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformCTS(source src: Bundle, target tgt: CTS_Transport)
{
    src -> tgt.version = '1.1';
    src -> tgt.sourcesystem = 'https:\/\/nngm-qat.staging.healex.systems\/';

    src -> tgt.operations as operations collate, operations.crfid = 'OP2';
    src -> tgt.operations as operations collate, operations.type = 'save';

    src.entry as entry then
    {
        /* ------------------------------ Procedure ---------------------------- */
        entry.resource as procedure where "resource is Procedure" then
        {
            // Operationsdatum
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.performedDateTime as performedDateTime then
                    {
                        procedure -> data.blockindex = 0;
                        procedure -> data.groupindex = 0;
                        procedure -> data.itemid = 'id_842';
                        performedDateTime -> data.values as values, values.value = performedDateTime;
                    };
                };
            };

            // DurchfÃ¼hrende Einrichtung
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.performer as performer, performer.actor as actor, actor.display as display then
                    {
                        procedure -> data.blockindex = 0;
                        procedure -> data.groupindex = 0;
                        procedure -> data.itemid = 'id_1162';
                        display -> data.values as values, values.value = display;
                    };  
                };
            };

            // Operative Intention
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.reasonCode as reasonCode, reasonCode.coding as coding where "coding.system = 'http://uk-koeln.de/fhir/ValueSet/cancer-base/adt/intention-op'" then
                    {
                        procedure -> data.blockindex = 1;
                        procedure -> data.groupindex = 0;
                        procedure -> data.itemid = 'id_1167';
                        coding.code as code -> data.values as values, values.value = code;
                    };
                };
            };

            // Art des Eingriffs
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.code as code, code.extension as extension where "extension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/art-des-eingriffs'" then
                    {
                        extension.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code then
                        {
                            procedure -> data.blockindex = 1;
                            procedure -> data.groupindex = 0;
                            procedure -> data.itemid = 'id_1168';
                            code -> data.values as values, values.value = code;
                        };
                    };
                };
            };

            // Lokalisation (Auswahl)
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.bodySite as bodySite, bodySite.coding as coding where "coding.system = 'http://uk-koeln.de/fhir/ValueSet/nNGM/OperationLokalisationUNK'" then
                    {
                        procedure -> data.blockindex = 1;
                        procedure -> data.groupindex = 0;
                        procedure -> data.itemid = 'id_2335';
                        coding.code as code -> data.values as values, values.value = code;
                    };
                };
            };

            // Lokalisation (Freitext)
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.bodySite as bodySite, bodySite.text as text then
                    {
                        procedure -> data.blockindex = 1;
                        procedure -> data.groupindex = 0;
                        procedure -> data.itemid = 'id_2335';
                        text -> data.values as values, values.value = text;
                    };
                };
            };

// "extension": [
//     {
//         "url": "http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/seitenlokalisation",
//         "valueCodeableConcept": {
//             "coding": [
//                 {
//                     "system": "http://uk-koeln.de/fhir/ValueSet/nngm/OperationSeitenlokalisation",
//                     "code": "unknown"
//                 }
//             ]
//         }
//     }
// ]

            // Seitenlokalisation
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.bodySite as bodySite, bodySite.extension as extension where "extension.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/seitenlokalisation'" then
                    {
                        extension.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code then
                        {
                            procedure -> data.blockindex = 1;
                            procedure -> data.groupindex = 0;
                            procedure -> data.itemid = 'id_2400';
                            code -> data.values as values, values.value = code;
                        };
                    };
                };
            };

            // Art der Resektion
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.code as code, code.extension as resektion, resektion.extension as resektionsart where "extension.url = 'resektionsart'" then
                    {
                        resektionsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code then
                        {
                            procedure -> data.blockindex = 1;
                            procedure -> data.groupindex = 0;
                            procedure -> data.itemid = 'id_1176';
                            code -> data.values as values, values.value = code;
                        };
                    };
                };
            };

            // Resektionsstatus
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.code as code, code.extension as resektion, resektion.extension as extension where "extension.url = 'resektionsstatus'" then
                    {
                        extension.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code then
                        {
                            procedure -> data.blockindex = 1;
                            procedure -> data.groupindex = 0;
                            procedure -> data.itemid = 'id_1353';
                            code -> data.values as values, values.value = code;
                        };
                    };
                };
            };

            // Lymphadenektomie - extension:lymphadenektomie
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.extension as lymphadenektomie then
                    {
                        procedure -> data.blockindex = 1;
                        procedure -> data.groupindex = 0;
                        procedure -> data.itemid = 'id_1362';
                        lymphadenektomie.valueBoolean as value -> data.values as values, values.value = value;
                    };

                    procedure.extension as lymphadenektomie where "lymphadenektomie.valueBoolean.exists().not()" then
                    {
                        lymphadenektomie.extension as dataAbsent, dataAbsent.valueCode as valueCode then
                        {
                            procedure -> data.blockindex = 1;
                            procedure -> data.groupindex = 0;
                            procedure -> data.itemid = 'id_1362';
                            valueCode -> data.values as values, values.value = valueCode;
                        };
                    };
                };
            };

            // Bemerkungen
            procedure -> tgt.operations as operations collate then
            {
                procedure -> operations.data as data then
                {
                    procedure.note as note, note.text as text then
                    {
                        procedure -> data.blockindex = 3;
                        procedure -> data.groupindex = 0;
                        procedure -> data.itemid = 'id_1472';
                        text -> data.values as values, values.value = text;
                    };
                };
            };
        };

        /* ------------------------------ Patient ---------------------------- */
        entry.resource as patient where "resource is Patient and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM'" then
        {
            // Todesdatum
            patient -> tgt.operations as operations collate then
            {
                patient -> operations.data as data then
                {
                    patient.deceasedDateTime as deceasedDateTime then
                    {
                        patient -> data.blockindex = 2;
                        patient -> data.groupindex = 0;
                        patient -> data.itemid = 'id_2401';
                        deceasedDateTime -> data.values as values, values.value = deceasedDateTime;
                    };
                };
            };
        };
    };
}