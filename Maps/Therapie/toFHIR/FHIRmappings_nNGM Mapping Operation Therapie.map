/// version = 0.1
/// title = "OperationTherapieMapping"

/*
    TODO
    - Operative Intention: missing valueSet, used the one on Simplifier
    - Resektionsstatus: missing FHIR element
    - Lymphadenektomie: couldn't understand FHIR element

*/

map "http://uk-koeln.de/fhir/StructureMap/OperationTherapieMapping" = OperationTherapieMapping

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/Procedure" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target

group TransformBundle(source src: CTS_Transport, target bundle: Bundle)
{
    src -> bundle.id = uuid();
    src -> bundle.type = 'collection';

    src -> bundle.entry as entry then CreateTransformProcedure(src, entry);
    src -> bundle.entry as entry then CreateTransformPatient(src, entry);
}

/* ------------------------------ Procedure ---------------------------- */
group CreateTransformProcedure(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_842'
        or blockindex = 0 and groupindex = 0 and itemid = 'id_1162'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1167'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1168'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_2335'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_2400'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1176'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1353'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1362'
        or blockindex = 3 and groupindex = 0 and itemid = 'id_1472'" then
        {
            src -> tgt.resource = create('Procedure') as procedure then TransformProcedure(src, procedure);
        };
    };
}

group TransformProcedure(source src: CTS_Transport, target tgt: Procedure)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/OP';

    src.operations as operations, operations.data as data then
    {
        src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

        // Operationsdatum - performed.performedDateTime
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_842'" then
        {
            values.value as value -> tgt.performedDateTime = dateOp(value, 'date');
        };

        // DurchfÃ¼hrende Einrichtung - performer.actor.display
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1162'" then
        {
            values.value as value -> tgt.performer as performer, performer.actor as actor, actor.display = value;
        };

        // Operative Intention - reasonCode
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1167'" then
        {
            values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/cancer-base/adt/intention-op', value);
        };

        // Art des Eingriffs - code.extension:artDesEingriffs
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1168'" then
        {
            values.value as value ->    tgt.code as code, 
                                        code.extension = create('BackboneElement') as artDesEingriffs,
                                        artDesEingriffs.valueCodeableConcept = cc('https://simplifier.net/nngm-therapy-form/vs-operationartdeseingriffsunk', value);
        };

        // Lokalisation (Auswahl) - bodySite.coding
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2335'" then
        {
            values.value as value -> tgt.bodySite as bodySite, bodySite.coding = c('https://simplifier.net/nngm-therapy-form/vs-operationlokalisationunk', value);
        };

        // Lokalisation (Freitext) - bodySite.text
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2335'" then
        {
            values.value as value -> tgt.bodySite as bodySite, bodySite.text = value;
        };

        // Seitenlokalisation - extension:seitenlokalisation
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2400'" then
        {
            values.value as value ->    tgt.extension = create('BackboneElement') as seitenLokalisation,
                                        seitenLokalisation.valueCodeableConcept = cc('https://simplifier.net/nngm-therapy-form/vs-operationseitenlokalisation', value);
        };

        // Art der Resektion - code.extension:resektion.extension:resektionsart
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1176'" then
        {
            values.value as value ->    tgt.code as code,
                                        code.extension = create('BackboneElement') as resektion,
                                        resektion.extension = create('BackboneElement') as resektionsart,
                                        resektionsart.valueCodeableConcept = cc('https://simplifier.net/nngm-therapy-form/vs-operationartderresektion', value);
        };

        // Lymphadenektomie - extension:lymphadenektomie bzw. data-absent-reason
        /*data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1362'" then
        {
            values.value as value ->    tgt.extension = create('BackboneElement') as lymphadenektomie,
                                        
        };*/

        // Bemerkungen - note.text
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1472'" then
        {
            values.value as value -> tgt.note as note, note.text = value;
        };
    };
}

/* ------------------------------ Patient ---------------------------- */
group CreateTransformPatient(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2401'" then
        {
            src -> tgt.resource = create('Patient') as patient then TransformPatient(src, patient);
        };         
    };
}

group TransformPatient(source src: CTS_Transport, target tgt: Patient)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM';

    src.operations as operations, operations.data as data then
    {
        // Todesdatum
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2401'" then
        {
            values.value as value -> tgt.deceasedDateTime = dateOp(value, 'date');
        };
    };
}