/// version = 0.1
/// title = "Beurteilung"

/*
    - Once the repeatindex has been implemented, this map needs to be adjusted as the Beurteilung section can have multiple instances
*/

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_Beurteilung" = nNGM_Mapping_Beurteilung 

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/DiagnosticReport" as target
uses "http://hl7.org/fhir/StructureDefinition/ServiceRequest" as target

group TransformBundle(source src: CTS_Transport, target bundle: Bundle)
{
    src -> bundle.id = uuid(); 
    src -> bundle.type = 'collection';

    src -> bundle.entry as entry then CreateTransformDiagnosticReport(src, entry);
    src -> bundle.entry as entry then CreateTransformServiceRequest(src, entry);

}

/* ------------------------------DiagnosticReport---------------------------- */
group CreateTransformDiagnosticReport(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 0 and groupindex = 0 and itemid ='bu_creation_date'
                                    or blockindex = 0 and groupindex = 0 and itemid ='bu_version'
                                    or blockindex = 0 and groupindex = 0 and itemid ='id_1352'
                                    or blockindex = 0 and groupindex = 0 and itemid ='id_2405'" then
        {
            src -> tgt.resource = create('DiagnosticReport') as diagnosticReport then TransformDiagnosticReport(src, diagnosticReport);
        };
    };
}
group TransformDiagnosticReport(source src: CTS_Transport, target tgt: DiagnosticReport)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/DiagnosticReport/nNGM/beurteilung';

    src -> tgt.code as code, 
            code.coding as coding, 
            coding.system as system, 
            system.extension as dataAbsentReason, 
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    src.operations as operations, operations.data as data then
    {
        //Erstelldatum
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'bu_creation_date'" then
         {
            values.value as date -> tgt.effectiveDateTime = dateOp(date, 'dateTime');
         };

		//Version
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'bu_version'" then
         {   
            values.value as code where "$this.value = 'vorlÃ¤ufig'" then
            {
                code -> tgt.status = 'preliminary'; 
            };
            values.value as code where "$this.value = 'final'" then
            {
                code -> tgt.status = 'final';
            };
         };   

        //Klinische Information
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1352'" then
        {  
            values.value as value -> tgt.conclusion = value;
        };

        //Empfehlung einer systemischen Therapie
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_2405'" then
        {   
            values.value as signature where "$this.value = 'Ja'" then
            {
                values.value as value -> tgt.conclusionCode as conclusioncode,
                                        conclusioncode.extension as empfehlung, 
                                        empfehlung.url = 'http://uk-koeln.de/fhir/Extension/nNGM/beurteilung-empfehlung-systemische-therapie',
                                        empfehlung.valueBoolean = true;
            };

            values.value as signature where "$this.value = 'Nein'" then
            {
                values.value as value -> tgt.conclusionCode as conclusioncode,
                                        conclusioncode.extension as empfehlung, 
                                        empfehlung.url = 'http://uk-koeln.de/fhir/Extension/nNGM/beurteilung-empfehlung-systemische-therapie',
                                        empfehlung.valueBoolean = false;
            };
        }; 
    };
}
/* -----------------------------ServiceRequest--------------------------- */ 
group CreateTransformServiceRequest(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 1 and groupindex = 0 and itemid = 'id_2523'
                                    or blockindex = 1 and groupindex = 0 and itemid ='id_bu_closing'
                                    or blockindex = 1 and groupindex = 0 and itemid ='id_2524' 
                                    or blockindex = 1 and groupindex = 0 and itemid ='id_2525'" then
        {
            src -> tgt.resource = create('ServiceRequest') as serviceRequest then TransformServiceRequest(src, serviceRequest);
        };
    };
}
group TransformServiceRequest(source src: CTS_Transport, target tgt: ServiceRequest)
{   
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/testung';

    // intent : Item required on simplifier
    src -> tgt.intent = 'proposal';

    // category : Item required on simplifier
    src -> tgt.category as category, 
            category.coding as coding, 
            coding.system as system, 
            system.extension as dataAbsentReason, 
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // code : Item required on simplifier
    src -> tgt.code as code, 
            code.coding as coding, 
            coding.system as system, 
            system.extension as dataAbsentReason, 
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    // authoredOn : Item required on simplifier
    src ->  tgt.authoredOn as authoredOn, 
            authoredOn.extension as dataAbsentReason, 
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    src.operations as operations, operations.data as data then
    {
        /*----------------Durchfuehrung------------*/
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2523'" then
        {   
            values.value as durchfuerung where "$this.value = 'in Bearbeitung'" then
            {
                durchfuerung -> tgt.status = 'active'; 
            };
            values.value as durchfuerung where "$this.value = 'abgeschlossen'" then
            {
                durchfuerung -> tgt.status = 'completed'; 
            };
        };   
     
        /*---------------Datum des versands -----------*/
         data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2525'" then
        {   
            values.value as datumversands -> tgt.extension as datumVersands,
                                              datumVersands.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/versandDatum',
                                              datumVersands.valueDate = dateOp(datumversands, 'dateTime');
        };   
    };
    // Extensions
    src then TransformBeurteilungExtension(src, tgt);
}

/* -------------------------------------- Create double extensions for Beurteilung -------------------------------------------- */
group TransformBeurteilungExtension(source src: CTS_Transport, target tgt: ServiceRequest)
{
    src.operations as operations, operations.data as data then
    {
        // Status des Abschlusses
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'bu_closing' and values.isother.exists().not()" then
        {
            values.value as value where "%tgt.status.extension.extension.where(url = 'status').exists().not()" then
            {
                value -> tgt.status as status collate, status.extension as statusAbschluss collate, statusAbschluss.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss', statusAbschluss.extension as statusExtension then
                {
                    value -> statusExtension.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/NNGM/statusAbschluss',value, value);
                    value -> statusExtension.url = 'status';
                };
            };
        };
        // Status des Abschlusses
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'bu_closing' and values.isother = true" then
        {
            values.value where "%tgt.status.extension.extension.where(url = 'status').exists().not()" then
            {
                values.value as value where "$this.isother = true" then
                {
                    value -> tgt.status as status collate, status.extension as statusAbschluss collate, statusAbschluss.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss', statusAbschluss.extension as statusExtension then
                    {
                        value -> statusExtension.valueString = value;
                        value -> statusExtension.url = 'status';
                    };
                };
            };
        };

        //Datum des Abschlusses
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2524'" then
        {
            values.value as value where "%tgt.status.extension.extension.where(url = 'datum').exists().not()" then
            {
                value -> tgt.status as status collate, status.extension as statusAbschluss collate, statusAbschluss.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss', statusAbschluss.extension as datumExtension then
                {
                    value -> datumExtension.valueDate = dateOp(value, 'date');
                    value -> datumExtension.url = 'datum';
                };
            };
        };
    };
}