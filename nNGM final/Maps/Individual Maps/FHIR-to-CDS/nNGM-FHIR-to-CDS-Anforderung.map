/// version = 0.1
/// title = "nNGM: nNGM_Mapping_AnforderungCTS - FHIR to CTS"

/*

The following will cause duplicates because cant check on ids and uses same values as gebewediagnostik erfolgte.

 // Blutentnahme erfolgte
            servicerequest -> tgt.operations as operations collate then
            {
                servicerequest -> tgt.data as data then
                {
                    servicerequest.extension as aufenthaltsart, aufenthaltsart.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsartAnforderung'" then
                    {
                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'IMP'" then
                        {
                            servicerequest -> data.blockindex = 2;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_2320';
                            code -> data.values as values, values.value = 'stationär';
                        };

                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'AMB'" then
                        {
                           servicerequest -> data.blockindex = 2;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_2320';
                            code -> data.values as values, values.value = 'ambulant';
                        };

                        aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'NA'" then
                        {
                            servicerequest -> data.blockindex = 2;
                            servicerequest -> data.groupindex = 0;
                            servicerequest -> data.itemid  = 'id_2320';
                            code -> data.values as values, values.value = 'N/A';
                        };
                    };
                };
            };


            Double entnahme date
*/


map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_AnforderungCTS" = nNGM_Mapping_AnforderungCTS

uses "http://hl7.org/fhir/StructureDefinition/Bundle" as source
uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as target

group TransformAnforderungCTS(source src: Bundle, target tgt: BackboneElement)
{
    src -> tgt.type = 'save';
    src -> tgt.crfid = '*-AF1';

    src then TransformCheckboxes2474Checkboxes(src, tgt);

    src.entry as entry then
    {
        entry.resource as specimen where "resource is Specimen and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Specimen/nNGM'" then 
        {
            //Biopsy-ID -> 5, 0, id_1601
            specimen -> tgt.data as data then
            {
                specimen.identifier as identifier then
                {   
                    specimen -> data.blockindex = 5;
                    specimen -> data.groupindex = 0;
                    specimen -> data.itemid = 'id_1601';
                    identifier.value as value-> data.values as values, values.value = value, values.unit = 'count';
                };
            };     

            //Zu untersuchendes Material
            specimen -> tgt.data as data then
            {
                specimen.identifier as identifier then
                {   
                    specimen -> data.blockindex = 0;
                    specimen -> data.groupindex = 0;
                    specimen -> data.itemid = 'id_2457';
                    identifier.value as value-> data.values as values, values.value = value;
                };
            };     

            // Entnahmedatum
            specimen -> tgt.data as data then
            {
                specimen.collection as collection then
                {
                    collection.collectedDateTime as collectedDateTime where "%tgt.data.where(itemid = 'id_2316').exists().not()" then
                    {
                        specimen -> data.blockindex = 1;
                        specimen -> data.groupindex = 0;
                        specimen -> data.itemid = 'id_1551';
                        collectedDateTime -> data.values as values, values.value = collectedDateTime;
                    };
                };
            };

            // Entnahmedatum
            specimen -> tgt.data as data then
            {
                specimen.collection as collection then
                {
                    collection.collectedDateTime as collectedDateTime where "%tgt.data.where(itemid = 'id_1551').exists().not()" then
                    {
                        specimen -> data.blockindex = 2;
                        specimen -> data.groupindex = 0;
                        specimen -> data.itemid = 'id_2316';
                        collectedDateTime -> data.values as values, values.value = collectedDateTime;
                    };
                };
            };

            // Materialentnahme erfolgte
            specimen -> tgt.data as data then
            {
                specimen.extension as aufenthaltsart, aufenthaltsart.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/aufenthaltsart'" then
                {
                    aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'IMP'" then
                    {
                        specimen -> data.blockindex = 1;
                        specimen -> data.groupindex = 0;
                        specimen -> data.itemid  = 'id_1589';
                        code -> data.values as values, values.value = 'stationär';
                    };

                    aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'AMB'" then
                    {
                        specimen -> data.blockindex = 1;
                        specimen -> data.groupindex = 0;
                        specimen -> data.itemid  = 'id_1589';
                        code -> data.values as values, values.value = 'ambulant';
                    };

                    aufenthaltsart.valueCodeableConcept as vcc, vcc.coding as coding, coding.code as code where "code = 'NA'" then
                    {
                        specimen -> data.blockindex = 1;
                        specimen -> data.groupindex = 0;
                        specimen -> data.itemid  = 'id_1589';
                        code -> data.values as values, values.value = 'N/A';
                    };
                };
            };
        };

       /* ------------------------------ Observation ---------------------------- */
        entry.resource as observation where "resource is Observation and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/nNGM/histo-vorbefund'" then 
        {
            //Histologie des vorbefunds
            observation -> tgt.data as data then
            {
                observation.valueCodeableConcept as vcc, vcc.coding as coding then
                {
                    observation -> data.blockindex = 1;
                    observation -> data.groupindex = 0;
                    observation -> data.itemid = 'id_836';
                    coding -> data.values as values, values.value = evaluate(coding, '$this.code + \'\\t\' + $this.display');
                };
            };

            // Histologie des vorbefunds (freitext?)
            observation -> tgt.data as data then
            {
                observation.valueCodeableConcept as vcc, vcc.coding as coding where "$this.valueCodeableConcept.coding.code = 'CUP'" then
                {
                    vcc.text as text then {
                        observation -> data.blockindex = 2;
                        observation -> data.groupindex = 0;
                        observation -> data.itemid = 'id_2319';
                        coding.code -> data.values as values, values.value = evaluate(coding, '$this.code');
                    };
                };
            };
        };

        /* ------------------------------ Organization ---------------------------- */
        entry.resource as organization where "resource is Organization and resource.meta.profile = 'http://clinicalsite.org/fhir/StructureDefinition/organizationalunit'" then 
        {
            organization -> tgt.data as data then
            {
                organization.name as name then 
                {
                    organization -> data.blockindex = 4;
                    organization -> data.groupindex = 0;
                    organization -> data.itemid = 'id_1563';
                    name -> data.values as values, values.value = name;
                };
            };
            
            organization -> tgt.data as data then
            {
                organization.address as address then 
                {
                    address.text as text then 
                    {
                        organization -> data.blockindex = 4;
                        organization -> data.groupindex = 0;
                        organization -> data.itemid = 'id_1562';
                        text -> data.values as values, values.value = text;
                    };
                };
            };
        };


        /* ------------------------------ ServiceRequest ---------------------------- */
        entry.resource as servicerequest where "resource is ServiceRequest and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/tumorblock'" then 
        {
        //pathologe
        servicerequest -> tgt.data as data then
        {
        servicerequest.performer as performer ,performer.display as pathologe then 
            {
                servicerequest -> data.blockindex = 4;
                servicerequest -> data.groupindex = 0;
                servicerequest -> data.itemid = 'id_1560';
                pathologe -> data.values as values, values.value = pathologe;
            };
        };

        // Diagnostik Typ
        servicerequest -> tgt.data as data then
        {
            servicerequest.category as category then
            {
                category.coding as coding where "$this.coding.system = 'http://uk-koeln.de/fhir/ValueSet/nngm/anforderung-kategorie'" then
                {
                    servicerequest -> data.blockindex = 0;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_1368';
                    coding.display as display -> data.values as values, values.value = display;
                };
            };
        };
            
        // Tumorblockanforderung
        servicerequest -> tgt.data as data then
        {
            servicerequest.doNotPerform as dnp where "doNotPerform = false" then
            {
                servicerequest -> data.blockindex = 4;
                servicerequest -> data.groupindex = 0;
                servicerequest -> data.itemid  = 'id_2476';
                dnp -> data.values as values, values.value = 'no';
            };
        };
        

        servicerequest -> tgt.data as data then
        {
            servicerequest.doNotPerform as dnp where "doNotPerform = true" then
            {
                servicerequest -> data.blockindex = 4;
                servicerequest -> data.groupindex = 0;
                servicerequest -> data.itemid  = 'id_2476';
                dnp -> data.values as values, values.value = 'yes';
            };
        };
        

        //Grund zum entfallen der Tumorblockanforderung
        servicerequest -> tgt.data as data then
        {
            servicerequest.extension as entfallen, entfallen.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/grundEntfallBlockAnforderung'" then 
            {
                entfallen.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = 'bereitsUnterwegs'", vcc.coding as coding, coding.code as code then 
                {
                    code -> data.blockindex = 4;
                    code -> data.groupindex = 0;
                    code -> data.itemid = 'id_2490';
                    code -> data.values as values, values.value = 'Tumormaterial bereits unterwegs';
                };

                entfallen.valueCodeableConcept as vcc where "$this.valueCodeableConcept.coding.code = 'innerePathologie'", vcc.coding as coding, coding.code as code then 
                {
                    code -> data.blockindex = 4;
                    code -> data.groupindex = 0;
                    code -> data.itemid = 'id_2490';
                    code -> data.values as values, values.value = 'Antrag interne Pathologie';
                };
            };
        };

        //Liquid Biopsy
        servicerequest -> tgt.data as data then
        {
            servicerequest.extension as liquidbiopsy then 
            {
                liquidbiopsy.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/LiquidBiopsy'" then 
                {
                    servicerequest -> data.blockindex = 3;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2313';
                    liquidbiopsy -> data.values as values, values.value = value;
                };
            };
        };

        //GrundFehlendeBiopsie
        servicerequest -> tgt.data as data then
        {
            servicerequest.extension as liquidbiopsy then 
            {
                liquidbiopsy.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/GrundFehlendeBiopsieAnforderung'" then 
                {
                    servicerequest -> data.blockindex = 3;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2314';
                    liquidbiopsy -> data.values as values, values.value = value;
                };
            };
        };

        // Gewünschte diagnostik
        servicerequest -> tgt.data as data then
        {
            servicerequest.code as code, code.coding as coding where "$this.coding.system = 'http://uk-koeln.de/fhir/ValueSet/nngm/anforderung-code'" then                        
                {
                    servicerequest -> data.blockindex = 3;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2473';
                    coding.code as code -> data.values as values, values.value = code;
                };
        }; 

        // Tumorblock anforderung
        servicerequest -> tgt.data as data then
        {
            servicerequest.occurrenceDateTime as dt then 
            {
                    servicerequest -> data.blockindex = 4;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2477';
                    dt -> data.values as values, values.value = dt;
            };
        };

        // Wiederholungen
        servicerequest -> tgt.data as data then
        {
            servicerequest.extension as wiederholung where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/wiederholung'" then  
            {
                wiederholung.valueInteger as repeat then 
                {
                    servicerequest -> data.blockindex = 4;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2478';
                    repeat -> data.values as values, values.value = repeat;
                };
            };
        };

        //storno
        servicerequest -> tgt.data as data then
        {
            servicerequest.extension as storno then 
            {
                storno.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/storno'" then 
                {
                    servicerequest -> data.blockindex = 4;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2479';
                    storno.valueDateTime as dt -> data.values as values, values.value = dt;
                };
            };
        };


        //versandmaterial
        servicerequest -> tgt.data as data then
        {
            servicerequest.extension as versandmaterial then 
            {
                versandmaterial.value as value where "$this.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/versandmaterial'" then 
                {
                    servicerequest -> data.blockindex = 4;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2480';
                    versandmaterial.valueDateTime as dt -> data.values as values, values.value = dt;
                };
            };
        };
        };
    };
}

group TransformCheckboxes2474Checkboxes(source src: Bundle, target tgt: BackboneElement) 
{
    src.entry as entry then
    {
        // OrderDetail -> 3, 0, 2474
        entry.resource as servicerequest where "resource is ServiceRequest and resource.meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/tumorblock'" then
        {
            servicerequest.orderDetail as orderDetail where "$this.orderdetail.coding.code = 'C128554'" -> tgt.data as data collate then
            {
                orderDetail where "%tgt.data.where(itemid = 'id_2474').exists().not()" then
                {
                    servicerequest -> data.blockindex = 3;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2474';
                };
                servicerequest -> data.values as values, values.value = 'PD-L1';
            };

            servicerequest.orderDetail as orderDetail where "$this.orderdetail.coding.code = 'C38184'" -> tgt.data as data collate then
            {
                orderDetail where "%tgt.data.where(itemid = 'id_2474').exists().not()" then
                {
                    servicerequest -> data.blockindex = 3;
                    servicerequest -> data.groupindex = 0;
                    servicerequest -> data.itemid = 'id_2474';
                };
                servicerequest -> data.values as values, values.value = 'ALK';
            };
        };
    };
}