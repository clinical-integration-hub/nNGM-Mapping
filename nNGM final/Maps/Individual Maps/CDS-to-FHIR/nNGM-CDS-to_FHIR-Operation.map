/// version = 0.1
/// title = "nNGM_Mapping_Operation_Therapie"

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_OperationTherapieFHIR" = nNGM_Mapping_OperationTherapieFHIR

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/Procedure" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target

group TransformBundleOperationTherapie(source src: CTS_Transport, target bundle: Bundle)
{
    src -> bundle.entry as entry then CreateTransformProcedure(src, entry);
    src -> bundle.entry as entry then CreateTransformPatient(src, entry);
}

/* ------------------------------ Check whether Procedure needs to be created ---------------------------- */
group CreateTransformProcedure(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_842'
        or blockindex = 0 and groupindex = 0 and itemid = 'id_1162'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1167'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1168'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_2335'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_2400'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1176'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1353'
        or blockindex = 1 and groupindex = 0 and itemid = 'id_1362'
        or blockindex = 3 and groupindex = 0 and itemid = 'id_1472'" then
        {
            src -> tgt.resource = create('Procedure') as procedure then TransformProcedure(src, procedure);
        };
    };
}

/* ------------------------------ Procedure ---------------------------- */
group TransformProcedure(source src: CTS_Transport, target tgt: Procedure)
{
    // Mapped id with an universally unique identifier for Specimen
    src -> tgt.id = uuid();

    // Mapped profile with profile URL
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/OP';

    // Mapped subject, which is obligatory element on Simplifier, with a Patient
    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    // Mapped code, which is obligatory element on Simplifier, using the system and code already defined
    src -> tgt.code as code, code.coding = c('http://ncit.nci.nih.gov', 'C15329');

    // Category 
    src -> tgt.category as category,
           category.extension as dataAbsentReason,
           dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
           dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code'); 

    src.operations as operations, operations.data as data then
    {
        // Operationsdatum - performed.performedDateTime
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_842'" then
        {
            values.value as value -> tgt.performedDateTime = dateOp(value, 'date');
        };

        // DurchfÃ¼hrende Einrichtung - performer.actor.display
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1162'" then
        {
            values.value as value -> tgt.performer as performer, performer.actor as actor, actor.display = value;
        };

        // Operative Intention - reasonCode
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1167'" then
        {
            values.value where "$this.value = 'Kurativ'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/intention-op', 'K');
            };

            values.value where "$this.value = 'Palliativ'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/intention-op', 'P');
            };
            
            values.value where "$this.value = 'Diagnostisch'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/intention-op', 'D');
            };

            values.value where "$this.value = 'Revision\/Komplikation' or $this.value = 'Revision/Komplikation'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/intention-op', 'R');
            };

            values.value where "$this.value = 'Sonstiges'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/intention-op', 'S');
            };

            values.value where "$this.value = 'N\/A' or $this.value = 'N/A'" then 
            {
                values.value as value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/intention-op', 'X');
            };
        };

        // Art des Eingriffs - code.extension:artDesEingriffs
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1168'" then
        {
            values.value as value where "$this.value = 'N\/A' or $this.value = 'N/A'" then 
            {
                value ->    tgt.code as code, 
                            code.extension = create('BackboneElement') as artDesEingriffs,
                            artDesEingriffs.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/art-des-eingriffs',
                            artDesEingriffs.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/OperationArtDesEingriffsUNK', 'unknown');
            };
            
            values.value as value where "$this.value != 'N\/A' and $this.value != 'N/A'" then 
            {
                value ->    tgt.code as code, 
                            code.extension = create('BackboneElement') as artDesEingriffs,
                            artDesEingriffs.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/art-des-eingriffs',
                            artDesEingriffs.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/OperationArtDesEingriffsUNK', value);
            };
        };

        // Lokalisation (Auswahl) - bodySite.coding
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2335'" then
        {
            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then 
            {
                value -> tgt.bodySite as bodySite, bodySite.coding = c('http://uk-koeln.de/fhir/ValueSet/nNGM/OperationLokalisationUNK', 'unknown');
            };

            values.value as value where "$this.value != 'N/A' and $this.value != 'N\/A' and $this.value != 'other'" then 
            {
                value -> tgt.bodySite as bodySite, bodySite.coding = c('http://uk-koeln.de/fhir/ValueSet/nNGM/OperationLokalisationUNK', value);
            };

            values.value as value where "$this.isother = true" then 
            {
                value -> tgt.bodySite as bodySite, bodySite.coding = c('http://uk-koeln.de/fhir/ValueSet/nNGM/OperationLokalisationUNK', 'C17649');
            };
        };

        // Lokalisation (Freitext) - bodySite.text
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2335'" then
        {
            values.value as value where "$this.isother.exists()" then 
            {
                value -> tgt.bodySite as bodySite, bodySite.text = value;
            };
        };

        // Seitenlokalisation - extension:seitenlokalisation
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2400'" then
        {
            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value ->    tgt.bodySite as bodySite,
                            bodySite.extension = create('BackboneElement') as seitenLokalisation,
                            seitenLokalisation.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/seitenlokalisation',
                            seitenLokalisation.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/OperationSeitenlokalisation', 'unknown');
            };
            
            values.value as value where "$this.value != 'N/A' and $this.value != 'N\/A'" then
            {
                value ->    tgt.bodySite as bodySite,
                            bodySite.extension = create('BackboneElement') as seitenLokalisation,
                            seitenLokalisation.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/seitenlokalisation',
                            seitenLokalisation.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/OperationSeitenlokalisation', value);
            };
        };

        // Art der Resektion - code.extension:resektion.extension:resektionsart
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1176'" then
        {
            values.value as value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                value ->    tgt.code as code,
                            code.extension = create('BackboneElement') as resektion,
                            resektion.extension = create('BackboneElement') as resektionsart,
                            resektionsart.url = 'resektionsart',
                            resektionsart.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/OperationArtResektion', 'unknown');
            };

            values.value as value where "$this.value != 'N/A' and $this.value != 'N\/A'" then
            {
                value ->    tgt.code as code,
                            code.extension = create('BackboneElement') as resektion,
                            resektion.extension = create('BackboneElement') as resektionsart,
                            resektionsart.url = 'resektionsart',
                            resektionsart.valueCodeableConcept = cc('http://uk-koeln.de/fhir/CodeSystem/nngm/OperationArtResektion', value);
            };
        };

        // Resektionsstatus - code.extension:resektion.extension:resektionsstatus
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1353'" then
        {
            values.value as value ->    tgt.code as code,
                                        code.extension = create('BackboneElement') as resektion,
                                        resektion.extension = create('BackboneElement') as resektionsstatus,
                                        resektionsstatus.url = 'resektionsstatus',
                                        resektionsstatus.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/ngnm/resektionsstatus', value);

        };

        // Lymphadenektomie - extension:lymphadenektomie
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1362'" then
        {
            values.value where "$this.value = 'Ja'" then
            {
                values.value as value ->    tgt.extension = create('BackboneElement') as lymphadenektomie,
                                            lymphadenektomie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/lymphadenektomie',
                                            lymphadenektomie.valueBoolean = true;
            };
            
            values.value where "$this.value = 'Nein'" then
            {
                values.value as value ->    tgt.extension = create('BackboneElement') as lymphadenektomie,
                                            lymphadenektomie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/lymphadenektomie',
                                            lymphadenektomie.valueBoolean = false;
            };

            values.value where "$this.value = 'N/A' or $this.value = 'N\/A'" then
            {
                values.value as value ->    tgt.extension = create('BackboneElement') as lymphadenektomie,
                                            lymphadenektomie.extension as dataAbsentReason,
                                            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                                            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');
            };
        };

        // Bemerkungen - note.text
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1472'" then
        {
            values.value as value -> tgt.note as note, note.text = value;
        };
    };
}

/* ------------------------------ Check whether Patient needs to be created ---------------------------- */
group CreateTransformPatient(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2401'" then
        {
            src -> tgt.resource = create('Patient') as patient then TransformPatient(src, patient);
        };         
    };
}

/* ------------------------------ Patient ---------------------------- */
group TransformPatient(source src: CTS_Transport, target tgt: Patient)
{
    // Mapped id with an universally unique identifier for Specimen
    src -> tgt.id = uuid();

    // Mapped profile with profile URL
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM/patient';

    // Mapped name, which is a mandatory field without fixed value
    src -> tgt.name as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Mapped gender, which is a mandatory field without fixed value
    src -> tgt.gender as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Mapped birthDate, which is a mandatory field without fixed value
    src -> tgt.birthDate as name, name.extension as dataAbsentReason, dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    src.operations as operations, operations.data as data then
    {
        // Todesdatum
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2401'" then
        {
            values.value as value -> tgt.deceasedDateTime = dateOp(value, 'date');
        };
    };
}