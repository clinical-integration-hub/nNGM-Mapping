///version = 0.1
///title = "FusionNGSMAP"
/*
TODO
- OBSERVATION : (erster-fusionspartner-exon[Component]) Missing feature to transform string --> Integer 
- OBSERVATION : (fusionspartner-exon[Component]) Missing feature to transform string --> Integer
*/

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_FusionNGSFHIR" = nNGM_Mapping_FusionNGSFHIR

uses "http://hl7.org/fhir/StructureDefinition/CST_Transport" as source


uses "http://hl7.org/fhir/StructureDefinition/Specimen" as target
uses "http://hl7.org/fhir/StructureDefinition/DiagnosticReport" as target
uses "http://hl7.org/fhir/StructureDefinition/Observation" as target
uses "http://hl7.org/fhir/StructureDefinition/ServiceReqeust" as target


/* ------------------------------ Bundle ---------------------------- */
group TransformBundleNGSFusion(source src: CTS_Transport, target bundle: Bundle)
{
    src -> bundle.id = uuid();
    src -> bundle.type = 'collection';

    src -> bundle.entry as entry then CreateTransformSpecimen(src, entry);
    src -> bundle.entry as entry then CreateTransformDiagnosticReport(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationALK(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationRET(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationROS1(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationNTRK1(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationNTRK2(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationNTRK3(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationFGFR1(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationFGFR2(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationFGFR3(src, entry);
    src -> bundle.entry as entry then CreateTransformObservationSonstiges(src, entry);
    src -> bundle.entry as entry then CreateTransformServiceRequest(src, entry);
}

/* ------------------------------ Specimen ---------------------------- */
group CreateTransformSpecimen(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1601'" then
        {
            src -> tgt.resource = create('Specimen') as specimen then TransformSpecimen(src, specimen);
        };
    };
}
/* ------------------------------ Specimen ---------------------------- */
group TransformSpecimen(source src: CTS_Transport, target tgt: Specimen)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Specimen/nNGM';

    // Type : Item required on simplifier
    src -> tgt.type as type, type.coding as snomedGlobalPatientSet, snomedGlobalPatientSet.system = 'http://snomed.info/sct',
                                                                    snomedGlobalPatientSet.version = 'http://snomed.info/sct/900000000000207008',
                                                                    snomedGlobalPatientSet.code = 'UNKNOWN';

    // Patient 
    src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

    src.operations as operations, operations.data as data then
    {           
        //Biopsy-ID  
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1601'" then
        {
            values.value as value ->  tgt.identifier = create('Identifier') as biopsieId, 
                                      biopsieId.system = cast('http://uk-koeln.de/NamingSystem/nNGM/biopsienummer', 'FHIR.uri'),
                                      biopsieId.value = value;
        };
    };
}
/* ------------------------------DiagnosticReport---------------------------- */
group CreateTransformDiagnosticReport(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'assessment_id'" then
        {
            src -> tgt.resource = create('DiagnosticReport') as diagnosticReport then TransformDiagnosticReport(src, diagnosticReport);
        };          
    };
}
/* ------------------------------DiagnosticReport---------------------------- */
group TransformDiagnosticReport(source src: CTS_Transport, target tgt: DiagnosticReport)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/DiagnosticReport/nNGM/befund';

    //status: Item required on simplifier
    src ->  tgt.status as status, 
            status.extension as dataAbsentReason, 
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    //code: Item required on simplifie
    src ->  tgt.code as code, 
            code.extension as dataAbsentReason, 
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    src.operations as operations, operations.data as data then
    {
        /* ------------------------------Referenzen---------------------------- */
        // Untersuchungs-ID
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'assessment_id'" then
        {
            values.value as id ->    tgt.identifier = create('identifier') as befundNummer,
                                                            befundNummer.system= 'http://uk-koeln.de/NamingSystem/nNGM/befundnummer',
                                                            befundNummer.value = id;
        };
    };
}

/* ------------------ Check if Observation ALK needs to be creared  --------------------- */
group CreateTransformObservationALK(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 5 and groupindex = 0 and itemid ='id_2098'
                                    or blockindex = 5 and groupindex = 0 and itemid ='id_2099'
                                    or blockindex = 5 and groupindex = 0 and itemid ='id_2127'
                                    or blockindex = 5 and groupindex = 0 and itemid ='id_2128'
                                    or blockindex = 5 and groupindex = 0 and itemid ='id_2129'
                                    or blockindex = 5 and groupindex = 0 and itemid ='id_2130'
                                    or blockindex = 5 and groupindex = 0 and itemid ='id_2131'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationALK(src, observation);
        };
    };
}
/* ------------------------------ Observation ALK ----------------------------------- */
group TransformObservationALK(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'ALK', 'ALK');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid ='id_2098'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        //PhÃ¤notyp
        //TODO
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_2099'" then
        {
            values.value as value where "%tgt.component.code.where(coding.code = 'C16977').exists().not()" then
            {
                values.value as phaenotyp -> tgt.component = create('BackboneElement') as componentPhaenotyp then
                {
                    phaenotyp -> componentPhaenotyp.valueString = phaenotyp;
                    phaenotyp -> componentPhaenotyp.code = cc('http://ncit.nci.nih.gov', 'C16977');
                };
            };
        };
        
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_2127'" then
        {
                values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };

        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_2128'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };

        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_2129'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };

        //5' Fusionspartner Exon
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_2130'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentFusionsPartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };

        //ALK Exon
        data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_2131'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentExon then
            {
                value -> componentExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentExon.code = cc('http://ncit.nci.nih.gov', 'C13231');
            };
        };
    };
}
/* ------------------ Check if Observation RET needs to be creared  --------------------- */
group CreateTransformObservationRET(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 6 and  groupindex = 0 and itemid ='id_2183'
                                    or blockindex = 6 and  groupindex = 0 and itemid ='id_2184'
                                    or blockindex = 6 and  groupindex = 0 and itemid ='id_2206'
                                    or blockindex = 6 and  groupindex = 0 and itemid ='id_2207'
                                    or blockindex = 6 and  groupindex = 0 and itemid ='id_2208'
                                    or blockindex = 6 and  groupindex = 0 and itemid ='id_2209'
                                    or blockindex = 6 and  groupindex = 0 and itemid ='id_2210'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationRET(src, observation);
        };
    };
}
/* ------------------------------ Observation RET ----------------------------------- */
group TransformObservationRET(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'RET', 'RET');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 6 and  groupindex = 0 and itemid ='id_2183'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        //PhÃ¤notyp
        //TODO
        data.values as values where "blockindex = 6 and  groupindex = 0 and itemid ='id_2184'" then
        {
            values.value as value where "%tgt.component.code.where(coding.code = 'C16977').exists().not()" then
            {
                values.value as phaenotyp -> tgt.component = create('BackboneElement') as componentPhaenotyp then
                {
                    phaenotyp -> componentPhaenotyp.valueString = phaenotyp;
                    phaenotyp -> componentPhaenotyp.code = cc('http://ncit.nci.nih.gov', 'C16977');
                };
            };
        };
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 6 and  groupindex = 0 and itemid ='id_2206'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 6 and  groupindex = 0 and itemid ='id_2207'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 6 and  groupindex = 0 and itemid ='id_2208'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        //5' Fusionspartner Exon
        data.values as values where "blockindex = 6 and  groupindex = 0 and itemid ='id_2209'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentFusionsPartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };
        //RET Exon
        data.values as values where "blockindex = 6 and  groupindex = 0 and itemid ='id_2210'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentExon then
            {
                value -> componentExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentExon.code = cc('http://ncit.nci.nih.gov', 'C13231');
            };
        };
    };
}
/* ------------------ Check if Observation ROS1 needs to be creared  --------------------- */
group CreateTransformObservationROS1(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 7 and groupindex = 0 and itemid = 'id_2211'
                                    or blockindex = 7 and groupindex = 0 and itemid = 'id_2212'
                                    or blockindex = 7 and groupindex = 0 and itemid = 'id_2241'
                                    or blockindex = 7 and groupindex = 0 and itemid = 'id_2242'
                                    or blockindex = 7 and groupindex = 0 and itemid = 'id_2243'
                                    or blockindex = 7 and groupindex = 0 and itemid = 'id_2244'
                                    or blockindex = 7 and groupindex = 0 and itemid = 'id_2245'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationROS1(src, observation);
        };
    };
}
/* ------------------------------ Observation ROS1 ----------------------------------- */
group TransformObservationROS1(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'ROS1', 'ROS1');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_2211'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        //PhÃ¤notyp
        //TODO
        data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_2212'" then
        {
            values.value as value where "%tgt.component.code.where(coding.code = 'C16977').exists().not()" then
            {
                values.value as phaenotyp -> tgt.component = create('BackboneElement') as componentPhaenotyp then
                {
                    phaenotyp -> componentPhaenotyp.valueString = phaenotyp;
                    phaenotyp -> componentPhaenotyp.code = cc('http://ncit.nci.nih.gov', 'C16977');
                };
            };
        };
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_2241'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_2242'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_2243'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        //5' Fusionspartner Exon
        data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_2244'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentFusionsPartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };
        //ROS1 Exon
        data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_2245'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentExon then
            {
                value -> componentExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentExon.code = cc('http://ncit.nci.nih.gov', 'C13231');
            };
        };
    };
}
/* ------------------ Check if Observation NTRK1 needs to be creared  --------------------- */
group CreateTransformObservationNTRK1(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 8 and groupindex = 0 and itemid = 'id_2540'
                                    or blockindex = 8 and groupindex = 0 and itemid = 'id_2547'
                                    or blockindex = 8 and groupindex = 0 and itemid = 'id_2548'
                                    or blockindex = 8 and groupindex = 0 and itemid = 'id_2549'
                                    or blockindex = 8 and groupindex = 0 and itemid = 'id_2550'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationNTRK1(src, observation);
        };
    };
}
/* ------------------------------ Observation NTRK1 ----------------------------------- */
group TransformObservationNTRK1(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'NTRK1', 'NTRK1');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 8 and groupindex = 0 and itemid = 'id_2540'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 8 and groupindex = 0 and itemid = 'id_2547'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 8 and groupindex = 0 and itemid = 'id_2548'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 8 and groupindex = 0 and itemid = 'id_2549'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        //5' Fusionspartner Exon
        data.values as values where "blockindex = 8 and groupindex = 0 and itemid = 'id_2550'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentExon then
            {
                value -> componentExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };
    };
}
/* ------------------ Check if Observation NTRK2 needs to be creared  --------------------- */
group CreateTransformObservationNTRK2(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 9 and groupindex = 0 and itemid = 'id_2592'
                                    or blockindex = 9 and groupindex = 0 and itemid = 'id_2596'
                                    or blockindex = 9 and groupindex = 0 and itemid = 'id_2597'
                                    or blockindex = 9 and groupindex = 0 and itemid = 'id_2598'
                                    or blockindex = 9 and groupindex = 0 and itemid = 'id_2599'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationNTRK2(src, observation);
        };
    };
}
/* ------------------------------ Observation NTRK2 ----------------------------------- */
group TransformObservationNTRK2(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'NTRK2', 'NTRK2');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 9 and groupindex = 0 and itemid = 'id_2592'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 9 and groupindex = 0 and itemid = 'id_2596'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 9 and groupindex = 0 and itemid = 'id_2597'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 9 and groupindex = 0 and itemid = 'id_2598'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        //5' Fusionspartner Exon
        data.values as values where "blockindex = 9 and groupindex = 0 and itemid = 'id_2599'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentFusionsPartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };
    };
}
/* ------------------ Check if Observation NTRK3 needs to be creared  --------------------- */
group CreateTransformObservationNTRK3(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 10 and groupindex = 0 and itemid = 'id_2584'
                                    or blockindex = 10 and groupindex = 0 and itemid = 'id_2588'
                                    or blockindex = 10 and groupindex = 0 and itemid = 'id_2589'
                                    or blockindex = 10 and groupindex = 0 and itemid = 'id_2590'
                                    or blockindex = 10 and groupindex = 0 and itemid = 'id_2591'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationNTRK3(src, observation);
        };
    };
}
/* ------------------------------ Observation NTRK3 ----------------------------------- */
group TransformObservationNTRK3(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'NTRK3', 'NTRK3');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 10 and groupindex = 0 and itemid = 'id_2584'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 10 and groupindex = 0 and itemid = 'id_2588'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 10 and groupindex = 0 and itemid = 'id_2589'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 10 and groupindex = 0 and itemid = 'id_2590'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        //5' Fusionspartner Exon
        data.values as values where "blockindex = 10 and groupindex = 0 and itemid = 'id_2591'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentFusionsPartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };
    };
}
/* ------------------ Check if Observation FGFR1 needs to be creared  --------------------- */
group CreateTransformObservationFGFR1(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 11 and groupindex = 0 and itemid = 'id_2576'
                                    or blockindex = 11 and groupindex = 0 and itemid = 'id_2580'
                                    or blockindex = 11 and groupindex = 0 and itemid = 'id_2581'
                                    or blockindex = 11 and groupindex = 0 and itemid = 'id_2582'
                                    or blockindex = 11 and groupindex = 0 and itemid = 'id_2583'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationFGFR1(src, observation);
        };
    };
}
/* ------------------------------ Observation FGFR1 ----------------------------------- */
group TransformObservationFGFR1(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'FGFR1', 'FGFR1');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 11 and groupindex = 0 and itemid = 'id_2576'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 11 and groupindex = 0 and itemid = 'id_2580'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 11 and groupindex = 0 and itemid = 'id_2581'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 11 and groupindex = 0 and itemid = 'id_2582'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        //5' Fusionspartner Exon
        data.values as values where "blockindex = 11 and groupindex = 0 and itemid = 'id_2583'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentFusionsPartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };
    };
}
/* ------------------ Check if Observation FGFR2 needs to be creared  --------------------- */
group CreateTransformObservationFGFR2(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 12 and groupindex = 0 and itemid = 'id_2568'
                                    or blockindex = 12 and groupindex = 0 and itemid = 'id_2572'
                                    or blockindex = 12 and groupindex = 0 and itemid = 'id_2573'
                                    or blockindex = 12 and groupindex = 0 and itemid = 'id_2574'
                                    or blockindex = 12 and groupindex = 0 and itemid = 'id_2575'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationFGFR2(src, observation);
        };
    };
}
/* ------------------------------ Observation FGFR2 ----------------------------------- */
group TransformObservationFGFR2(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'FGFR2', 'FGFR2');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 12 and groupindex = 0 and itemid = 'id_2568'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 12 and groupindex = 0 and itemid = 'id_2572'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 12 and groupindex = 0 and itemid = 'id_2573'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 12 and groupindex = 0 and itemid = 'id_2574'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        //5' Fusionspartner Exon
        data.values as values where "blockindex = 12 and groupindex = 0 and itemid = 'id_2575'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentFusionsPartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };
    };
}
/* ------------------ Check if Observation FGFR3 needs to be creared  --------------------- */
group CreateTransformObservationFGFR3(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 13 and groupindex = 0 and itemid = 'id_2560'
                                    or blockindex = 13 and groupindex = 0 and itemid = 'id_2564'
                                    or blockindex = 13 and groupindex = 0 and itemid = 'id_2565'
                                    or blockindex = 13 and groupindex = 0 and itemid = 'id_2566'
                                    or blockindex = 13 and groupindex = 0 and itemid = 'id_2567'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationFGFR3(src, observation);
        };
    };
}
/* ------------------------------ Observation FGFR3 ----------------------------------- */
group TransformObservationFGFR3(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'FGFR3', 'FGFR3');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 13 and groupindex = 0 and itemid = 'id_2560'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };
        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 13 and groupindex = 0 and itemid = 'id_2564'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Fusionspartner
        //TODO
        data.values as values where "blockindex = 13 and groupindex = 0 and itemid = 'id_2565'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 13 and groupindex = 0 and itemid = 'id_2566'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        //5' Fusionspartner Exon
        data.values as values where "blockindex = 13 and groupindex = 0 and itemid = 'id_2567'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentFusionsPartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'fusionspartner-exon');
            };
        };
    };
}
/* ------------------ Check if Observation Sonstiges needs to be creared  --------------------- */
group CreateTransformObservationSonstiges(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2246'
                                    or blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2254'
                                    or blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2255'
                                    or blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2256'
                                    or blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2257'
                                    or blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2258'
                                    or blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2259'" then
        {
            src -> tgt.resource = create('Observation') as observation then TransformObservationSonstiges(src, observation);
        };
    };
}
/* ------------------------------ Observation Sonstiges ----------------------------------- */
group TransformObservationSonstiges(source src: CTS_Transport, target tgt: Observation)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/ngs-fusion-expression';

    //Code: Item required on simplifier profil
    //TODO
    src -> tgt.code = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/molpatho-obs-codes', 'Sonstiges', 'Sonstiges');

    //Fusion NGS
    src then MapSOPAssayHerstellerCategoryMethodStatus(src, tgt);

    src.operations as operations, operations.data as data then
    {
        // Date of Assessment
        data.values as values where "blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2246'" then
        {
            values.value as effectiveDT -> tgt.effectiveDateTime = dateOp(effectiveDT, 'date');
        };

        /*---------------------NGS Fusion -------------------------------*/
        //Ergebnis
        data.values as values where "blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2254'" then
        {
            values.value where "$this.value = 'positiv'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6576-8', 'Positive');
                };

                values.value where "$this.value = 'negativ'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA6577-6', 'Negative');
                };

                values.value where "$this.value = 'nicht auswertbar'" then 
                {
                    values.value as ergebnis ->  tgt.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/ergebnis-posNegIndNoCall', 'LA18198-4', 'No call');
                };
        };
        //Erster Fusionspartner
        data.values as values where "blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2255'" then
        {
            values.value as ersterfusionspartner -> tgt.component = create('BackboneElement') as componentErsterFusionspartner then
            {
                ersterfusionspartner -> componentErsterFusionspartner.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/hgnc-codes',ersterfusionspartner);
                ersterfusionspartner -> componentErsterFusionspartner.code = cc('http://loinc.org', '48018-6');
            };
        };
        //Zweiter Fusionspartner
        data.values as values where "blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2256'" then
        {
            values.value as fusionspartner -> tgt.component = create('BackboneElement') as componentFusionspartner then
            {
                fusionspartner -> componentFusionspartner.valueString = fusionspartner;
                fusionspartner -> componentFusionspartner.code = cc('http://ncit.nci.nih.gov', 'C28510');
            };
        };
        //Anzahl der Fusionsreads
        data.values as values where "blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2257'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentAnzahlDerFusionsreads then
            {
                value -> componentAnzahlDerFusionsreads.valueInteger = cast(value, 'FHIR.Integer');
                value -> componentAnzahlDerFusionsreads.code = cc('http://loinc.org', '82121-5');
            };
        };
        
        //TODO: 
        //Exon erster Fusionspartner
        data.values as values where "blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2258'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentErsterFusionspartnerExon then
            {
                value -> componentErsterFusionspartnerExon.valueString = value;
                value -> componentErsterFusionspartnerExon.code = cc('http://uk-koeln.de/fhir/CodeSystem/tbd-codes', 'erster-fusionspartner-exon');
            };
        };
        //Exon zweiter Fusionspartner
        data.values as values where "blockindex = 14 and groupindex = 0 and repeatindex = 0 and itemid ='id_2259'" then
        {
            values.value as value -> tgt.component = create('BackboneElement') as componentFusionsPartnerExon then
            {
                value -> componentFusionsPartnerExon.valueString = value;
                value -> componentFusionsPartnerExon.code = cc('http://ncit.nci.nih.gov', 'fusionspartner-exon');
            };
        };
    };
}
/* ------ Items for all the observation created---------- */
group MapSOPAssayHerstellerCategoryMethodStatus(source src :CTS_Transport, target tgt: Observation){
    //Items required on simplifier 
    /*
        - status
        - code
        - valueCodeableConcept
        - method
    */
    // Status : Item required on simplifier
    src ->  tgt.status as status, 
            status.extension as dataAbsentReason, 
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason', 
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    //FISH category
    src -> tgt.category as category then
    {
        src -> category.coding = create ('Coding') as coding, coding.system = 'http://terminology.hl7.org/CodeSystem/observation-category',
                                                                coding.code = 'laboratory';                                                    
    };

    src -> tgt.method = cc('http://ncit.nci.nih.gov','C101293');

    src.operations as operations, operations.data as data then
    {                      
        // SOP-Versionsnummer des Standorts
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2612'" then
        {
            values.value as sop -> tgt.component = create('BackboneElement') as componentSop then
            {
                sop -> componentSop.valueString = sop;
                sop -> componentSop.code = cc('http://ncit.nci.nih.gov', 'C48443');
            };
        };

        // Netzwerkzentrum
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2435'" then
        {
            values.value as nz -> tgt.component = create('BackboneElement') as nzcomponent then
            {
                values.value as value where "%tgt.component.where(code = 'C25341').exists().not()" then
                {
                    nz -> nzcomponent.valueString = nz;
                    nz -> nzcomponent.code = cc('http://ncit.nci.nih.gov', 'C25341');
                };
            };
        };
        
        /* ------------------------------Methodik---------------------------- */
        // Assay
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2538'" then
        {
            values.value as assay -> tgt.component = create('BackboneElement') as componentAssay then
            {
                assay -> componentAssay.code = cc('http://ncit.nci.nih.gov', 'C60819');
                assay -> componentAssay.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/ngs-assays',assay) ;
            };
        };

        //Hersteller 
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2539'" then
        {
            values.value as hersteller -> tgt.component = create('BackboneElement') as componentHersteller then
            {
                hersteller -> componentHersteller.code = cc('http://ncit.nci.nih.gov', 'C25392');
                //TODO
                hersteller -> componentHersteller.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/hersteller-molpatho', hersteller);
            };
        };
    };
}
/* -------------------------------------- Check if Service Request is required -------------------------------------------- */
group CreateTransformServiceRequest(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where   "blockindex = 15 and groupindex = 0 and itemid = 'id_2520'
                                    or blockindex = 15 and groupindex = 0 and itemid = 'id_2462'
                                    or blockindex = 15 and groupindex = 0 and itemid = 'id_2521'" then
        {
            src -> tgt.resource = create('ServiceRequest') as serviceRequest then TransformServiceRequest(src, serviceRequest);
        };
    };
}
/* -------------------------------------- Service Request -------------------------------------------- */
group TransformServiceRequest(source src: CTS_Transport, target tgt: ServiceRequest)
{
    src -> tgt.id = uuid();
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/ServiceRequest/nNGM/testung';

    src.operations as operations, operations.data as data then
    {
        //Status der Untersuchungen
        //Durchfuehrung
        data.values as values where "blockindex = 15 and groupindex = 0 and itemid = 'id_2520'" then
        {
            values.value as value where "$this.value = 'in Bearbeitung'" then 
            {
                value -> tgt.status = 'active' collate;
            };
            values.value as value where "$this.value = 'abgeschlossen'" then 
            {
                value -> tgt.status = 'completed' collate;
            };
        };
    };

    // Extensions
    src then TransformFusionNGSStatusExtension(src, tgt);
}
/* -------------------------------------- Create double extensions for Fusion NGS -------------------------------------------- */
group TransformFusionNGSStatusExtension(source src: CTS_Transport, target tgt: ServiceRequest)
{
    src.operations as operations, operations.data as data then
    {
        // Status des Abschlusses
        data.values as values where "blockindex = 15 and groupindex = 0 and itemid = 'id_2462'" then
        {
            values.value as value where "%tgt.status.extension.extension.where(url = 'status').exists().not()" then
            {
                value -> tgt.status as status collate, status.extension as statusAbschluss collate, statusAbschluss.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss', statusAbschluss.extension as statusExtension then
                {
                    value -> statusExtension.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/NNGM/statusAbschluss',value, value);
                    value -> statusExtension.url = 'status';
                };
            };
        };

        //Datum des Abschlusses
        data.values as values where "blockindex = 15 and groupindex = 0 and itemid = 'id_2521'" then
        {
            values.value as value where "%tgt.status.extension.extension.where(url = 'datum').exists().not()" then
            {
                value -> tgt.status as status collate, status.extension as statusAbschluss collate, statusAbschluss.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/statusAbschluss', statusAbschluss.extension as datumExtension then
                {
                    value -> datumExtension.valueDate = dateOp(value, 'date');
                    value -> datumExtension.url = 'datum';
                };
            };
        };
    };
}