/// version = 0.1
/// title = "nNGM_Mapping_SonstigeTherapie"


map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_SonstigeTherapieFHIR" = nNGM_Mapping_SonstigeTherapieFHIR

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/Procedure" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target

group TransformBundleSonstigeTherapie(source src: CTS_Transport, target bundle: Bundle)
{
    src -> bundle.entry as entry then CreateTransformProcedureLokalesVerfahren(src, entry);
    src -> bundle.entry as entry then CreateTransformProcedureAnderesVerfahren(src, entry);
    src -> bundle.entry as entry then CreateTransformProcedureKeineTherapie(src, entry);
    src -> bundle.entry as entry then CreatePatientSonstigeTherapie(src, entry);
}

/* ------------------------------ Checking if Art Der Therapie is 'Lokales Verfahren' ---------------------------- */
group CreateTransformProcedureLokalesVerfahren(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1213'" then
        {
            data.values as values where "values.value = 'lokales Verfahren'" then
            {
                src -> tgt.resource = create('Procedure') as procedure then TransformProcedureLokalesVerfahren(src, procedure);
            };
        };
    };
}

/* ------------------------------ Procedure - Lokales Verfahren ---------------------------- */
group TransformProcedureLokalesVerfahren(source src: CTS_Transport, target tgt: Procedure)
{
    // Mapped id with an universally unique identifier for Procedure
    src -> tgt.id = uuid();

    // Mapped profile with profile URL
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/SonstigeTherapie';

    // Called method to map general fields of Procedure profile
    src then TransformProcedureSonstigeTherapie(src, tgt);

}

/* ------------------------------ Checking if Art Der Therapie is 'Anderes Verfahren' ---------------------------- */
group CreateTransformProcedureAnderesVerfahren(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1213'" then
        {
            data.values as values where "values.value = 'anderes Verfahren'" then
            {
                src -> tgt.resource = create('Procedure') as procedure then TransformProcedureAnderesVerfahren(src, procedure);
            }; 
        };
    };
}

/* ------------------------------ Procedure - Anderes Verfahren ---------------------------- */
group TransformProcedureAnderesVerfahren(source src: CTS_Transport, target tgt: Procedure)
{
    // Mapped id with an universally unique identifier for Procedure
    src -> tgt.id = uuid();

    // Mapped profile with profile URL
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/SonstigeTherapie';

    // Called method to map general fields of Procedure profile
    src then TransformProcedureSonstigeTherapie(src, tgt);

}

/* ------------------------------ Checking if Art Der Therapie is 'keine Therapie' ---------------------------- */
group CreateTransformProcedureKeineTherapie(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1213'" then
        {
            data.values as values where "values.value = 'keine Therapie / Best Supportive Care'" then
            {
                src -> tgt.resource = create('Procedure') as procedure then TransformProcedureKeineTherapie(src, procedure);
            };
        };
    };
}

/* ------------------------------ Procedure - keine Therapie ---------------------------- */
group TransformProcedureKeineTherapie(source src: CTS_Transport, target tgt: Procedure)
{
    // Mapped id with an universally unique identifier for Procedure
    src -> tgt.id = uuid();

    // Mapped profile with profile URL
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/SonstigeTherapie';

    // Called method to map general fields of Procedure profile
    src then TransformProcedureSonstigeTherapie(src, tgt);
}

/* ------------------------------ Procedure ---------------------------- */
group TransformProcedureSonstigeTherapie(source src: CTS_Transport, target tgt: Procedure)
{

    // Mandatory fields
    src -> tgt.status as status,
            status.extension as dataAbsentReason,
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    src.operations as operations, operations.data as data then
    {
        src.patid as patid -> tgt.subject = create('Reference') as subject, subject.reference = evaluate(patid, '\'Patient/\' + $this');

        // Art der Therapie
        data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1213'" then 
        {
            values.value as artdertherapie -> tgt.category = cc('https://www.uk-koeln.de/fhir/ValueSet/SonstigeTherapieCategory', artdertherapie);
        };

        // Therapiebeginn
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1220'" then
        {
            values.value as value -> tgt.performedPeriod = create('BackboneElement') as performedPeriod collate, performedPeriod.start = dateOp(value, 'date');
        };

        // Therapieende
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_1221'" then
        {
            values.value as value -> tgt.performedPeriod = create('BackboneElement') as performedPeriod collate, performedPeriod.end = dateOp(value, 'date');
        };

        // Durchführende Einrichtung
        data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2434'" then
        {
            values.value as value -> tgt.performer as performer, performer.actor as actor, actor.display = value;
        };

        // Maintenance
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1360'" then
        {
            values.value as value ->    tgt.extension = create('BackboneElement') as maintenance,
                                        maintenance.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/maintenance',
                                        maintenance.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/dummy', value);
        };

        // Bemerkungen
        data.values as values where "blockindex = 4 and groupindex = 0 and itemid = 'id_1472'" then
        {
            values.value as value -> tgt.note as note, note.text = value;
        };

        // Grund für keine Therapie / BSC
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1547'" then
        {
            values.value as value ->    tgt.reasonCode as reasonCode,
                                        reasonCode.extension = create('BackboneElement') as grundKeineTherapie,
                                        grundKeineTherapie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/grund-keine-therapie',
                                        grundKeineTherapie.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nngm/SonstigeTherapieGrundKeineTherapieUNK', value);
        };

        // Lokalisation (Auswahl)
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1215'" then
        {
            values.value as value where "$this.value = 'Lunge' or $this.value = 'Leber'" then 
            {
                value -> tgt.bodySite = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/SonstigeTherapieLokalisationUNK', value);
            };

            values.value as value where "$this.value = 'other'" then 
            {
                value -> tgt.bodySite = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/SonstigeTherapieLokalisationUNK', 'C17649', value);
            };
        };

        // Lokalisation (Freitext)
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1215'" then
        {
            values.value as value where "$this.isother = true" then
            {
                value -> tgt.bodySite as bodySite, bodySite.text = value;
            };
        };

        // Methode (Auswahl)
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1467'" then
        {
            values.value as value where "$this.value = 'Transarterielle Chemoembolisation' or $this.value = 'Radiofrequenzablation' or $this.value = 'Selektive interne Radiotherapie'" then
            {
                values.value as value ->    tgt.code as code,
                                            code.extension = create('BackboneElement') as methode,
                                            methode.extension = create('BackboneElement') as extensionMethode,
                                            extensionMethode.url = 'methode',
                                            extensionMethode.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/sonstige-therapie-code', value);
            };
        };

        // Methode (Freitext)
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1467'" then
        {
            values.value as value where "$this.isother = true" then
            {
                values.value as value ->    tgt.code as code,
                                            code.extension = create('BackboneElement') as methode,
                                            methode.extension = create('BackboneElement') as sonstigeMethode,
                                            sonstigeMethode.url = 'sonstigeMethode',
                                            sonstigeMethode.valueCodeableConcept = cc('http://uk-koeln.de/fhir/ValueSet/nNGM/sonstige-therapie-code', value);
            };
        };

        // Therapeutische Intention (Auswahl)
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1218'" then
        {
            values.value as value where "$this.value = 'Alternative Methoden' or $this.value = 'other'" then
            {
                value -> tgt.reasonCode = cc('http://uk-koeln.de/fhir/ValueSet/nngm/intention-sonstige-therapieOther', value);
            };
        };

        // Therapeutische Intention (Freitext)
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1218'" then
        {
            values.value as value where "$this.isother = true" then
            {
                values.value as value -> tgt.reasonCode as reasonCode, reasonCode.text = value;
            };
        };

        // Bezeichnung / Beschreibung der alternativen Methoden
        data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1219'" then
        {
            values.value as value ->    tgt.reasonCode as reasonCode,
                                        reasonCode.extension = create('BackboneElement') as beschreibungAlternativeMethode,
                                        beschreibungAlternativeMethode.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/beschreiung-alternativer-methode',
                                        beschreibungAlternativeMethode.valueString = value;
        };
    };
}

/* ------------------------------ Check if Patient needs to be created ---------------------------- */
group CreatePatientSonstigeTherapie(source src: CTS_Transport, target tgt: BackboneElement)
{
    src.operations as operations, operations.data as data then
    {
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2401'" then
        {
            src -> tgt.resource = create('Patient') as patient then TransformPatientSonstigeTherapie(src, patient);
        };         
    };
}

/* ------------------------------ Patient ---------------------------- */
group TransformPatientSonstigeTherapie(source src: CTS_Transport, target tgt: Patient)
{
    // Mapped id with an universally unique identifier for Patient
    src -> tgt.id = uuid();

    // Mapped profile with profile URL
    src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Patient/nNGM';

    // Mapped patient name with dataAbsent because it's not asked on the form, but it's obligatory field
    src ->  tgt.name as name,
            name.extension as dataAbsentReason,
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Mapped patient gender with dataAbsent because it's not asked on the form, but it's obligatory field
    src ->  tgt.gender as gender,
            gender.extension as dataAbsentReason,
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    // Mapped patient birthdate with dataAbsent because it's not asked on the form, but it's obligatory field
    src ->  tgt.birthDate as birthDate,
            birthDate.extension as dataAbsentReason,
            dataAbsentReason.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            dataAbsentReason.valueCode = cast('not-asked', 'FHIR.code');

    src.operations as operations, operations.data as data then
    {
        // Todesdatum
        data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_2401'" then
        {
            values.value as value -> tgt.deceasedDateTime = dateOp(value, 'date');
        };
    };
}